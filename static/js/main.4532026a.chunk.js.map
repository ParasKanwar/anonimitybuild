{"version":3,"sources":["strings/url.js","components/Notes/Subjects/insideSubjectModal/ISMISM/ISMISM.jsx","components/NearBy/Problems/renderProblems.jsx","redux/reducers/index.js","components/Home/MyProblems/problemList/Problem.jsx","redux/store.js","redux/reducers/navigation.js","redux/reducers/visibility.js","redux/reducers/homeNavigation.js","redux/actionTypes.js","redux/reducers/authReducer.js","redux/reducers/userReducer.js","components/AppRouter/appRouter.jsx","components/Notes/Notes.jsx","components/Notes/SearchNotes/SearchNotes.jsx","components/imagecropper/IC.jsx","components/Notes/AddNote/AddNote.jsx","components/Notes/Subjects/Subject/Subject.jsx","components/Notes/Subjects/insideSubjectModal/ISM.jsx","components/About/About.jsx","components/Test/T.jsx","serviceWorker.js","ApiRequests/request.js","components/Person/OthersProfile/profile/Profile.jsx","images/complainify.png","index.js","images/password.png"],"names":["url","ISMISM","props","noteDetails","useState","upVotes","setUpVotes","downVotes","setDownVotes","isUpVoted","setIsUpVoted","isDownVoted","setIsDownVoted","open","Boolean","onClose","className","dimmer","style","display","alignItems","marginRight","src","by","profilephoto","flexDirection","flexGrow","username","fontSize","moment","postedOn","fromNow","color","marginTop","forSubject","topic","Content","pdfUrl","width","height","border","outline","boxShadow","title","disableRipple","onClick","handleUpVote","localStorage","getItem","_id","then","catch","animation","handleDownVote","fontFamily","fontWeight","Actions","token","id","headers","Headers","append","fetch","method","RenderList","Problems","map","problem","i","UpVotedByMe","UpVoted_By","find","user","DownVotedByMe","DownVoted_By","deviceType","socket","animationDelay","key","UserId","Author","profilePhoto","Anonymous","anonymous","header","image","Media","imageUrl","description","Description","createdAt","UpVotes","DownVotes","hasDeleteButton","history","combineReducers","navigationReducer","visibility","HomeReducer","authReducer","userReducer","connect","state","profilePhoto1","currentTab","setUpVote","setDownVote","commentSection","setCommentSection","commentDescription","setCommentDescription","commentSectionLoading","setCommentSectionLoading","commentsFetching","setCommentsFetching","comments","setComments","isEOpen","setExpansionPanel","anchorEl","setAnchorEl","isVotesLoading","setVotesLoading","votes","setVotes","undefined","whichVote","setWhichVote","isCommentCountFetch","setIsCommentCount","commentCount","setCommentCount","getCommentsCount","res","a","ok","json","count","handleGetVotedBy","type","getVotesBy","response","console","log","message","handleGetComments","getComments","rer","deletePost","request","Request","status","window","location","reload","setError","isImageLoading","setImage","isError","showImageModal","setModal","showDeleteModal","setDeleteModal","hidden","justifyContent","marginBottom","borderRadius","Header","cursor","push","dispatch","sizes","isHome","float","Meta","format","rectangular","onLoad","onError","wordWrap","hyphens","TransitionProps","unmountOnExit","expanded","onChange","e","elevation","expandIcon","aria-label","stopPropagation","onFocus","size","marginLeft","blue","UpVote","RemoveDownVote","RemoveUpVote","red","DownVote","on","data","prevState","comment","prev","length","currentTarget","variant","maxHeight","button","firstName","LastName","margin","placeholder","value","target","padding","disabled","postComment","background","basic","closeIcon","onContentMenu","centered","inverted","positive","_callbacks","backgroundColor","scrolling","Group","index","Avatar","By","as","Metadata","Text","Line","version","xmlns","viewBox","class","fill","stroke","stroke-width","stroke-miterlimit","cx","cy","r","stroke-linecap","x1","y1","x2","y2","createStore","reducer","initialState","action","Home","About","Ranking","NearBy","Person","Messages","Visibility","Width","Notes","MyProblems","Notices","email","college","backgroundPhoto","phone","AuthHeader","lazy","Chat","Login","HomeNav","NotFound","Auth","NearByProblems","MyProfile","Others","Signup","NearByNav","SensitiveProblems","Games","DefaultPage","FPEmail","PR","AuthMyProblems","fallback","minHeight","Component","AuthNearByProblems","AuthMyProfile","AuthOthers","AuthSensitive","AuthNotes","AuthMessages","AuthGames","isAuth","AuthenticatedRoutes","path","component","exact","T","getStyle","pageState","left","bottom","position","right","Notes1","addNotes","setAddNotes","successPosting","setSuccess","setPage","subject","setSubject","setTopic","autoHideDuration","transitionDuration","anchorOrigin","vertical","horizontal","handleSubjectChange","handleTopicChange","onSuccess","transition","upVotedBy","toString","downVotedBy","body","JSON","stringify","SearchNotes","searchQuery","setQuery","elAnchor","setElAnchor","subjectResult","topicResult","isTopicFetching","setTF","isSubjectFetching","setSF","setSFE","onTopicChange","resBody","onClickAway","touchEvent","autoComplete","name","subjects1","handleGetSubjects","zIndex","overflowY","disableSticky","element","for","course","toUpperCase","ProfilePhotoUploader","crop","unit","aspect","pp","loading","error","onSelectFile","files","reader","FileReader","addEventListener","setState","result","reÌ¥adAsDataURL","onImageLoaded","imageRef","onCropComplete","makeClientCrop","onCropChange","percentCrop","this","getCroppedImg","croppedImage","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","Error","ruleOfThirds","onComplete","theme","createMuiTheme","palette","primary","orange","disableElevation","fd","FormData","resbody","photo","pres","PureComponent","removeUploadedPhoto","MyAutoComplete","setAnchorEl1","anchorEl2","setAnchorEl2","subjects","setSubjects","setLoading","setSearchQuery","module","setModule","setTimeout","setSandM","subject1","n","getList","moduleCount","AddNotes","isTF","modalClass","setModalClass","forModule","formData","setFormDate","useEffect","modalLoading","setModalLoading","isFormNotValid","active","s","m","onBlur","accept","Authorization","contentType","info","file","onRemove","handlePostNotes","array","Subject","subjectAndModule","setSubjectAndModule","branch","setResult","firstTime","setFirstTime","totalCount","setTotalCount","selectedNote","setSelectedNote","currentPageNo","setPageNo","handleGetNotes","skip","textAlign","page","parseInt","ForTC","container","item","xs","children","lineHeight","textTransform","Responsive","onlyComputer","onlyTablet","onlyMobile","require","isLocalhost","hostname","match","register","config","navigator","URL","process","href","origin","swUrl","get","indexOf","serviceWorker","ready","registration","unregister","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","isAuthRequest","getMyProblems","start","offset","sortBy","getNearByProblems","options","filter","postMyPost","Post_Type","findPeople","logout","logoutall","PeopleProfile","getSomeoneProblems","getSensitiveContent","CenterStuff","RenderOtherProblems","complaints","isLoading","complaint","ListHeaderStyle","ImageModal","editable","ImageSrc","setSrc","grey","maxWidth","modalSize","readAsDataURL","htmlFor","ProfileInfo","openModal","setOpenModal","imgSrc","ppl","setPPl","bpl","setBPl","calculateWidth","dividerBack","Online","borderTopLeftRadius","borderTopRightRadius","transform","openEdit","setType","gender","Branch","rollno","lastSeen","yearofjoining","setComplaints","CL","setCL","setSkip","calculations","bottomVisible","userId","exports","rstore","store","ReactDOM","render","getElementById"],"mappings":"2HAAA,OAEeA,UAFH,6D,yMCSCC,EAAS,SAACC,GAAW,IACxBC,EAAgBD,EAAhBC,YADuB,EAGDC,mBAASD,EAAYE,SAHpB,mBAGxBA,EAHwB,KAGfC,EAHe,OAIGF,mBAASD,EAAYI,WAJxB,mBAIxBA,EAJwB,KAIbC,EAJa,OAKGJ,mBAASF,EAAMO,WALlB,mBAKxBA,EALwB,KAKbC,EALa,OAMON,mBAASF,EAAMS,aANtB,mBAMxBA,EANwB,KAMXC,EANW,KAO/B,OACE,kBAAC,IAAD,CACEC,KAAMC,QAAQX,GACdY,QAAS,WACPb,EAAMa,WAERC,UAAU,iBACVC,OAAO,YAEP,kBAAC,IAAD,KACE,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACzC,kBAAC,IAAD,CACEF,MAAO,CAAEG,YAAa,IACtBC,IAAKnB,EAAYoB,GAAGC,eAEtB,yBAAKN,MAAO,CAAEC,QAAS,OAAQM,cAAe,WAC5C,yBACEP,MAAO,CACLC,QAAS,OACTC,WAAY,SAEZM,SAAU,IAGZ,6BAAMvB,EAAYoB,GAAGI,WAEvB,yBAAKT,MAAO,CAAEU,SAAU,KAAxB,oBACoBC,IAAO1B,EAAY2B,UAAUC,aAIrD,yBAAKb,MAAO,CAAEU,SAAU,GAAII,MAAO,OAAQC,UAAW,KACnD9B,EAAY+B,YAEf,yBAAKhB,MAAO,CAAEU,SAAU,GAAII,MAAO,SAChC,YAAc7B,EAAYgC,QAG/B,kBAAC,IAAMC,QAAP,KACE,4BACEd,IAAKnB,EAAYmB,IAAIe,OACrBC,MAAM,OACNC,OAAO,QACPrB,MAAO,CAAEsB,OAAQ,OAAQC,QAAS,OAAQC,UAAW,QACrDC,MAAOxC,EAAYwC,SAGvB,kBAAC,IAAMP,QAAP,cAEE,kBAAC,IAAD,CACEQ,eAAa,EACbC,QAAS,WACPnC,GAAcD,GACdH,EAAYG,EAA0BJ,EAAU,EAAxBA,EAAU,GAClCG,EAAaG,EAAcJ,EAAY,EAAIA,GAC3CK,EAAeD,GAAeA,EAAcA,GAC5CmC,EACEC,aAAaC,QAAQ,sBACrB7C,EAAY8C,KAEXC,OACAC,UAGL,kBAAC,IAAD,CACEnC,UAAWP,EAAY,eAAiB,SACxCS,MAAO,CAAEkC,UAAW,WAnB1B,WAuBE,kBAAC,IAAD,CACEP,QAAS,WACPjC,GAAgBD,GAChBH,EAAcG,EAA8BJ,EAAY,EAA5BA,EAAY,GACxCD,EAAWG,EAAYJ,EAAU,EAAIA,GACrCK,EAAaD,GAAaA,EAAYA,GACtC4C,EACEN,aAAaC,QAAQ,sBACrB7C,EAAY8C,KAEXC,OACAC,SAELP,eAAa,GAEb,kBAAC,IAAD,CACE5B,UAAWL,EAAc,cAAgB,SACzCO,MAAO,CAAEkC,UAAW,WAGxB,kBAAC,cAAD,KACE,yBACElC,MAAO,CACLoC,WAAY,UACZ1B,SAAU,GACVP,YAAa,GACb+B,UAAW,OACXG,WAAY,QAEdvC,UAAWP,EAAY,eAAiB,UAR1C,eAUeJ,GAEf,yBACEa,MAAO,CACLoC,WAAY,UACZ1B,SAAU,GACVwB,UAAW,OACXG,WAAY,QAEdvC,UAAWL,EAAc,cAAgB,UAP3C,iBASiBJ,KAIrB,kBAAC,IAAMiD,QAAP,KACE,kBAAC,IAAD,CACEX,QAAS,WACP3C,EAAMa,YAFV,YAYF+B,EAAe,SAACW,EAAOC,GAC3B,IAAMC,EAAU,IAAIC,QAEpB,OADAD,EAAQE,OAAO,gBAAiBJ,GACzBK,MAAM,GAAD,OAAI9D,UAAJ,yBAAwB0D,GAAM,CAAEK,OAAQ,MAAOJ,aAEvDN,EAAiB,SAACI,EAAOC,GAC7B,IAAMC,EAAU,IAAIC,QAEpB,OADAD,EAAQE,OAAO,gBAAiBJ,GACzBK,MAAM,GAAD,OAAI9D,UAAJ,2BAA0B0D,GAAM,CAAEK,OAAQ,MAAOJ,c,iCCzJ/D,oCAmDeK,UAhDI,SAAC9D,GAClB,OACE,6BACGA,EAAM+D,SACH/D,EAAM+D,SAASC,KAAI,SAACC,EAASC,GAC3B,IAAMC,EAAcF,EAAQG,WAAWC,MAAK,SAACC,GAC3C,OAAOA,EAAKA,OAAStE,EAAMwD,MAEvBe,EAAgBN,EAAQO,aAAaH,MAAK,SAACC,GAC/C,OAAOA,EAAKA,OAAStE,EAAMwD,MAG7B,OACE,kBAAC,UAAD,CACEiB,WAAYzE,EAAMyE,WAClBC,OAAQ1E,EAAM0E,OACd5D,UAAU,mBACVE,MAAO,CAAE2D,eAAoB,GAAJT,EAAU,KACnCU,IAAKX,EAAQlB,IACboB,cAAeA,EACfI,gBAAiBA,EACjBM,OAAQZ,EAAQa,OAAO/B,IACvBS,GAAIS,EAAQlB,IACZgC,aACEd,EAAQe,UACJ,kGACAf,EAAQa,OAAOxD,aAErBG,SACEwC,EAAQe,UAAY,YAAcf,EAAQa,OAAOrD,SAEnDwD,UAAWhB,EAAQe,UACnBE,OAAQ,mBACRC,MAAQlB,EAAQmB,MAAanB,EAAQmB,MAAMC,SAAnB,GACxBC,YAAarB,EAAQsB,YACrBC,UAAWvB,EAAQuB,UACnBC,QAASxB,EAAQwB,QACjBC,UAAWzB,EAAQyB,UACnBC,iBAAiB,EACjBC,QAAS5F,EAAM4F,aAIrB,M,iCC9CV,iEAMeC,sBAAgB,CAC7BC,4BACAC,qBACAC,sBACAC,sBACAC,6B,qaCw0BaC,uBAPS,SAACC,GACvB,MAAO,CACLC,cAAeD,EAAMF,YAAYnB,aACjCuB,WAAYF,EAAMN,kBAAkBQ,cAIzBH,EAhxBC,SAACnG,GAAW,IAAD,EACKE,mBAASF,EAAMyF,SADpB,mBAClBtF,EADkB,KACTC,EADS,OAESF,mBAASF,EAAM0F,WAFxB,mBAElBrF,EAFkB,KAEPC,EAFO,OAGMJ,mBAASF,EAAMmE,aAHrB,mBAGlB5D,EAHkB,KAGPgG,EAHO,OAIUrG,mBAASF,EAAMuE,eAJzB,oBAIlB9D,GAJkB,MAIL+F,GAJK,SAKmBtG,oBAAS,GAL5B,qBAKlBuG,GALkB,MAKFC,GALE,SAM2BxG,mBAAS,IANpC,qBAMlByG,GANkB,MAMEC,GANF,SAOiC1G,oBAAS,GAP1C,qBAOlB2G,GAPkB,MAOKC,GAPL,SAQuB5G,oBAAS,GARhC,qBAQlB6G,GARkB,MAQAC,GARA,SASO9G,mBAAS,IAThB,qBASlB+G,GATkB,MASRC,GATQ,SAUYhH,oBAAS,GAVrB,qBAUlBiH,GAVkB,MAUTC,GAVS,SAWOlH,mBAAS,MAXhB,qBAWlBmH,GAXkB,MAWRC,GAXQ,SAYiBpH,oBAAS,GAZ1B,qBAYlBqH,GAZkB,MAYFC,GAZE,SAaCtH,mBAAS,IAbV,qBAalBuH,GAbkB,MAaXC,GAbW,SAcSxH,wBAASyH,GAdlB,qBAclBC,GAdkB,MAcPC,GAdO,SAewB3H,oBAAS,GAfjC,qBAelB4H,GAfkB,MAeGC,GAfH,SAgBe7H,mBAAS,GAhBxB,qBAgBlB8H,GAhBkB,MAgBJC,GAhBI,MAkBpBH,IACHI,2BAAiBlI,EAAMwD,IACpBR,KADH,uCACQ,WAAOmF,GAAP,SAAAC,EAAA,0DACAD,EAAIE,GADJ,4BAEFJ,GAFE,SAEqBE,EAAIG,OAFzB,mBAEiCC,OAFjC,cAGFR,IAAkB,GAHhB,uBAKFA,IAAkB,GALhB,4CADR,uDASG9E,OAAM,WACL8E,IAAkB,MAIxB,IAAMS,GAAgB,uCAAG,WAAOC,GAAP,iBAAAL,EAAA,+EAEEM,qBACrB7F,aAAaC,QAAQ,sBACrB9C,EAAMwD,GACNiF,GALmB,YAEfE,EAFe,QAQRN,GARQ,iCASDM,EAASL,OATR,OASbH,EATa,OAUnBT,GAASS,GACTX,IAAgB,GAXG,0DAcrBE,GAAS,IACTF,IAAgB,GAChBoB,QAAQC,IAAI,KAAEC,SAhBO,0DAAH,sDAmBhBC,GAAiB,uCAAG,8BAAAX,EAAA,sEAEtBpB,IAAoB,GAFE,SAIJgC,sBAChBhJ,EAAMwD,GACNX,aAAaC,QAAQ,uBAND,cAIhBqF,EAJgB,gBASJA,EAAIG,OATA,OAShBW,EATgB,OAWtB/B,GAAY+B,GACZjC,IAAoB,GAZE,kDActB4B,QAAQC,IAAI,KAAEC,SACd9B,IAAoB,GAfE,0DAAH,qDAqFjBkC,GAAU,uCAAG,gCAAAd,EAAA,6DACX3E,EAAU,IAAIC,QACdH,EAAQV,aAAaC,QAAQ,sBACnCW,EAAQE,OAAO,gBAAiBJ,GAChCE,EAAQE,OAAO,eAAgB,oBACzBwF,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,sBAAgCE,EAAMwD,IAAM,CAC1DK,OAAQ,SACRJ,YAPe,kBAUQG,MAAMuF,GAVd,OAWS,MAXT,OAWFE,QACXC,OAAOC,SAASC,QAAO,GAEzBC,IAAS,GAdM,kDAgBfA,IAAS,GAhBM,0DAAH,qDAzIS,GA4JUvJ,oBAAS,GA5JnB,qBA4JlBwJ,GA5JkB,MA4JFC,GA5JE,SA6JGzJ,oBAAS,GA7JZ,qBA6JlB0J,GA7JkB,MA6JTH,GA7JS,SA8JUvJ,oBAAS,GA9JnB,qBA8JlB2J,GA9JkB,MA8JFC,GA9JE,SA+JiB5J,oBAAS,GA/J1B,qBA+JlB6J,GA/JkB,MA+JDC,GA/JC,MAgLzB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,QAAM,IACf,kBAAC,IAAD,CACEnJ,UAAWd,EAAMc,UACjBE,MAAK,eACAhB,EAAMgB,MADN,GAnBgB,SAArBhB,EAAMyE,WACD,CAAErC,MAAO,KAEO,QAArBpC,EAAMyE,WACD,CAAErC,MAAO,KAEO,QAArBpC,EAAMyE,WACD,CAAErC,MAAO,KAEbpC,EAAMyE,gBAAX,EACS,CAAErC,MAAO,QAST,CAGHE,OAAQ,OACRrB,QAAS,OACTiJ,eAAgB,SAChBC,aAAc,GACd3H,UAAW,+BACX4H,aAAc,KAGhB,kBAAC,IAAKlI,QAAN,KACE,kBAAC,IAAKmI,OAAN,CACErJ,MAAO,CAAEc,MAAO,OAAQsB,WAAY,UAAWkH,OAAQ,WACvD3H,QAAS,WACF/B,QAAQZ,EAAMiF,aACjBjF,EAAM4F,QAAQ2E,KAAd,4BAAwCvK,EAAM6E,SAC9C7E,EAAMwK,SAAS,CAAE/B,KAAM,cAI3B,kBAAC,IAAD,CAAQgC,MAAM,QAAQrJ,IAAKpB,EAAM+E,eAChC/E,EAAMyB,SACNzB,EAAMiF,WAAajF,EAAM0K,OACxB,kBAAC,IAAD,CAASjI,MAAM,0BACb,kBAAC,IAAD,CACEzB,MAAO,CAAE2J,MAAO,SAChBvJ,IAAK,uDAIT,IAGJ,kBAAC,IAAKwJ,KAAN,CAAW5J,MAAO,CAAEc,MAAO,OAAQsB,WAAY,YAC5C,UACCzB,IAAO3B,EAAMwF,WAAW3D,UACxB,SAEAF,IAAO3B,EAAMwF,WAAWqF,OAAO,QAGpCnB,GACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBoB,aAAW,KAG/B,GAEF,yBACEnI,QAAS,WACPmH,IAAS,KAGX,kBAAC,IAAD,CACE1I,IAAKpB,EAAMmF,MACXnE,MACE0I,IAAkBE,GACd,CAAExH,MAAO,EAAGC,OAAQ,GACpB,CAAED,MAAO,QAEf2I,OAAQ,WACNpB,IAAS,IAEXqB,QAAS,WACPrB,IAAS,GACTF,IAAS,OAIf,kBAAC,IAAKvH,QAAN,KACE,kBAAC,IAAKA,QAAN,KACE,yBACElB,MAAO,CACLoC,WAAY,UACZ1B,SAAU,GACV2B,WAAY,SACZvB,MAAO,UALX,wBAWF,kBAAC,IAAKI,QAAN,KACE,kBAAC,IAAKqD,YAAN,CACEvE,MAAO,CACLqC,WAAY,MACZD,WAAY,UACZ6H,SAAU,aACVC,QAAS,OACTnJ,UAAW,KAGZ/B,EAAMsF,eAKb,kBAAC,IAAD,CACE6F,gBAAiB,CAAEC,eAAe,GAClCC,SAAUlE,GACVmE,SAAU,SAACC,EAAGrH,GACZkD,GAAkBlD,IAEpBsH,UAAW,GAEX,kBAAC,IAAD,CACEC,WACE,kBAAC,IAAD,CAAShJ,MAAO,UACd,kBAAC,IAAD,QAIJ,kBAAC,IAAD,CACEiJ,aAAW,cACX/I,QAAS,SAAC4I,GAAD,OAAOA,EAAEI,mBAClBC,QAAS,SAACL,GACRA,EAAEI,oBAGHxL,EACD,kBAAC,IAAD,CAASsC,MAAM,UACb,kBAAC,IAAD,CACEoJ,KAAK,SACL7K,MAAO,CACL8K,WAAY,OACZ3K,YAAa,KACbW,MAAOvB,EAAYwL,IAAK,KAAO,QAEjCpJ,QAAS,WA/OnBlC,IACF+F,IAAY,GACZlG,GAAa,SAAC8F,GACZ,OAAOA,EAAQ,KAEjBhG,GAAW,SAACgG,GACV,OAAOA,EAAQ,KAEjBG,GAAU,SAACH,GACT,OAAO,KAET4F,iBAAOhM,EAAMwD,GAAIX,aAAaC,QAAQ,uBAAuBE,MAC3D,SAACmF,GACC8D,yBAAejM,EAAMwD,GAAIX,aAAaC,QAAQ,2BAGxCvC,EAQDA,IACTH,GAAW,SAACgG,GACV,OAAOA,EAAQ,KAEjBG,GAAU,SAACH,GACT,OAAO,KAET8F,uBAAalM,EAAMwD,GAAIX,aAAaC,QAAQ,yBAd5C1C,GAAW,SAACgG,GACV,OAAOA,EAAQ,KAEjBG,GAAU,SAACH,GACT,OAAO,KAET4F,iBAAOhM,EAAMwD,GAAIX,aAAaC,QAAQ,0BA4N1B,kBAAC,IAAD,CACEhC,UAAWP,EAAY,eAAiB,aAK7CF,EACD,kBAAC,IAAD,CAASoC,MAAM,YACb,kBAAC,IAAD,CACEoJ,KAAK,SACL7K,MAAO,CACL8K,WAAY,KACZhK,MAAOrB,GAAc0L,IAAI,KAAO,QAElCxJ,QAAS,WA9NnBpC,GACFgG,GAAU,GACVnG,GAAW,SAACgG,GACV,OAAOA,EAAQ,KAEjB9F,GAAa,SAAC8F,GACZ,OAAOA,EAAQ,KAEjBI,IAAY,GACZ4F,mBAASpM,EAAMwD,GAAIX,aAAaC,QAAQ,uBAAuBE,MAC7D,SAACmF,GACC,OAAO+D,uBACLlM,EAAMwD,GACNX,aAAaC,QAAQ,2BAIjBrC,GAMDA,KACTH,GAAa,SAAC8F,GACZ,OAAOA,EAAQ,KAEjBI,IAAY,GACZyF,yBAAejM,EAAMwD,GAAIX,aAAaC,QAAQ,yBAV9CxC,GAAa,SAAC8F,GACZ,OAAOA,EAAQ,KAEjBI,IAAY,GACZ4F,mBAASpM,EAAMwD,GAAIX,aAAaC,QAAQ,0BA4M5B,kBAAC,IAAD,CACEhC,UAAWL,GAAc,cAAgB,aAI/C,kBAAC,IAAD,CAASgC,MAAM,YACb,kBAAC,IAAD,CACEE,QAAS,WACPoG,KACArC,IAAkB,GAClB1G,EAAM0E,OAAO2H,GAAG,WAAW,SAACC,GAC1BpF,IAAY,SAACqF,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAsBD,EAAKA,KAAKE,aAElCvE,IAAgB,SAACwE,GACf,OAAOA,EAAO,UAKpB,kBAAC,IAAD,QAGHxF,GAASyF,QAAU1E,KAIxB,kBAAC,IAAD,KACE,2CACA,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACG7H,EAAU,EACT,kBAAC,IAAD,CACEwC,QAAS,SAAC4I,GACRjE,GAAYiE,EAAEoB,eACdnF,IAAgB,GAChBK,GAAa,WACbW,GAAiB,eALrB,cAWA,GAEDnI,EAAY,EACX,kBAAC,IAAD,CACEsC,QAAS,SAAC4I,GACRjE,GAAYiE,EAAEoB,eACdnF,IAAgB,GAChBK,GAAa,aACbW,GAAiB,iBALrB,gBAWA,GAGDxI,EAAM2F,gBACL,kBAAC,IAAD,CACEiH,QAAQ,WACRjK,QAAS,WACPqH,IAAe,KAGjB,kBAAC,IAAD,CAAQhJ,MAAO,CAAEc,MAAOqK,IAAI,QAN9B,WASA,KAIN,kBAAC,IAAD,CACE9E,SAAUA,GACV1G,KAAMC,QAAQyG,IACdxG,QAAS,WACPyG,GAAY,MACZO,QAAaF,GACbD,GAAS,KAEX1G,MAAO,CAAE6L,UAAW,MAEnBtF,GACC,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUqF,QAAQ,SAASxK,MAAO,GAAIC,OAAQ,KAC9C,kBAAC,IAAD,CAAUuK,QAAQ,OAAOxK,MAAO,IAAKC,OAAQ,OAG/CoF,GAAMiF,OAAS,EACjBjF,GAAMzD,KAAI,YAAe,IAAZM,EAAW,EAAXA,KACX,OACE,kBAAC,IAAD,CACEM,IAAKN,EAAKvB,IACV+J,QAAM,EACNnK,QAAS,WACP3C,EAAMwK,SAAS,CAAE/B,KAAM,WACvBzI,EAAM4F,QAAQ2E,KAAd,4BAAwCjG,EAAKvB,MACpB,WAArB/C,EAAMsG,YACRgD,OAAOC,SAASC,QAAO,KAI3B,kBAAC,IAAD,CAAQpI,IAAKkD,EAAKhD,eAClB,yBACEN,MAAO,CACL8K,WAAY,GACZ1J,MAAO,IACPiB,WAAY,OACZD,WAAY,YAGbkB,EAAKyI,UAAY,IAAMzI,EAAK0I,cAMrC,yBACEhM,MAAO,CACLiM,OAAQ,GACR5J,WAAY,OACZD,WAAY,UACZhB,MAAO,MALX,aAQSwF,MAIb,kBAAC,IAAK1F,QAAN,KACG2E,GACC,kBAAC,IAAD,CACE7F,MAAO,CAAEoB,MAAO,GAAIC,OAAQ,GAAIP,MAAO,WAGzC,2BACEoL,YAAY,aACZC,MAAOxG,GACP2E,SAAU,SAACC,GACT3E,GAAsB2E,EAAE6B,OAAOD,QAEjCnM,MAAO,CACLoB,MAAO,MACPE,OAAQ,OACRZ,SAAU,GACV0B,WAAY,UACZiK,QAAS,EACT9K,QAAS,UAIf,kBAAC,IAAD,CAASE,MAAM,gBACb,4BACE6K,WAAU3G,GAAmB+F,OAAS,GACtC/J,QAAO,sBAAE,8BAAAyF,EAAA,sEAEC7E,EAAQV,aAAaC,QAAQ,sBACnCgE,IAAyB,GAHpB,SAIayG,sBAChBvN,EAAMwD,GACND,EACAoD,IAPG,cAICwB,EAJD,gBASaA,EAAIG,OATjB,cAUc,MAAfH,EAAIkB,QACNzC,GAAsB,IAExBE,IAAyB,GAbpB,kDAeLA,IAAyB,GAfpB,0DAkBT9F,MAAO,CACLqM,QAAS,EACTvL,MAAoC,GAA7B6E,GAAmB+F,OAAcX,IAAK,KAAOA,IAAK,KACzDpB,MAAO,QACP6C,WAAY,cACZ9L,SAAU,GACV0B,WAAY,UACZd,OAAQ,OACRC,QAAS,OACT+H,OAAQ,UACRnJ,YAAa,KA9BjB,WAsCN,kBAAC,IAAD,CAAS8I,QAAM,IACf,kBAAC,IAAD,CACEtJ,KAAMkJ,GACN4D,OAAK,EACL5M,QAAS,WACPiJ,IAAS,IAEX4D,WAAS,GAET,kBAAC,IAAD,CAAOC,cAAc,gBAAgBvM,IAAKpB,EAAMmF,MAAOyI,UAAQ,KAEhE5N,EAAM2F,gBACL,kBAAC,IAAD,CAAO8H,OAAK,EAAC9M,KAAMoJ,IACjB,kBAAC,IAAMM,OAAP,4BACA,kBAAC,IAAMnI,QAAP,KACE,4EAEF,kBAAC,IAAMoB,QAAP,KACE,kBAAC,IAAD,CACEX,QAAS,WACPqH,IAAe,IAEjBlI,MAAM,MACN+L,UAAQ,GALV,MASA,kBAAC,IAAD,CACEC,UAAQ,EACRnL,QAAS,WACPuG,MAEFpH,MAAM,QACN+L,UAAQ,GANV,SAaJ,GAEDpH,GACC,kBAAC,IAAD,CACE9F,KAAM8F,GACNoF,KAAK,OACLhL,QAAS,WACP6F,IAAkB,GAClB1G,EAAM0E,OAAOqJ,WAAb,SAAsC,KAGxC,kBAAC,IAAD,CACE/M,MAAO,CACLoC,WAAY,UACZ4K,gBAAiB,gBACjBtM,SAAU,KAGZ,yBACEV,MAAO,CACLC,QAAS,OACTiJ,eAAgB,aAChBpI,MAAO,0BAJX,cAOc,IACO,aAAlB9B,EAAMyB,SACH,YACAzB,EAAMyB,SAAW,KAAM,IAV7B,YAcF,kBAAC,IAAMS,QAAP,CAAepB,UAAU,aAAamN,WAAS,GAC7C,kBAAC,IAAQC,MAAT,KACGjH,GAASyF,OAAS,IAAM3F,GACvBE,GAASjD,KAAI,SAACwI,EAAS2B,GACrB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAASvJ,IAAK4H,EAAU2B,EAAOrN,UAAU,kBACvC,kBAAC,IAAQsN,OAAT,CAAgBhN,IAAKoL,EAAQ6B,GAAG/M,eAChC,kBAAC,IAAQY,QAAT,KACE,kBAAC,IAAQ4C,OAAT,CACEwJ,GAAG,IACH3L,QAAS,WACP3C,EAAMwK,SAAS,CAAE/B,KAAM,WACvBzI,EAAM4F,QAAQ2E,KAAd,4BACuBiC,EAAQ6B,GAAGtL,OAGpC/B,MAAO,CACLoC,WAAY,YAGboJ,EAAQ6B,GAAGtB,UAAY,IAAMP,EAAQ6B,GAAGrB,UAE3C,kBAAC,IAAQuB,SAAT,KACG/B,EAAQhH,UACL7D,IAAO6K,EAAQhH,WAAW3D,UAC1B,IAEN,kBAAC,IAAQ2M,KAAT,CACExN,MAAO,CACLoC,WAAY,YAGboJ,EAAQlH,eAIf,kBAAC,IAAD,CAAS2E,QAAM,QAInBlD,GACF,kBAAC,IAAD,KACE,kBAAC,IAAYsD,OAAb,CAAoBlF,OAAK,GACvB,kBAAC,IAAYsJ,KAAb,MACA,kBAAC,IAAYA,KAAb,OAEF,kBAAC,IAAYpE,OAAb,CAAoBlF,OAAK,GACvB,kBAAC,IAAYsJ,KAAb,MACA,kBAAC,IAAYA,KAAb,OAEF,kBAAC,IAAYpE,OAAb,CAAoBlF,OAAK,GACvB,kBAAC,IAAYsJ,KAAb,MACA,kBAAC,IAAYA,KAAb,QAIJ,yBACEzN,MAAO,CACLC,QAAS,OACTM,cAAe,SACfL,WAAY,WAGd,yBACEJ,UAAU,MACV4N,QAAQ,MACRC,MAAM,6BACNC,QAAQ,mBAER,4BACEC,MAAM,cACNC,KAAK,OACLC,OAAO,UACPC,eAAa,IACbC,oBAAkB,KAClBC,GAAG,OACHC,GAAG,OACHC,EAAE,SAEJ,0BACEP,MAAM,YACNC,KAAK,OACLC,OAAO,UACPC,eAAa,IACbK,iBAAe,QACfJ,oBAAkB,KAClBK,GAAG,OACHC,GAAG,OACHC,GAAG,OACHC,GAAG,SAEL,0BACEZ,MAAM,aACNC,KAAK,OACLC,OAAO,UACPC,eAAa,IACbK,iBAAe,QACfJ,oBAAkB,KAClBK,GAAG,OACHC,GAAG,KACHC,GAAG,OACHC,GAAG,UAGP,uBAAGZ,MAAM,SAAT,mBACA,yBAAK7N,MAAO,CAAEU,SAAU,GAAI0B,WAAY,YAAxC,uBAOR,kBAAC,IAAD,CAASpC,MAAO,CAAEmJ,aAAc,EAAGpI,UAAW,KAC9C,kBAAC,IAAMG,QAAP,KACG2E,GACC,kBAAC,IAAD,CACE7F,MAAO,CAAEoB,MAAO,GAAIC,OAAQ,GAAIP,MAAO,WAGzC,2BACEoL,YAAY,aACZC,MAAOxG,GACP2E,SAAU,SAACC,GACT3E,GAAsB2E,EAAE6B,OAAOD,QAEjCnM,MAAO,CACLoB,MAAO,MACPE,OAAQ,OACRZ,SAAU,GACV0B,WAAY,UACZiK,QAAS,EACT9K,QAAS,UAIf,4BACE+K,WAAU3G,GAAmB+F,OAAS,GACtC/J,QAAO,sBAAE,8BAAAyF,EAAA,sEAEC7E,EAAQV,aAAaC,QAAQ,sBACnCgE,IAAyB,GAHpB,SAIayG,sBAChBvN,EAAMwD,GACND,EACAoD,IAPG,cAICwB,EAJD,gBASaA,EAAIG,OATjB,cAUc,MAAfH,EAAIkB,QACNzC,GAAsB,IAExBE,IAAyB,GAbpB,kDAeLA,IAAyB,GAfpB,0DAkBT9F,MAAO,CACLqM,QAAS,EACTvL,MAAoC,GAA7B6E,GAAmB+F,OAAcX,IAAK,KAAOA,IAAK,KACzDpB,MAAO,QACP6C,WAAY,cACZ9L,SAAU,GACV0B,WAAY,UACZd,OAAQ,OACRC,QAAS,OACT+H,OAAQ,UACRnJ,YAAa,KA9BjB,UAsCJ,Q,iCCv0BR,6BAGe,4BAAMuO,YAAYC,a,4DCD3BC,EAAe,CACnBtJ,WAAY,QAkCCR,UAhCW,WAAmC,IAAlCM,EAAiC,uDAAzBwJ,EAAcC,EAAW,uCAC1D,OAAQA,EAAOpH,MACb,KAAKqH,OACH,OAAO,eACF1J,EADL,CAEEE,WAAYwJ,SAEhB,KAAKC,QACH,MAAO,CACLzJ,WAAYyJ,SAEhB,KAAKC,UACH,MAAO,CACL1J,WAAY0J,WAEhB,KAAKC,SACH,MAAO,CACL3J,WAAY2J,UAEhB,KAAKC,SACH,MAAO,CACL5J,WAAY4J,UAEhB,KAAKC,WACH,MAAO,CACL7J,WAAY6J,YAEhB,QACE,OAAO/J,K,4DCrBEgK,UAXI,WAAwC,IAAvChK,EAAsC,sEAA3BiK,QAAQ,MAAQR,EAAW,uCACxD,OAAQA,EAAOpH,MACb,KAAK4H,QACH,OAAO,eACJA,QAAQR,EAAOzN,OAEpB,QACE,OAAOgE,K,iCCRb,mBAgBeJ,UAbK,WAAmC,IAAlCI,EAAiC,uDAFjC,EAEsByJ,EAAW,uCACpD,OAAQA,EAAOpH,MACb,KAAK6H,QACH,OAAO,EACT,KAAKC,aACH,OAAO,EACT,KAAKC,UACH,OAAO,EACT,QACE,OAAOpK,K,gCCZb,gZAAO,IAAM0J,EAAO,OACPG,EAAS,SACTF,EAAQ,QACRC,EAAU,UACVK,EAAQ,QACRE,EAAa,aACbC,EAAU,UACVF,EAAQ,QACRJ,EAAS,SACTC,EAAW,Y,iCCTxB,OAWelK,UAXK,WAA4B,IAA3BG,EAA0B,wDAAXyJ,EAAW,uCAC7C,OAAQA,EAAOpH,MACb,IAAK,OACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,QACE,OAAOrC,K,gGCPPwJ,EAAe,CACnBnO,SAAU,UACVgP,MAAO,UACPC,QAAS,UACT3L,aACE,uGACF4L,gBAAiB,OACjBpN,MAAO,KACPqN,MAAO,MAGI1K,EAAc,WAAmC,IAAlCE,EAAiC,uDAAzBwJ,EAAcC,EAAW,uCAC3D,OAAQA,EAAOpH,MACb,IAAK,UACH,OAAO,eACFrC,EADL,GAEKyJ,EAAOvL,MAEd,QACE,OAAO8B,K,iCCnBb,gGASMyK,EAAaC,gBAAK,kBAAM,yDACxBC,EAAOD,gBAAK,kBAAM,wDAClBE,EAAQF,gBAAK,kBAAM,+DACnBG,EAAUH,gBAAK,kBAAM,wDACrBI,EAAWJ,gBAAK,kBAAM,kCACtBK,EAAOL,gBAAK,kBAAM,+DAClBM,EAAiBN,gBAAK,kBAAM,yDAC5BO,EAAYP,gBAAK,kBAAM,wDACvBQ,EAASR,gBAAK,kBAAM,kCACpBS,EAAST,gBAAK,kBAAM,uEACpBU,EAAYV,gBAAK,kBAAM,wDACvBW,EAAoBX,gBAAK,kBAAM,kCAC/BY,EAAQZ,gBAAK,kBAAM,kCACnBa,EAAcb,gBAAK,kBAAM,4EACzBc,EAAUd,gBAAK,kBAAM,+DACrBe,EAAKf,gBAAK,kBAAM,wDAChBP,EAAaO,gBAAK,kBAAM,+DACxBgB,EAAiB,SAAC9R,GACtB,OACE,kBAAC,WAAD,CACE+R,SACE,yBACE/Q,MAAO,CACLC,QAAS,OACT+Q,UAAW,QACX9H,eAAgB,SAChBhJ,WAAY,WAGd,kBAAC,IAAD,QAIJ,kBAACiQ,EAAD,iBAAUnR,EAAV,CAAiBiS,UAAW1B,OAI5B2B,EAAqB,SAAClS,GAC1B,OACE,kBAAC,WAAD,CACE+R,SACE,yBACE/Q,MAAO,CACLC,QAAS,OACT+Q,UAAW,QACX9H,eAAgB,SAChBhJ,WAAY,WAGd,kBAAC,IAAD,QAIJ,kBAACiQ,EAAD,iBAAUnR,EAAV,CAAiBiS,UAAWb,OAI5Be,EAAgB,SAACnS,GACrB,OACE,kBAAC,WAAD,CACE+R,SACE,yBACE/Q,MAAO,CACLC,QAAS,OACT+Q,UAAW,QACX9H,eAAgB,SAChBhJ,WAAY,WAGd,kBAAC,IAAD,QAIJ,kBAACiQ,EAAD,iBAAUnR,EAAV,CAAiBiS,UAAWZ,OAI5Be,EAAa,SAACpS,GAClB,OACE,kBAAC,WAAD,CACE+R,SACE,yBACE/Q,MAAO,CACLC,QAAS,OACT+Q,UAAW,QACX9H,eAAgB,SAChBhJ,WAAY,WAGd,kBAAC,IAAD,QAIJ,kBAACiQ,EAAD,iBAAUnR,EAAV,CAAiBiS,UAAWX,OAI5Be,EAAgB,SAACrS,GACrB,OACE,kBAAC,WAAD,CACE+R,SACE,yBACE/Q,MAAO,CACLC,QAAS,OACT+Q,UAAW,QACX9H,eAAgB,SAChBhJ,WAAY,WAGd,kBAAC,IAAD,QAIH,IACD,kBAACiQ,EAAD,iBAAUnR,EAAV,CAAiBiS,UAAWR,OAI5Ba,EAAY,SAACtS,GACjB,OACE,kBAAC,WAAD,CACE+R,SACE,yBACE/Q,MAAO,CACLC,QAAS,OACT+Q,UAAW,QACX9H,eAAgB,SAChBhJ,WAAY,WAGd,kBAAC,IAAD,QAIJ,kBAACiQ,EAAD,iBAAUnR,EAAV,CAAiBiS,UAAW3B,aAK5BiC,EAAe,SAACvS,GACpB,OACE,kBAAC,WAAD,CACE+R,SACE,yBACE/Q,MAAO,CACLC,QAAS,OACT+Q,UAAW,QACX9H,eAAgB,SAChBhJ,WAAY,WAGd,kBAAC,IAAD,QAIH,IACD,kBAACiQ,EAAD,iBAAUnR,EAAV,CAAiBiS,UAAWlB,OAI5ByB,EAAY,SAACxS,GACjB,OACE,kBAAC,WAAD,CACE+R,SACE,yBACE/Q,MAAO,CACLC,QAAS,OACT+Q,UAAW,QACX9H,eAAgB,SAChBhJ,WAAY,WAGd,kBAAC,IAAD,QAIH,IACD,kBAACiQ,EAAD,iBAAUnR,EAAV,CAAiBiS,UAAWP,OA4FnBvL,uBANS,SAACC,GACvB,MAAO,CACLqM,OAAQrM,EAAMH,eAIHE,EAvFA,WACb,IAAMuM,EACJ,6BACE,kBAAC,WAAD,CACEX,SACE,yBACE/Q,MAAO,CACLC,QAAS,OACT+Q,UAAW,QACX9H,eAAgB,SAChBhJ,WAAY,WAGd,kBAAC,IAAD,QAIJ,kBAAC,IAAD,CAAOyR,KAAK,aAAaC,UAAW/B,IACpC,kBAAC,IAAD,CAAO8B,KAAK,kBAAkBC,UAAW3B,IACzC,kBAAC,IAAD,CAAO0B,KAAK,oBAAoBC,UAAWpB,IAC3C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqB,OAAK,EAACF,KAAK,QAAQC,UAAWE,MACrC,kBAAC,IAAD,CAAOD,OAAK,EAACF,KAAK,oBAAoBC,UAAWf,IACjD,kBAAC,IAAD,CAAOgB,OAAK,EAACF,KAAK,cAAcC,UAAWhB,IAC3C,kBAAC,IAAD,CACEiB,OAAK,EACLF,KAAK,8BACLC,UAAWP,IAEb,kBAAC,IAAD,CACEQ,OAAK,EACLF,KAAK,oBACLC,UAAWV,IAGb,kBAAC,IAAD,CAAOW,OAAK,EAACF,KAAK,UAAUC,UAAWrB,IAEvC,kBAAC,IAAD,CAAOsB,OAAK,EAACF,KAAK,SAASC,UAAW5B,IACtC,kBAAC,IAAD,CACE6B,OAAK,EACLF,KAAK,6BACLC,UAAWd,IAEb,kBAAC,IAAD,CACEe,OAAK,EACLF,KAAK,oBACLC,UAAWT,IAEb,kBAAC,IAAD,CACEU,OAAK,EACLF,KAAK,wBACLC,UAAWR,IAEb,kBAAC,IAAD,CACES,OAAK,EACLF,KAAK,kBACLC,UAAWd,IAEb,kBAAC,IAAD,CACEe,OAAK,EACLF,KAAK,wBACLC,UAAWN,IAEb,kBAAC,IAAD,CAAOO,OAAK,EAACF,KAAK,mBAAmBC,UAAW7C,UAEhD,kBAAC,IAAD,CACE8C,OAAK,EACLF,KAAK,sBACLC,UAAWL,IAEb,kBAAC,IAAD,CAAOI,KAAK,qBAAqBC,UAAWJ,IAC5C,kBAAC,IAAD,CAAOK,OAAK,EAACF,KAAK,IAAIC,UAAWjB,IACjC,kBAAC,IAAD,CAAOgB,KAAK,GAAGC,UAAW1B,OAMlC,OAAO,kBAAC,IAAD,KAAgBwB,O,gMCpKnBK,EAAW,SAACC,GAChB,MAAqB,YAAdA,EACH,CACEC,KAAM,OACNC,OAAQ,QAEV,CACEC,SAAU,QACVC,MAAO,KACPF,OAAQ,QAQVG,EAASlN,aALO,SAACC,GACrB,MAAO,CACL5C,GAAI4C,EAAMF,YAAY1C,MAGX2C,EAhHD,SAACnG,GAAW,IAAD,EACSE,oBAAS,GADlB,mBAChBoT,EADgB,KACNC,EADM,OAEcrT,oBAAS,GAFvB,mBAEhBsT,EAFgB,KAEAC,EAFA,OAGMvT,mBAAS,WAHf,mBAGhB8S,EAHgB,KAGLU,EAHK,OAIOxT,mBAAS,MAJhB,mBAIhByT,EAJgB,KAIPC,EAJO,OAKG1T,mBAAS,MALZ,mBAKhB+B,EALgB,KAKT4R,EALS,KAOvB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEC,iBAAkB,IAClBjT,QAAS,WACP4S,GAAW,IAEbM,mBAAoB,IACpBpT,KAAM6S,EACNQ,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CpL,QAAQ,qBAGV,kBAAC,cAAD,CAAa9H,MAAO,CAAEmJ,aAAc,KAClC,kBAAC,UAAD,CACEgK,oBAAqB,SAACR,GACpBD,EAAQ,WACRE,EAAWD,IAEbS,kBAAmB,SAACnS,GAClByR,EAAQ,SACRG,EAAS5R,OAIA,YAAd+Q,EAA0B,kBAAC,UAAD,CAASW,QAASA,IAAsB,GACnE,kBAAC,WAAD,KACGL,EACC,kBAAC,UAAD,CACE3S,KAAM2S,EACNzS,QAAS,WACP0S,GAAY,IAEdc,UAAW,kBAAMZ,GAAW,MAG9B,IAGW,YAAdT,EAA0B,kBAAC,IAAD,CAASkB,YAAU,GAAnB,MAAmC,GAE9D,kBAAC,cAAD,CAAalT,MAAK,aAAIsT,WAAY,WAAcvB,EAASC,KACxC,YAAdA,EACC,yBACEhS,MAAO,CAAEiM,OAAQ,GAAI7J,WAAY,UAAWC,WAAY,SAD1D,gBAMA,GAEF,kBAAC,IAAD,CACErC,MAAO,CACL8K,WAAY,GACZ0B,WAAY,QACZhL,UAAW,gCAEbG,QAAS,WACP4Q,GAAY,KAGd,yBACEvS,MAAO,CAAEoB,MAAO,GAAIC,OAAQ,IAC5BjB,IAAI,2DAITa,EACC,kBAAC,SAAD,CACEpB,QAAS,WACPgT,EAAS,MACTH,EAAQ,YAEVzT,YAAagC,EACb1B,UAAW0B,EAAMsS,UAAUlQ,MACzB,SAACC,GAAD,OAAUA,EAAKA,KAAKkQ,aAAexU,EAAMwD,MAE3C/C,YAAawB,EAAMwS,YAAYpQ,MAC7B,SAACC,GAAD,OAAUA,EAAKA,KAAKkQ,aAAexU,EAAMwD,QAI7C,Q,gKCoIF4Q,EAAoB,SAAC7Q,EAAOtB,GAChC,IAAMwB,EAAU,IAAIC,QACpBD,EAAQE,OAAO,gBAAiBJ,GAChCE,EAAQE,OAAO,eAAgB,oBAC/B,IAAM+Q,EAAOC,KAAKC,UAAU,CAAE3S,UAC9B,OAAO2B,MAAM,GAAD,OAAI9D,UAAJ,mBAA0B,CAAE+D,OAAQ,OAAQJ,UAASiR,UAGpDG,UAlOK,SAAC7U,GAAW,IAAD,EACGE,mBAAS,IADZ,mBACtB4U,EADsB,KACTC,EADS,OAEG7U,mBAAS,MAFZ,mBAEtB8U,EAFsB,KAEZC,EAFY,OAGO/U,mBAAS,IAHhB,mBAGtBgV,EAHsB,KAGPtB,EAHO,OAIG1T,mBAAS,IAJZ,mBAItBiV,EAJsB,KAITtB,EAJS,OAKI3T,oBAAS,GALb,mBAKtBkV,EALsB,KAKLC,EALK,OAMMnV,oBAAS,GANf,mBAMtBoV,EANsB,KAMHC,EANG,OAOPrV,oBAAS,GAPF,mBAOjBsV,GAPiB,WAsCvBC,EAAa,uCAAG,WAAOxT,GAAP,iBAAAmG,EAAA,sEAElBiN,GAAM,GAFY,SAGKjB,EACrBvR,aAAaC,QAAQ,sBACrBb,GALgB,cAGZ0G,EAHY,gBAOIA,EAASL,OAPb,OAOZoN,EAPY,OAQlBL,GAAM,GACNxB,EAAS6B,GATS,kDAWlBL,GAAM,GACNxB,EAAS,IAZS,0DAAH,sDAgBnB,OACE,6BACE,kBAAC,IAAD,CACE8B,YAAa,WACXV,EAAY,OAEdW,YAAY,GAEZ,2BACE1I,YAAY,mBACZ2I,aAAa,MACb/U,UAAU,0BACV0C,GAAG,0BACH2J,MAAO2H,EACPlJ,QAAS,SAACL,GACR0J,EAAY1J,EAAEoB,gBAEhBrB,SAAU,SAACC,GACTwJ,EAASxJ,EAAE6B,OAAOD,OAhEF,SAAC2I,GACzBP,GAAM,GACN,IAAM9R,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBd,aAAaC,QAAQ,uBACrDc,MAAM,GAAD,OAAI9D,UAAJ,2BAA0BgW,GAAQ,CAAErS,UAASI,OAAQ,QAASb,KAAnE,uCACE,WAAOmF,GAAP,eAAAC,EAAA,kEAEuB,MAAfD,EAAIkB,OAFZ,uBAGMkM,GAAM,GAHZ,kBAIa3B,EAAW,KAJxB,WAMQzL,EAAIE,GANZ,iCAO8BF,EAAIG,OAPlC,cAOYyN,EAPZ,OASMnC,EAAWmC,GATjB,kBAUaR,GAAM,IAVnB,QAYuB,MAAfpN,EAAIkB,SACNmM,GAAO,GACPD,GAAM,IAdZ,kDAiBI3M,QAAQC,IAAI,iBACZ+K,EAAW,IACX2B,GAAM,GAnBV,0DADF,uDA4DQS,CAAkBzK,EAAE6B,OAAOD,OAC3BsI,EAAclK,EAAE6B,OAAOD,WAK7B,kBAAC,IAAD,CACExM,KAAMC,QAAQoU,GACd3N,SAAU2N,EACVhU,MAAO,CACLwB,UAAW,+BACXT,UAAW,GACXkU,OAAQ,OAGV,kBAAC,IAAD,CACEjV,MAAO,CACLoB,MAAO,IACPyK,UAAW,IACXqJ,UAAW,OACX9S,WAAY,UACZC,WAAY,OACZ3B,SAAU,GACV8L,WAAY,UAGd,kBAAC,IAAD,CACExM,MAAO,CACLqC,WAAY,OACZ3B,SAAU,GACV8L,WAAY,uBAEd2I,eAAa,GANf,WASGb,EACC,kBAAC,IAAD,CACEtU,MAAO,CACLiM,OAAQ,GACR5K,OAAQ,GACRD,MAAO,GACPN,MAAO,SACP6I,MAAO,WAIX,IAGsB,IAAzBuK,EAAcxI,QAAiB4I,EAS9BJ,EAAclR,KAAI,SAACoS,EAASlS,GAC1B,OACE,kBAAC,IAAD,CACEpD,UAAU,mBACV8D,IAAKwR,EAAQN,KACb9U,MAAO,CAAE2D,eAAe,GAAD,OAAe,KAATT,EAAI,GAAV,MACvB4I,QAAM,EACNnK,QAAS,WACPsS,EAAY,MACZF,EAASqB,EAAQN,MACjB9V,EAAMmU,oBAAoBiC,GAC1BxC,EAAW,CAACwC,IACZvC,EAAS,MAGVuC,EAAQN,KACT,yBACE9U,MAAO,CACLU,SAAU,GACV2B,WAAY,IACZyI,WAAY,KAJhB,UAOMsK,EAAQC,IAAIC,OAAOC,oBA/BR,IAAvBzB,EAAYpI,OACV,kBAAC,IAAD,CAAU5L,UAAU,gBAApB,eAEA,kBAAC,IAAD,CAAUA,UAAU,gBAApB,0CAmCN,kBAAC,IAAD,CACEE,MAAO,CACLoB,MAAO,IACPyK,UAAW,IACXqJ,UAAW,OACX9S,WAAY,UACZC,WAAY,OACZ3B,SAAU,GACV8L,WAAY,UAGd,kBAAC,IAAD,CACExM,MAAO,CACLqC,WAAY,OACZ3B,SAAU,GACV8L,WAAY,uBAEd2I,eAAa,GANf,QASGf,EACC,kBAAC,IAAD,CACEpU,MAAO,CACLiM,OAAQ,GACR5K,OAAQ,GACRD,MAAO,GACPN,MAAO,SACP6I,MAAO,WAIX,IAGHwK,EAAYnR,KAAI,SAACoS,GAChB,OACE,kBAAC,IAAD,CACExR,IAAKwR,EAAQnU,MACb6K,QAAM,EACNnK,QAAS,WACPsS,EAAY,MACZF,EAASqB,EAAQnU,OACjBjC,EAAMoU,kBAAkBgC,GACxBxC,EAAW,IACXC,EAAS,MAGVuC,EAAQnU,MAAMsU,uB,uRC7JVC,E,4MACnBpQ,MAAQ,CACNhF,IAAK,KACLqV,KAAM,CACJC,KAAM,IACNtU,MAAO,IACPuU,OAAQ,EAAK3W,MAAM4W,GAAK,EAAI,GAAK,GAEnCC,SAAS,EACTC,OAAO,G,EAYTC,aAAe,SAACxL,GACd,GAAIA,EAAE6B,OAAO4J,OAASzL,EAAE6B,OAAO4J,MAAMtK,OAAS,EAAG,CAC/C,IAAMuK,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,WAC9B,EAAKC,SAAS,CAAEhW,IAAK6V,EAAOI,YAE9BJ,EAAOK,oBAAe/L,EAAE6B,OAAO4J,MAAM,M,EAKzCO,cAAgB,SAACpS,GACf,EAAKqS,SAAWrS,G,EAGlBsS,eAAiB,SAAChB,GAChB,EAAKiB,eAAejB,I,EAGtBkB,aAAe,SAAClB,EAAMmB,GAGpB,EAAKR,SAAS,CAAEX,U,kEA/BhBoB,KAAKT,SAAS,CACZX,KAAM,CACJC,KAAM,IACNtU,MAAO,IACPuU,OAAQkB,KAAK7X,MAAM4W,GAAK,EAAI,GAAK,O,8EA8BlBH,G,4EACfoB,KAAKL,UAAYf,EAAKrU,OAASqU,EAAKpU,Q,gCACXwV,KAAKC,cAC9BD,KAAKL,SACLf,EACA,gB,OAHIsB,E,OAKNF,KAAKT,SAAS,CAAEW,iB,2IAIN5S,EAAOsR,EAAMuB,GACzB,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAASjT,EAAMkT,aAAelT,EAAM/C,MACpCkW,EAASnT,EAAMoT,cAAgBpT,EAAM9C,OAiB3C,OAhBA4V,EAAO7V,MAAQqU,EAAKrU,MACpB6V,EAAO5V,OAASoU,EAAKpU,OACT4V,EAAOO,WAAW,MAE1BC,UACFtT,EACAsR,EAAKiC,EAAIN,EACT3B,EAAKkC,EAAIL,EACT7B,EAAKrU,MAAQgW,EACb3B,EAAKpU,OAASiW,EACd,EACA,EACA7B,EAAKrU,MACLqU,EAAKpU,QAGA,IAAIuW,SAAQ,SAACC,EAASC,GAC3Bb,EAAOc,QAAO,SAACC,GACRA,GAILA,EAAKlD,KAAOkC,EACZa,EAAQG,IAJNF,EAAO,IAAIG,MAAM,sBAKlB,mB,+BAIG,IAAD,SACwBpB,KAAKzR,MAA5BqQ,EADD,EACCA,KAAMsB,EADP,EACOA,aAEd,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEpX,KAAMkX,KAAKzR,MAAM0Q,MACjB9C,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChDJ,iBAAkB,IAClBjT,QAAS,WACP,EAAKuW,SAAS,CAAEN,OAAO,KAEzBhO,QAAQ,0BAEV,kBAAC,IAAD,CACEnI,KAAMC,QAAQiX,KAAK7X,MAAMoB,KACzBqM,OAAK,EACL5M,QAAS,WACP,EAAKb,MAAMa,WAEb6M,WAAW,GAEX,kBAAC,cAAD,KACE,kBAAC,IAAD,CACEtM,IAAKyW,KAAK7X,MAAMoB,IAChBqV,KAAI,eAAOA,EAAP,CAAaE,OAAQkB,KAAK7X,MAAM4W,GAAK,EAAI,GAAK,IAClDsC,cAAY,EACZ3B,cAAeM,KAAKN,cACpB4B,WAAYtB,KAAKJ,eACjBnM,SAAUuM,KAAKF,gBAInB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEyB,MAAOC,YAAe,CAAEC,QAAS,CAAEC,QAASC,QAE3C3B,KAAKzR,MAAMyQ,QACV,kBAAC,IAAD,MAEA,kBAAC,IAAD,CACEjK,QAAQ,YACR6M,kBAAgB,EAChB3X,MAAM,UACNa,QAAS,WACP,EAAKyU,SAAS,CAAEP,SAAS,IACzB,IAAM6C,EAAK,IAAIC,SACTlW,EAAU,IAAIC,QACpBD,EAAQE,OACN,gBACAd,aAAaC,QAAQ,uBAGvB4W,EAAG/V,OAAO,QAASoU,EAAc,YACjCnU,MAAM,GAAD,OAAI9D,UAAJ,sBAA6B,CAChC+D,OAAQ,MACR6Q,KAAMgF,EACNjW,YAECT,KALH,uCAKQ,WAAOmF,GAAP,iBAAAC,EAAA,yDACe,MAAfD,EAAIkB,OADJ,iCAEoBlB,EAAIG,OAFxB,OAEIsR,EAFJ,OAGFhR,QAAQC,IAAI+Q,GACNlF,EAAOC,KAAKC,UAAU,CAC1BiF,MAAOD,EAAQvU,WAEjB5B,EAAQE,OAAO,eAAgB,oBAC/BC,MAAM,GAAD,OACA9D,UADA,wBAED,EAAKE,MAAM4W,GAAK,eAAiB,mBAEnC,CAAE/S,OAAQ,QAAS6Q,OAAMjR,YAExBT,MAAK,SAAC8W,GACL,GAAoB,MAAhBA,EAAKzQ,OACP,OAAOC,OAAOC,SAASC,SAEzB,EAAK4N,SAAS,CAAEN,OAAO,EAAMD,SAAS,OAEvC5T,OAAM,SAACsI,GACN,EAAK6L,SAAS,CAAEN,OAAO,EAAMD,SAAS,OArBxC,wBAwBF,EAAKO,SAAS,CAAEN,OAAO,EAAMD,SAAS,IAxBpC,4CALR,uDAgCG5T,OAAM,SAACsI,GACN,EAAK6L,SAAS,CAAEN,OAAO,EAAMD,SAAS,SA/C9C,kB,GAjIkCkD,kB,8RC2J5CC,EAAsB,SAACzW,EAAOqB,GAClC,IAAMnB,EAAU,IAAIC,QAGpB,OAFAD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GACzBK,MAAM,GAAD,OAAI9D,UAAJ,mBAA0B,CACpC+D,OAAQ,SACRJ,UACAiR,KAAMC,KAAKC,UAAU,CAAEhQ,IAAKA,EAAM,QAIzBqV,EAAiB,SAACja,GAAW,IAAD,EACNE,mBAAS,MADH,mBAChCmH,EADgC,KACtB6S,EADsB,OAELha,mBAAS,MAFJ,mBAEhCia,EAFgC,KAErBC,EAFqB,OAGTla,mBAAS,MAHA,mBAGhCyT,EAHgC,KAGvBC,EAHuB,OAIP1T,mBAAS,IAJF,mBAIhCma,EAJgC,KAItBC,EAJsB,OAKTpa,oBAAS,GALA,mBAKhC2W,EALgC,KAKvB0D,EALuB,OAMDra,mBAAS,IANR,mBAMhC4U,EANgC,KAMnB0F,EANmB,OAOXta,mBAAS,IAPE,mBAOhCua,EAPgC,KAOxBC,EAPwB,KAyCvC,OACE,kBAAC,WAAD,KACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CACE/E,YAAa,WACXuE,EAAa,OAEftE,YAAY,GAEZ,2BACEhK,QAAS,SAACL,GACR2O,EAAa3O,EAAEoB,gBAKjBQ,MAAO2H,EACPe,aAAa,MACbvK,SAAU,SAACC,IAlDK,SAACuK,GACzByE,GAAW,GACX,IAAM9W,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBd,aAAaC,QAAQ,uBACrD6X,YAAW,WACT/W,MAAM,GAAD,OAAI9D,UAAJ,+BAA8BgW,GAAQ,CACzCrS,UACAI,OAAQ,QACPb,KAHH,uCAGQ,WAAOmF,GAAP,eAAAC,EAAA,kEAEe,MAAfD,EAAIkB,OAFJ,uBAGFkR,GAAW,GAHT,kBAIKD,EAAY,KAJjB,WAMAnS,EAAIE,GANJ,iCAOsBF,EAAIG,OAP1B,cAOIyN,EAPJ,OAQFuE,EAAYvE,GARV,kBAUKwE,GAAW,IAVhB,QAYe,MAAfpS,EAAIkB,QACNkR,GAAW,GAbT,kDAgBJ3R,QAAQC,IAAI,iBACZyR,EAAY,IACZC,GAAW,GAlBP,0DAHR,yDAwBC,KAqBOvE,CAAkBzK,EAAE6B,OAAOD,OAC3BqN,EAAejP,EAAE6B,OAAOD,OACxByG,EAAW,MACX0G,EAAY,IACZI,EAAU,IACV1a,EAAM4a,SAAS,GAAI,KAErB1N,YAAY,iBACZzE,KAAK,SACL3H,UAAU,mBAGd,kBAAC,IAAD,CACE6U,YAAa,kBAAMyE,EAAa,OAChCxE,YAAY,GAEZ,2BACEtI,UAAW1M,QAAQ+S,GACnBkC,aAAa,MACbjK,QAAS,SAACL,GACR6O,EAAa7O,EAAEoB,gBAEjBQ,MAAOsN,EACPvN,YAAY,gBACZzE,KAAK,SACL3H,UAAU,oBAIhB,kBAAC,IAAD,CACEE,MAAO,CACLiV,OAAQ,KACRzT,UAAW,mCACXyK,OAAQ,IAEV5F,SAAUA,EACV1G,KAAMC,QAAQyG,IAEd,kBAAC,IAAD,CACErG,MAAO,CACLwM,WAAY,QACZpL,MAAO,IACPyK,UAAW,IAEXqJ,UAAW,SAGZW,EACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE7V,MAAO,CACLc,MAAO,QACPO,OAAQ,GAERD,MAAO,OAKb,GAEDiY,EAAS3N,OAAS,EACjB2N,EAASrW,KAAI,SAAC6W,GACZ,OACE,kBAAC,IAAD,CACE/N,QAAM,EACNlI,IAAKiW,EAAS/E,KACdnT,QAAS,WACPiG,QAAQC,IAAI,SACZ2R,EAAeK,EAAS/E,MACxBlC,EAAWiH,GACXX,EAAa,QAGf,kBAAC,IAAD,CACElZ,MAAO,CAAEqB,OAAQ,GAAID,MAAO,GAAIjB,YAAa,MAE9C0Z,EAAS/E,SAIS,IAAvBhB,EAAYpI,OACd,kBAAC,IAAD,CAAU1L,MAAO,CAAEqC,WAAY,SAC7B,kBAAC,IAAD,CAAgBrC,MAAO,CAAEG,YAAa,MADxC,8BAIE0V,EACF,GAEA,yBAAK7V,MAAO,CAAEiM,OAAQ,KAAtB,mBAIN,kBAAC,IAAD,CACEjM,MAAO,CACLiV,OAAQ,KACRzT,UAAW,mCACXyK,OAAQ,IAEV5F,SAAU8S,EACVxZ,KAAMC,QAAQuZ,IAEd,kBAAC,IAAD,CACEnZ,MAAO,CACLwM,WAAY,QACZpL,MAAO,IACPyK,UAAW,IAEXqJ,UAAW,SAGZvC,EA9LK,SAACmH,GAEf,IADA,IAAM1S,EAAI,GACDlE,EAAI,EAAGA,EAAI4W,EAAG5W,IACrBkE,EAAEmC,KAAKrG,EAAI,GAEb,OAAOkE,EA0LK2S,CAAQpH,EAAQqH,aAAahX,KAAI,SAACuE,GAChC,OACE,kBAAC,IAAD,CACEuE,QAAM,EACNlI,IAAK2D,EACL5F,QAAS,WACP+X,EAAUnS,GACVvI,EAAM4a,SAASjH,EAAQmC,KAAMvN,KAG/B,kBAAC,IAAD,CACEvH,MAAO,CAAEqB,OAAQ,GAAID,MAAO,GAAIjB,YAAa,MAE9CoH,MAIP,OAOC0S,UA1YE,SAACjb,GAAW,IAAD,EACJE,oBAAS,GADL,mBACnBgb,EADmB,KACb7F,EADa,OAEUnV,mBAAS,IAFnB,mBAEnBib,EAFmB,KAEPC,EAFO,OAGMlb,mBAAS,CACvC+B,MAAO,GACPD,WAAY,GACZqZ,UAAW,GACXja,IAAK,KAPmB,mBAGnBka,EAHmB,KAGTC,EAHS,KAS1BC,qBAAU,WAER,OADAJ,EAAc,oBACP,WACLxS,QAAQC,IAAI,0BAEb,IAduB,MAgBA3I,oBAAS,GAhBT,mBAgBnB4W,EAhBmB,KAgBZrN,EAhBY,OAiBcvJ,oBAAS,GAjBvB,mBAiBnBub,EAjBmB,KAiBLC,EAjBK,KAkBtBC,EACqB,KAAvBL,EAASD,WACe,KAAxBC,EAAStZ,YACQ,KAAjBsZ,EAASla,KACU,KAAnBka,EAASrZ,MAEX,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEtB,KAAMmW,EACNhD,iBAAkB,IAClBjT,QAAS,WACP4I,GAAS,IAEXuK,aAAc,CAAEE,WAAY,SAAUD,SAAU,OAChDnL,QAAQ,uBAEV,kBAAC,IAAD,CAAQ8S,OAAQH,EAAcza,MAAO,CAAEiV,OAAQ,OAC7C,kBAAC,IAAD,CACEjV,MAAO,CAAEoB,MAAO,IAAKC,OAAQ,IAAKP,MAAO,YAG7C,kBAAC,IAAD,CACEhB,UAAWqa,EACXxa,KAAMX,EAAMW,KACZI,OAAO,WACPF,QAAS,WACPua,EAAc,YACdT,YAAW,WACT3a,EAAMa,YACL,OAGL,kBAAC,IAAMwJ,OAAP,oBAEA,kBAAC,IAAMnI,QAAP,KACE,yBAAKlB,MAAO,CAAEqM,QAAS,GAAIjK,WAAY,YAAvC,6EAIA,kBAAC6W,EAAD,CACEW,SAAU,SAACiB,EAAGC,GACZP,EAAY,eAAKD,EAAN,CAAgBD,UAAWS,EAAG9Z,WAAY6Z,QAGzD,2BACE3O,YAAY,iCACZC,MAAOmO,EAASrZ,MAChB2J,QAAS,WACPyJ,GAAM,IAER0G,OAAQ,WACN1G,GAAM,IAER/J,SAAU,SAACC,GACTgQ,EAAY,eAAKD,EAAN,CAAgBrZ,MAAOsJ,EAAE6B,OAAOD,UAE7CnM,MAAO,CACLoB,MAAO,MACPiL,QAAS,GACTjD,aAAc,GACd5H,UAAU,WAAD,OAAa0Y,EAAO,GAAK,EAAzB,0BACT5Y,OAAQ,wBACRgS,WAAY,YACZ/R,QAAS,OACTc,WAAY,OACZ3B,SAAU,GACVuL,OAAQ,OAId,kBAAC,IAAM/K,QAAP,KACE,kBAAC,IAAD,CACE8Z,OAAO,kBACPnY,OAAO,MACPJ,QAAS,CACPwY,cAAepZ,aAAaC,QAAQ,sBACpCoZ,YAAa,oBAEfpG,KAAK,MACLjG,OAAM,UAAK/P,UAAL,iBACNwL,SAAU,SAAC6Q,GACgB,SAArBA,EAAKC,KAAK/S,QACZkS,EAAY,eAAKD,EAAN,CAAgBla,IAAK+a,EAAKC,KAAKzT,aAG9C0T,SAAU,WACRrC,EACEnX,aAAaC,QAAQ,sBACrBwY,EAASla,IAAIwD,KAEf2W,EAAY,eAAKD,EAAN,CAAgBla,IAAK,QAGlC,kBAAC,IAAD,CAAQwL,QAAQ,YACd,kBAAC,IAAD,CACE5L,MAAO,CAAEG,YAAa,KAF1B,gBAQJ,kBAAC,IAAMmC,QAAP,KACE,kBAAC,IAAD,CACEsJ,QAAQ,YACR6M,kBAAgB,EAChBnM,SAAUqO,EACV7Z,MAAM,UACNa,QAAS,WACP+Y,GAAgB,GA1IN,SAACnY,EAAOmR,GAC9B,IAAMjR,EAAU,IAAIC,QAGpB,OAFAD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GACzBK,MAAM,GAAD,OAAI9D,UAAJ,eAAsB,CAChC+D,OAAQ,OACRJ,UACAiR,KAAMC,KAAKC,UAAUF,KAoIX4H,CACEzZ,aAAaC,QAAQ,sBACrBwY,GAECtY,KAJH,uCAIQ,WAAOmF,GAAP,SAAAC,EAAA,0DACAD,EAAIE,GADJ,uBAEFqT,GAAgB,GAChB1b,EAAMqU,YAHJ,kBAIKrU,EAAMa,WAJX,OAMJ6a,GAAgB,GAChBjS,GAAS,GAPL,2CAJR,uDAaGxG,OAAM,SAACsI,GACNmQ,GAAgB,GAChBjS,GAAS,OAGfzI,MAAO,CACLG,YAAa,GACbgJ,aAAc,GACdqD,WAAYmO,EACR,kBACA,wBA9BR,cAmCA,kBAAC,IAAD,CACE/O,QAAQ,WACR5L,MAAO,CAAEmJ,aAAc,IACvBxH,QAAS,WACPqX,EACEnX,aAAaC,QAAQ,sBACrBwY,EAASla,IAAIwD,KAEf2W,EAAY,eAAKD,EAAN,CAAgBla,IAAK,MAChCga,EAAc,YACdT,YAAW,WACT3a,EAAMa,YACL,OAZP,a,oGC7HJka,EAAU,SAACxS,GAEf,IADA,IAAIgU,EAAQ,GACHrY,EAAI,EAAGA,EAAIqE,EAAOrE,IACzBqY,EAAMhS,KAAKrG,EAAI,GAEjB,OAAOqY,GAEMC,UAjEC,SAACxc,GAAW,IAAD,EACuBE,mBAAS,MADhC,mBAClBuc,EADkB,KACAC,EADA,KAEzB,OACE,kBAAC,WAAD,KACG9b,QAAQ6b,GACP,kBAAC,UAAD,CACEA,iBAAkBA,EAClB5b,QAAS,WACP6b,EAAoB,SAIxB,GAEF,kBAAC,cAAD,CAAa1b,MAAO,CAAEiM,OAAQ,KAC5B,wBACEjM,MAAO,CACLoC,WAAY,UACZC,WAAY,OACZvB,MAAO,OACPJ,SAAU,KAGX1B,EAAM2T,QAAQmC,OAGnB,kBAAC,cAAD,CAAa9U,MAAO,CAAEiM,OAAQ,KAC5B,yBACEjM,MAAO,CAAEqC,WAAY,SAAUD,WAAY,UAAW1B,SAAU,KAE/D1B,EAAM2T,QAAQ0C,IAAIC,OAAOC,cAAzB,YACMvW,EAAM2T,QAAQ0C,IAAIsG,OAAOpG,cAD/B,OAIJwE,EAAQ/a,EAAM2T,QAAQqH,aAAahX,KAAI,SAACE,GACvC,OACE,kBAAC,cAAD,CAAaU,IAAKV,EAAGlD,MAAO,CAAEiM,OAAQ,KACpC,kBAAC,IAAD,CACEnM,UAAU,SACV8L,QAAQ,WACR5L,MAAO,CACLqM,QAAS,GACT1I,eAAe,GAAD,OAAe,IAATT,EAAI,GAAV,KACd9B,MAAO,IACPgB,WAAY,UACZ1B,SAAU,IAEZiB,QAAS,WACP+Z,EAAoB,eAAK1c,EAAM2T,QAAZ,CAAqB8G,OAAQvW,OAXpD,iBAaYA,QAIlB,kBAAC,cAAD,CAAalD,MAAO,CAAEiM,OAAQ,S,iQCsHrB9G,uBAFS,SAACC,GAAD,MAAY,CAAE5C,GAAI4C,EAAMF,YAAY1C,MAE7C2C,EAzJH,SAACnG,GAAW,IAAD,EACSE,oBAAS,GADlB,mBACd2W,EADc,KACL0D,EADK,OAEOra,mBAAS,IAFhB,mBAEdmX,EAFc,KAENuF,EAFM,OAGa1c,oBAAS,GAHtB,mBAGd2c,EAHc,KAGHC,EAHG,OAIe5c,mBAAS,GAJxB,mBAId6c,EAJc,KAIFC,EAJE,OAKmB9c,mBAAS,MAL5B,mBAKd+c,EALc,KAKAC,EALA,OAMchd,mBAAS,GANvB,mBAMdid,EANc,KAMCC,EAND,KAOfC,EAAc,uCAAG,WAAOC,GAAP,yBAAAlV,EAAA,6DACrBmS,GAAW,IACL9W,EAAU,IAAIC,SACZC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBd,aAAaC,QAAQ,uBAC/C4R,EAAOC,KAAKC,UAAU5U,EAAMyc,kBALb,SAMH7Y,MAAM,GAAD,OAAI9D,UAAJ,4BAA2Bwd,GAAQ,CACxDzZ,OAAQ,OACR6Q,OACAjR,YATmB,YAMf0E,EANe,QAWbE,GAXa,kCAYaF,EAAIG,OAZjB,wBAYX+O,EAZW,EAYXA,OAAQ9O,EAZG,EAYHA,MAChBK,QAAQC,IAAIwO,EAAO3K,QACnBkQ,EAAUvF,GACV2F,EAAczU,GAASwU,GAfJ,kBAgBZxC,GAAW,IAhBC,QAkBrBA,GAAW,GAlBU,4CAAH,sDAyBpB,OALIsC,IACFQ,EAAe,GACfP,GAAa,IAEflU,QAAQC,IAAIoU,GAEV,kBAAC,WAAD,KACGA,EACC,kBAAC,SAAD,CACE1c,UAAW0c,EAAa1I,UAAUlQ,MAChC,SAAC+R,GAAD,OAAaA,EAAQ9R,KAAKkQ,aAAexU,EAAMwD,MAEjD/C,YAAawc,EAAaxI,YAAYpQ,MACpC,SAAC+R,GAAD,OAAaA,EAAQ9R,KAAKkQ,aAAexU,EAAMwD,MAEjDvD,YAAagd,EACbpc,QAAS,WACPqc,EAAgB,SAIpB,GAEF,kBAAC,IAAD,CACEvc,KAAMC,QAAQZ,EAAMyc,kBACpB5b,QAAS,WACPb,EAAMa,WAERC,UAAU,oBACVC,OAAO,YAEP,kBAAC,IAAD,CAAckN,WAAS,GACrB,kBAAC,IAAD,KACG4I,EACC,kBAAC,WAAD,KACE,kBAAC,cAAD,KACE,kBAAC,IAAD,CACE7V,MAAO,CAAEoB,MAAO,IAAKC,OAAQ,IAAKN,UAAW,IAC7C8J,KAAK,WAGT,yBACE7K,MAAO,CACLqC,WAAY,OACZka,UAAW,SACXxb,UAAW,KAJf,+BAUkB,IAAlBsV,EAAO3K,OACT,kBAAC,IAAD,CACErD,OAAO,OACP5G,MAAM,0CAGR4U,EAAOrT,KAAI,SAACuH,EAAGrH,GAAJ,OACT,kBAAC,WAAD,CAAUU,IAAK2G,EAAExI,KACf,kBAAC,IAAD,CACE/B,MAAO,CACLqC,WAAY,QAEdyJ,QAAM,EACNnK,QAAS,WACPua,EAAgB3R,KAGlB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQnK,IAAKmK,EAAElK,GAAGC,gBAEpB,kBAAC,IAAD,KACE,yBACEN,MAAO,CAAEqC,WAAY,OAAQD,WAAY,YAD3C,WAGW,IAAMmI,EAAEtJ,QAIrB,kBAAC,IAAD,KACE,kBAAC,cAAD,CAAajB,MAAO,CAAEkJ,eAAgB,aACpC,kBAAC,IAAD,CAAalJ,MAAO,CAAEG,YAAa,KACnC,6BAAMoK,EAAEpL,YAId,kBAAC,IAAD,YAMT4c,EAAa,GACZ,kBAAC,IAAD,CAAc/b,MAAO,CAAEC,QAAS,OAAQiJ,eAAgB,WACtD,kBAAC,IAAD,CACE2B,KAAK,QACL2R,KAAML,EACN7R,SAAU,SAACC,EAAGiS,GACZJ,EAAUI,GACVH,EAA4B,IAAZG,EAAO,KAEzBjV,MAAOkV,SAASV,EAAa,IAAM,KAIvC,GAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/b,MAAO,CAAEmJ,aAAc,IACvByC,QAAQ,WACR9K,MAAM,YACNa,QAAS,WACP3C,EAAMa,YALV,gB,iCC/JV,2FAIM6c,EAAQ,SAAC1d,GACb,OACE,kBAAC,IAAD,CAAM2d,WAAS,GACb,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAAC,IAAD,CAAMD,MAAI,EAACC,GAAI,EAAG7c,MAAO,CAAEC,QAAS,OAAQiJ,eAAgB,WACzDlK,EAAM8d,UAET,kBAAC,IAAD,CAAMF,MAAI,EAACC,GAAI,MAKftY,EAAc,SAACvF,GACnB,OACE,6BACE,yBACEgB,MAAO,CACLoC,WAAY,UACZC,WAAY,OACZ0a,WAAY,EACZrc,SAAU,GACV2L,QAAS,GACTlD,aAAc,IACd3I,SAAU,IARd,8jBAoBA,6BACE,kBAAC,IAAD,CACE0S,YAAU,EACVlT,MAAO,CACLU,SAAU,GACVK,UAAW,MACXqB,WAAY,UACZ+G,aAAc,IACd6T,cAAe,SAPnB,uBAiBKjO,EAAQ,SAAC/P,GACpB,OACE,6BACE,kBAAC,IAAeie,IAAWC,aACzB,kBAACR,EAAD,KACE,kBAACnY,EAAD,QAGJ,kBAAC,IAAe0Y,IAAWE,WACzB,kBAACT,EAAD,KACE,kBAACnY,EAAD,QAGJ,kBAAC,IAAe0Y,IAAWG,WACzB,kBAAC7Y,EAAD,U,iCCvER,4EAIauN,EAAI,SAAC9S,GAChB,OACE,yBACEgB,MAAO,CACLqB,OAAQ,QACRpB,QAAS,OACTiJ,eAAgB,SAChBhJ,WAAY,SACZsM,WAAY,UAGd,kBAAC,IAAD,CACEpM,IAAKid,EAAQ,KACbxS,KAAK,OACL/K,UAAU,WAEZ,kBAAC,IAAD,CACEM,IAAKid,EAAQ,KACbxS,KAAK,OACL/K,UAAU,c,iCCvBlB,2FAYA,IAAMwd,EAAc1d,QACW,cAA7B0I,OAAOC,SAASgV,UAEe,UAA7BjV,OAAOC,SAASgV,UAEhBjV,OAAOC,SAASgV,SAASC,MACvB,2DAIC,SAASC,EAASC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,GAAwBvV,OAAOC,SAASuV,MACpDC,SAAWzV,OAAOC,SAASwV,OAIvC,OAGFzV,OAAO6N,iBAAiB,QAAQ,WAC9B,IAAM6H,EAAK,UAAMH,GAAN,sBAEPP,IAgEV,SAAiCU,EAAON,GAEtC9a,MAAMob,EAAO,CACXvb,QAAS,CAAE,iBAAkB,YAE5BT,MAAK,SAAA2F,GAEJ,IAAMuT,EAAcvT,EAASlF,QAAQwb,IAAI,gBAEnB,MAApBtW,EAASU,QACO,MAAf6S,IAA8D,IAAvCA,EAAYgD,QAAQ,cAG5CP,UAAUQ,cAAcC,MAAMpc,MAAK,SAAAqc,GACjCA,EAAaC,aAAatc,MAAK,WAC7BsG,OAAOC,SAASC,eAKpB+V,EAAgBP,EAAON,MAG1Bzb,OAAM,WACL2F,QAAQC,IACN,oEAvFA2W,CAAwBR,EAAON,GAI/BC,UAAUQ,cAAcC,MAAMpc,MAAK,WACjC4F,QAAQC,IACN,iHAMJ0W,EAAgBP,EAAON,OAM/B,SAASa,EAAgBP,EAAON,GAC9BC,UAAUQ,cACPV,SAASO,GACThc,MAAK,SAAAqc,GACJA,EAAaI,cAAgB,WAC3B,IAAMC,EAAmBL,EAAaM,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtZ,QACfuY,UAAUQ,cAAcU,YAI1BjX,QAAQC,IACN,iHAKE6V,GAAUA,EAAOoB,UACnBpB,EAAOoB,SAAST,KAMlBzW,QAAQC,IAAI,sCAGR6V,GAAUA,EAAOrK,WACnBqK,EAAOrK,UAAUgL,WAO5Bpc,OAAM,SAAA6T,GACLlO,QAAQkO,MAAM,4CAA6CA,MAkC1D,SAASwI,IACV,kBAAmBX,WACrBA,UAAUQ,cAAcC,MACrBpc,MAAK,SAAAqc,GACJA,EAAaC,gBAEdrc,OAAM,SAAA6T,GACLlO,QAAQkO,MAAMA,EAAMhO,c,gCCzI5B,6zBAEaiX,EAAgB,SAACxc,GAC5B,IAAME,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GAChC,IAAM4F,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,gBAAkC,CAAE+D,OAAQ,MAAOJ,YACnE,OAAOG,MAAMuF,IAGF6W,EAAgB,SAACzc,EAAO0c,EAAOC,EAAQC,GAClD,IAAM1c,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GAChC,IAAM4F,EAAU,IAAIC,QAAJ,UACXtJ,UADW,4BACYmgB,EADZ,YACqBC,EADrB,mBAED,WAAXC,EAAsBA,EAAS,IAEjC,CACEtc,OAAQ,MACRJ,YAIJ,OADAmF,QAAQC,IAAIsX,GACLvc,MAAMuF,IAGFiX,EAAoB,SAAC7c,EAAO+Z,EAAM+C,GAC7C,IAAM5c,EAAU,IAAIC,QACpBD,EAAQE,OAAO,SAAU0c,EAAQF,QACjC1c,EAAQE,OAAO,SAAU0c,EAAQC,QACjC7c,EAAQE,OAAO,gBAAiBJ,GAChC,IAAM4F,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,6BAAuCwd,GAAQ,CAC7DzZ,OAAQ,MACRJ,YAEF,OAAOG,MAAMuF,IAGFoX,EAAa,SACxBhd,EACAgC,EACAkD,EACArD,GAEI,IADJJ,EACG,wDACGvB,EAAU,IAAIC,QACdgR,EAAOC,KAAKC,UAAU,CAC1BrP,cACAib,UAAW/X,EACXrD,QACAJ,cAGFvB,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GAChC,IAAM4F,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,cAAgC,CAC9C+D,OAAQ,OACRJ,UACAiR,SAGF,OAAO9Q,MAAMuF,IAGF6C,EAAS,SAACxI,EAAID,GACzB,IAAME,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GAChC,IAAM4F,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,6BAAuC0D,GAAM,CAC3DK,OAAQ,OACRJ,YAEF,OAAOG,MAAMuF,IAGF+C,EAAe,SAAC1I,EAAID,GAC/B,IAAME,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GAChC,IAAM4F,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,6BAAuC0D,GAAM,CAC3DK,OAAQ,SACRJ,YAEF,OAAOG,MAAMuF,IAGFiD,EAAW,SAAC5I,EAAID,GAC3B,IAAME,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GAChC,IAAM4F,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,+BAAyC0D,GAAM,CAC7DK,OAAQ,OACRJ,YAEF,OAAOG,MAAMuF,IAGF8C,EAAiB,SAACzI,EAAID,GACjC,IAAME,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GAChC,IAAM4F,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,+BAAyC0D,GAAM,CAC7DK,OAAQ,SACRJ,YAEF,OAAOG,MAAMuF,IAGFoE,EAAc,SAAC/J,EAAID,EAAO+B,GACrC,IAAM7B,EAAU,IAAIC,QACdgR,EAAOC,KAAKC,UAAU,CAAEtP,gBAC9B7B,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GAChC,IAAM4F,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,qBAA+B0D,GAAM,CACnDK,OAAQ,OACRJ,UACAiR,SAEF,OAAO9Q,MAAMuF,IAGFH,EAAc,SAACxF,EAAID,GAC9B,IAAME,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GAChC,IAAM4F,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,0BAAoC0D,GAAM,CACxDK,OAAQ,MACRJ,YAEF,OAAOG,MAAMuF,IAGFT,EAAa,SAACnF,EAAOC,EAAIiF,GACpC,IAAMhF,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBJ,GAChC,IAAM4F,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,oBAA8B2I,EAA9B,YAAsCjF,GAAM,CAC1DK,OAAQ,MACRJ,YAGF,OAAOG,MAAMuF,IAGFjB,EAAmB,SAAC1E,GAC/B,IAAMC,EAAU,IAAIC,QACpBD,EAAQE,OAAO,gBAAiBd,aAAaC,QAAQ,uBACrDW,EAAQE,OAAO,eAAgB,oBAC/B,IAAMwF,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,0BAAoC0D,GAAM,CACxDK,OAAQ,MACRJ,YAEF,OAAOG,MAAMuF,IAEFsX,EAAa,SAAC3K,GACzB,IAAMrS,EAAU,IAAIC,QACpBD,EAAQE,OAAO,gBAAiBd,aAAaC,QAAQ,uBACrDW,EAAQE,OAAO,eAAgB,oBAC/B,IAAMwF,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,0BAAoCgW,GAAQ,CAC1DjS,OAAQ,MACRJ,YAEF,OAAOG,MAAMuF,IAGFuX,EAAS,WACpB,IAAMjd,EAAU,IAAIC,QACpBD,EAAQE,OAAO,gBAAiBd,aAAaC,QAAQ,uBACrDW,EAAQE,OAAO,eAAgB,oBAC/B,IAAMwF,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,gBAAkC,CAChD+D,OAAQ,MACRJ,YAEF,OAAOG,MAAMuF,IAEFwX,EAAY,WACvB,IAAMld,EAAU,IAAIC,QACpBD,EAAQE,OAAO,gBAAiBd,aAAaC,QAAQ,uBACrDW,EAAQE,OAAO,eAAgB,oBAC/B,IAAMwF,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,mBAAqC,CACnD+D,OAAQ,MACRJ,YAEF,OAAOG,MAAMuF,IAEFyX,EAAgB,SAACpd,GAC5B,IAAMC,EAAU,IAAIC,QACpBD,EAAQE,OAAO,gBAAiBd,aAAaC,QAAQ,uBACrDW,EAAQE,OAAO,eAAgB,oBAC/B,IAAMwF,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,yBAAmC0D,GAAM,CACvDK,OAAQ,MACRJ,YAEF,OAAOG,MAAMuF,IAGF0X,EAAqB,SAACrd,EAAI8Z,GACrC,IAAM7Z,EAAU,IAAIC,QACpBD,EAAQE,OAAO,gBAAiBd,aAAaC,QAAQ,uBACrDW,EAAQE,OAAO,eAAgB,oBAC/B,IAAMwF,EAAU,IAAIC,QAAJ,UAAetJ,UAAf,2BAAqC0D,EAArC,YAA2C8Z,GAAQ,CACjEzZ,OAAQ,MACRJ,YAEF,OAAOG,MAAMuF,IAGF2X,EAAsB,SACjCxD,GAEI,IADJ+C,EACG,uDADO,CAAEF,QAAS,EAAGG,OAAQ,MAE1B7c,EAAU,IAAIC,QACpBD,EAAQE,OAAO,gBAAiBd,aAAaC,QAAQ,uBACrDW,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,UAAU,GACzB,IAAM+Q,EAAOC,KAAKC,UAAUyL,GAC5B,OAAOzc,MAAM,GAAD,OAAI9D,UAAJ,gCAA+Bwd,GAAQ,CACjDzZ,OAAQ,OACRJ,UACAiR,W,uXCpMSqM,EAAc,SAAC/gB,GAC1B,OACE,yBAAKgB,MAAK,aAAIC,QAAS,OAAQiJ,eAAgB,UAAalK,EAAMgB,QAC/DhB,EAAM8d,WAKPkD,EAAsB,SAAChhB,GAAW,IAChCihB,EAA+CjhB,EAA/CihB,WAAYC,EAAmClhB,EAAnCkhB,UAAWzc,EAAwBzE,EAAxByE,WAAYmB,EAAY5F,EAAZ4F,QAOzC,OANAqb,EAAaA,EAAWjd,KAAI,SAACmd,GAC3B,OAAO,eACFA,EADL,CAEErc,OAAQ,CAAErD,SAAUzB,EAAMyB,SAAUH,aAActB,EAAMsB,mBAI1D,6BACE,kBAACyf,EAAD,KACE,kBAAC,UAAD,CACErc,OAAQ1E,EAAM0E,OACdlB,GAAIxD,EAAMwD,GACVoC,QAASA,EACT7B,SAAUkd,EACVxc,WAAYA,KAGhB,kBAACsc,EAAD,CAAa/f,MAAO,CAAEe,UAAW,GAAIoI,aAAc,KAChD+W,EACC,kBAAC,IAAD,MACwB,IAAtBD,EAAWvU,OACb,yBACE1L,MAAO,CAAEoC,WAAY,UAAWC,WAAY,OAAQ3B,SAAU,KADhE,0CAMA,yBACEV,MAAO,CAAEoC,WAAY,UAAWC,WAAY,OAAQ3B,SAAU,KADhE,4BAiGJ0f,EAAkB,CACtBhe,WAAY,UACZC,WAAY,OACZvB,MAAO,OACPJ,SAAU,IAEN2f,EAAa,SAACrhB,GAAW,IACrBshB,EAA8CthB,EAA9CshB,SAAUlgB,EAAoCpB,EAApCoB,IAAKT,EAA+BX,EAA/BW,KAAMmJ,EAAyB9J,EAAzB8J,SAAUrF,EAAezE,EAAfyE,WADX,EAEDvE,mBAAS,MAFR,mBAErBqhB,EAFqB,KAEXC,EAFW,KA0B5B,OACE,kBAAC,WAAD,KACE,kBAAC,UAAD,CACEpgB,IAAKmgB,EACL3K,GAAI5W,EAAM4W,GACV/V,QAAS,WACP2gB,EAAO,SAGX,kBAAC,IAAD,CACE7gB,KAAMA,EACNE,QAAS,WACPiJ,GAAS,IAEX9I,MAAO,CACLC,QAAS,OACTC,WAAY,SACZgJ,eAAgB,WAGlB,kBAAC,IAAD,CAAOlJ,MAAO,CAAEwM,WAAYiU,IAAK,OAC/B,kBAAC,IAAD,CAAOrgB,IAAKA,EAAKyK,KAAK,OAAO7K,MA5CnB,SAACyD,GACjB,OAAQA,GACN,IAAK,MAML,IAAK,MACH,MAAO,CACLid,SAAU,IACV7U,UAAW,KAGf,IAAK,MACH,MAAO,CACL6U,SAAU,IACV7U,UAAW,MA2ByB8U,CAAUld,KAC9C,2BACEgE,KAAK,OACLzH,MAAO,CAAEC,QAAS,QAClB+a,OAAO,UACPxY,GAAG,mBACH8H,SAAU,SAACC,GACT,IAAM0L,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,WAC9BqK,EAAOvK,EAAOI,QACdvN,GAAS,MAEXmN,EAAO2K,cAAcrW,EAAE6B,OAAO4J,MAAM,OAGvCsK,EACC,kBAAC,IAAD,KACE,2BAAOO,QAAQ,oBACb,kBAAC,IAAD,CAAU/U,QAAM,EAAC9L,MAAOogB,GACtB,yBACEhgB,IAAI,wDACJJ,MAAO,CAAE0gB,SAAU,GAAI7U,UAAW,SAM1C,OAQCiV,EAAc,SAAC9hB,GAAW,IAAD,EACFE,oBAAS,GADP,mBAC7B6hB,EAD6B,KAClBC,EADkB,OAEX9hB,mBAAS,MAFE,mBAE7B+hB,EAF6B,KAErBT,EAFqB,OAGdthB,oBAAS,GAHK,mBAG7BgiB,EAH6B,KAGxBC,EAHwB,OAIdjiB,oBAAS,GAJK,mBAI7BkiB,EAJ6B,KAIxBC,EAJwB,KAK9BC,EAAiB,SAAC7Z,GACtB,OAAQA,GACN,IAAK,MACH,MAAO,CACLrG,MAAO,KAEX,IAAK,MACH,MAAO,CACLA,MAAO,KAEX,IAAK,MACH,MAAO,CACLA,MAAO,KAEX,QACE,MAAO,CACLA,MAAO,OAKTmgB,EAAcd,IAAK,KAEzB,OADA7Y,QAAQC,IAAI7I,EAAMwiB,QAEhB,6BACE,kBAACnB,EAAD,CACE1gB,KAAMohB,EACNT,SAAUthB,EAAMshB,SAChBxX,SAAUkY,EACVvd,WAAYzE,EAAMyE,WAClBmS,GAAe,OAAXqL,EACJ7gB,IAAgB,OAAX6gB,EAAkBjiB,EAAMsB,aAAetB,EAAM2Q,kBAEpD,kBAAC,IAAD,CACEnF,UAAW,GACXxK,MAAK,eACAshB,EAAetiB,EAAMyE,YADrB,CAEH2F,aAAc,GACdoD,WAAYiU,IAAK,QAGnB,kBAAC,IAAD,CACExX,OAAQmY,EACRxV,QAAQ,OACRxK,MAAO,OACPpB,MAAO,CACLc,MAAO,QACP0L,WAAY,OACZiV,oBAAqB,GACrBC,qBAAsB,IAExBrgB,OAAQ,MAGV,kBAAC,IAAD,CACE4H,QAASmY,EACThhB,IAAKpB,EAAM2Q,gBACX3P,MAAO,CACLoB,MAAO,OACPyK,UAAWyV,EAAetiB,EAAMyE,YAChCge,oBAAqB,GACrBC,qBAAsB,GACtBpY,OAAQ,WAEV3H,QAAS,WACPqf,GAAa,GACbR,EAAO,OAETzW,OAAQ,WACNsX,GAAO,MAGX,kBAAC,IAAD,CACEpY,OAAQiY,EACRtV,QAAQ,SACRxK,MAAO,IACPC,OAAQ,IACRrB,MAAO,CACLc,MAAO,QACP0L,WAAY,YACZmV,UAAW,wCAIf,kBAAC,IAAD,CACE1Y,QAASiY,EACT9gB,IAAKpB,EAAMsB,aACXN,MAAO,CACLoB,MAAO,IACPC,OAAQ,IACRsgB,UAAW,qCACXrY,OAAQ,WAEV3H,QAAS,WACPqf,GAAa,GACbR,EAAO,OAETzW,OAAQ,WACNoX,GAAO,MAIX,kBAAC,IAAD,CAAMnhB,MAAO,CAAE8K,WAAY,GAAI3K,YAAa,KAC1C,kBAAC,IAAD,CACEgV,eAAa,EACbnV,MAAO,CACLU,SAAU,GACV2B,WAAY,OACZD,WAAY,UACZuf,UAAW,oBACX7gB,MAAO,UAGR9B,EAAMyB,UAGT,kBAAC,IAAD,CACE0U,eAAa,EACbnV,MAAO,CACLU,SAAU,GACV6b,UAAW,SACXla,WAAY,IACZvB,MAAO,OACPsB,WAAY,YAPhB,OAWE,kBAAC,IAAD,CACEpC,MAAO,CACLc,MAAO,QACPgK,WAAY,GACZ1I,WAAY,YAGbpD,EAAM+M,UAAY,IAAM/M,EAAMgN,UAEhChN,EAAMshB,SACL,kBAAC,IAAD,CACEtgB,MAAO,CACL2J,MAAO,QACP7I,MAAO,QACP6gB,UAzHU,qBA2HZhgB,QAAS,WACP3C,EAAM4iB,WACN5iB,EAAM6iB,QAAQ,UAGhB,yBACEzhB,IAAI,kDACJJ,MAAO,CAAE0gB,SAAU,GAAI7U,UAAW,OAItC,IAGJ,kBAAC,IAAD,CACE7L,MAAO,CACLc,MAAO,OACP0L,WAAY+U,EACZxgB,UAAW,MAGf,kBAAC,IAAD,CACEoU,eAAa,EACbnV,MAAO,CACLuc,UAAW,SACX7b,SAAU,GACV2B,WAAY,IACZvB,MAAO,OACPsB,WAAY,YAGd,uCACA,kBAAC,IAAD,CACEpC,MAAO,CACLc,MAAO,QACPgK,WAAY,GACZ1I,WAAY,YAGbpD,EAAM8iB,SAGX,kBAAC,IAAD,CACE9hB,MAAO,CACLc,MAAO,YACP0L,WAAY+U,EACZxgB,UAAW,MAGf,kBAAC,IAAD,CACEoU,eAAa,EACbnV,MAAO,CACLU,SAAU,GACV6b,UAAW,SACXla,WAAY,IACZvB,MAAO,OACPsB,WAAY,YAPhB,SAWE,kBAAC,IAAD,CACEpC,MAAO,CACLc,MAAO,QACPgK,WAAY,GACZ1I,WAAY,YAGbpD,EAAMsW,SAGX,kBAAC,IAAD,CACEtV,MAAO,CACLc,MAAO,YACP0L,WAAY+U,EACZxgB,UAAW,MAGf,kBAAC,IAAD,CACEoU,eAAa,EACbnV,MAAO,CACLuc,UAAW,SACX7b,SAAU,GACV2B,WAAY,IACZvB,MAAO,OACPsB,WAAY,YAPhB,SAWE,kBAAC,IAAD,CACEpC,MAAO,CACLc,MAAO,QACPgK,WAAY,GACZ1I,WAAY,YAGbpD,EAAM+iB,SAIX,kBAAC,IAAD,CACE/hB,MAAO,CACLc,MAAO,YACP0L,WAAY+U,EACZxgB,UAAW,MAGf,kBAAC,IAAD,CACEoU,eAAa,EACbnV,MAAO,CACLuc,UAAW,SACX7b,SAAU,GACV2B,WAAY,IACZvB,MAAO,OACPsB,WAAY,YAPhB,UAWE,kBAAC,IAAD,CACEpC,MAAO,CACLc,MAAO,QACPgK,WAAY,GACZ1I,WAAY,YAGbpD,EAAMgjB,SAGX,kBAAC,IAAD,CACEhiB,MAAO,CACLc,MAAO,YACP0L,WAAY+U,EACZxgB,UAAW,MAGf,kBAAC,IAAD,CACEoU,eAAa,EACbnV,MAAO,CACLuc,UAAW,SACX7b,SAAU,GACV2B,WAAY,IACZvB,MAAO,OACPsB,WAAY,YAPhB,cAWE,kBAAC,IAAD,CACEpC,MAAO,CACLc,MAAO,QACPgK,WAAY,GACZ1I,WAAY,YAGW,WAAxBpD,EAAMwiB,OAAOnZ,OACV1H,IAAO3B,EAAMwiB,OAAOS,UAAUphB,UAC9B,WAGR,kBAAC,IAAD,CACEb,MAAO,CACLc,MAAO,YACP0L,WAAY+U,EACZxgB,UAAW,MAGf,kBAAC,IAAD,CACEoU,eAAa,EACbnV,MAAO,CACLU,SAAU,GACV6b,UAAW,SACXla,WAAY,IACZvB,MAAO,OACPsB,WAAY,YAPhB,UAWE,kBAAC,IAAD,CACEpC,MAAO,CACLc,MAAO,QACPgK,WAAY,GACZ3B,aAAc,GACd/G,WAAY,YAGbpD,EAAM0Q,UAGX,kBAAC,IAAD,CACE1P,MAAO,CACLc,MAAO,YACP0L,WAAY+U,EACZxgB,UAAW,MAGf,kBAAC,IAAD,CACEoU,eAAa,EACbnV,MAAO,CACLU,SAAU,GACV6b,UAAW,SACXla,WAAY,IACZvB,MAAO,OACPsB,WAAY,YAPhB,0BAWE,kBAAC,IAAD,CACEpC,MAAO,CACLc,MAAO,QACPgK,WAAY,GACZ3B,aAAc,GACd/G,WAAY,YAGbpD,EAAMkjB,gBAIVljB,EAAM8d,aAaF3X,uBANS,SAACC,GACvB,MAAO,CACL5C,GAAI4C,EAAMF,YAAY1C,MAIX2C,EAviBC,SAACnG,GAAW,IAAD,EACWE,mBAAS,IADpB,mBAClB+gB,EADkB,KACNkC,EADM,OAGLjjB,oBAAS,GAHJ,mBAGlBkjB,EAHkB,KAGdC,EAHc,OAIDnjB,mBAAS,GAJR,mBAIlBod,EAJkB,KAIZgG,EAJY,KAwBzB,OACE,kBAAC,IAAD,CACExD,SAAU,SAACvU,EAAD,GAAyB,EAAnBgY,aACGC,eAAiBvC,EAAWvU,OAAS4Q,EAAO,KArBjE+F,GAAM,GACNxC,6BAAmB7gB,EAAMyjB,OAAQnG,GAC9Bta,KADH,uCACQ,WAAOmF,GAAP,IAAAC,EAAA,SAAAA,EAAA,0DACAD,EAAIE,GADJ,gCAEcF,EAAIG,OAFlB,cAEIF,EAFJ,OAIF+a,EAAc,GAAD,mBAAKlC,GAAL,YAAoB7Y,KACjCib,GAAM,GACNC,EAAQhG,EAAO,IANb,0BASJ+F,GAAM,GATF,2CADR,uDAYGpgB,OAAM,SAACsI,GACN8X,GAAM,SAYR,6BACE,kBAAC,IAAepF,IAAWC,aACzB,kBAAC4D,EAAD,eACER,SAAUthB,EAAMshB,UACZthB,EAFN,CAGEyE,WAAY,SAEd,kBAACuc,EAAD,CACEtc,OAAQ1E,EAAM0E,OACdlB,GAAIxD,EAAMwD,GACVoC,QAAS5F,EAAM4F,QACftE,aAActB,EAAMsB,aACpBG,SAAUzB,EAAMyB,SAChBgD,WAAY,OACZwc,WAAYA,EACZC,UAAWkC,KAGf,kBAAC,IAAenF,IAAWE,WACzB,kBAAC2D,EAAD,eACER,SAAUthB,EAAMshB,UACZthB,EAFN,CAGEyE,WAAY,SAEd,kBAACuc,EAAD,CACE1f,aAActB,EAAMsB,aACpBkC,GAAIxD,EAAMwD,GACVoC,QAAS5F,EAAM4F,QACfnE,SAAUzB,EAAMyB,SAChBgD,WAAY,MACZwc,WAAYA,EACZC,UAAWkC,KAGf,kBAAC,IAAenF,IAAWG,WACzB,kBAAC0D,EAAD,eACER,SAAUthB,EAAMshB,UACZthB,EAFN,CAGEyE,WAAY,SAEd,kBAACuc,EAAD,CACEpb,QAAS5F,EAAM4F,QACftE,aAActB,EAAMsB,aACpBkC,GAAIxD,EAAMwD,GACV/B,SAAUzB,EAAMyB,SAChBgD,WAAY,MACZwc,WAAYA,EACZC,UAAWkC,W,oBCvJvB3I,EAAOiJ,QAAU,IAA0B,yC,iCCA3C,+FAQMC,EAASC,oBACfC,IAASC,OACP,kBAAC,IAAD,CAAUF,MAAOD,GACf,kBAAC,UAAD,OAEFzL,SAAS6L,eAAe,SAM1B5E,gB,wJCnBA1E,EAAOiJ,QAAU,IAA0B,sC","file":"static/js/main.4532026a.chunk.js","sourcesContent":["const url = \"http://ec2-52-66-207-229.ap-south-1.compute.amazonaws.com\";\r\nconst url1 = \"http://localhost:3001\";\r\nexport default url;\r\n","import moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { Modal, ModalHeader, Button } from \"semantic-ui-react\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { CenterStuff } from \"../../../../Person/OthersProfile/profile/Profile\";\r\nimport { ArrowUpward, ArrowDownward } from \"@material-ui/icons\";\r\n\r\nimport url from \"../../../../../strings/url\";\r\n\r\nexport const ISMISM = (props) => {\r\n  const { noteDetails } = props;\r\n\r\n  const [upVotes, setUpVotes] = useState(noteDetails.upVotes);\r\n  const [downVotes, setDownVotes] = useState(noteDetails.downVotes);\r\n  const [isUpVoted, setIsUpVoted] = useState(props.isUpVoted);\r\n  const [isDownVoted, setIsDownVoted] = useState(props.isDownVoted);\r\n  return (\r\n    <Modal\r\n      open={Boolean(noteDetails)}\r\n      onClose={() => {\r\n        props.onClose();\r\n      }}\r\n      className=\"comingFromUpP5\"\r\n      dimmer=\"inverted\"\r\n    >\r\n      <ModalHeader>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Avatar\r\n            style={{ marginRight: 10 }}\r\n            src={noteDetails.by.profilephoto}\r\n          ></Avatar>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n\r\n                flexGrow: 1,\r\n              }}\r\n            >\r\n              <div>{noteDetails.by.username}</div>\r\n            </div>\r\n            <div style={{ fontSize: 11 }}>\r\n              Posted This Note {moment(noteDetails.postedOn).fromNow()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ fontSize: 16, color: \"grey\", marginTop: 10 }}>\r\n          {noteDetails.forSubject}\r\n        </div>\r\n        <div style={{ fontSize: 16, color: \"grey\" }}>\r\n          {\"Topic :: \" + noteDetails.topic}\r\n        </div>\r\n      </ModalHeader>\r\n      <Modal.Content>\r\n        <iframe\r\n          src={noteDetails.src.pdfUrl}\r\n          width=\"100%\"\r\n          height=\"500px\"\r\n          style={{ border: \"none\", outline: \"none\", boxShadow: \"none\" }}\r\n          title={noteDetails.title}\r\n        ></iframe>\r\n      </Modal.Content>\r\n      <Modal.Content>\r\n        Upvote\r\n        <IconButton\r\n          disableRipple\r\n          onClick={() => {\r\n            setIsUpVoted(!isUpVoted);\r\n            setUpVotes(!isUpVoted ? upVotes + 1 : upVotes - 1);\r\n            setDownVotes(isDownVoted ? downVotes - 1 : downVotes);\r\n            setIsDownVoted(isDownVoted ? !isDownVoted : isDownVoted);\r\n            handleUpVote(\r\n              localStorage.getItem(\"AnonymityToken#123\"),\r\n              noteDetails._id\r\n            )\r\n              .then()\r\n              .catch();\r\n          }}\r\n        >\r\n          <ArrowUpward\r\n            className={isUpVoted ? \"fadeUpToBlue\" : \"fadeUp\"}\r\n            style={{ animation: \"none\" }}\r\n          ></ArrowUpward>\r\n        </IconButton>\r\n        DownVote\r\n        <IconButton\r\n          onClick={() => {\r\n            setIsDownVoted(!isDownVoted);\r\n            setDownVotes(!isDownVoted ? downVotes + 1 : downVotes - 1);\r\n            setUpVotes(isUpVoted ? upVotes - 1 : upVotes);\r\n            setIsUpVoted(isUpVoted ? !isUpVoted : isUpVoted);\r\n            handleDownVote(\r\n              localStorage.getItem(\"AnonymityToken#123\"),\r\n              noteDetails._id\r\n            )\r\n              .then()\r\n              .catch();\r\n          }}\r\n          disableRipple\r\n        >\r\n          <ArrowDownward\r\n            className={isDownVoted ? \"fadeUpToRed\" : \"fadeUp\"}\r\n            style={{ animation: \"none\" }}\r\n          ></ArrowDownward>\r\n        </IconButton>\r\n        <CenterStuff>\r\n          <div\r\n            style={{\r\n              fontFamily: \"poppins\",\r\n              fontSize: 12,\r\n              marginRight: 10,\r\n              animation: \"none\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            className={isUpVoted ? \"fadeUpToBlue\" : \"fadeUp\"}\r\n          >\r\n            UpVotes.... {upVotes}\r\n          </div>\r\n          <div\r\n            style={{\r\n              fontFamily: \"poppins\",\r\n              fontSize: 12,\r\n              animation: \"none\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            className={isDownVoted ? \"fadeUpToRed\" : \"fadeUp\"}\r\n          >\r\n            DownVotes.... {downVotes}\r\n          </div>\r\n        </CenterStuff>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button\r\n          onClick={() => {\r\n            props.onClose();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst handleUpVote = (token, id) => {\r\n  const headers = new Headers();\r\n  headers.append(\"Authorization\", token);\r\n  return fetch(`${url}/notes/upVote/${id}`, { method: \"GET\", headers });\r\n};\r\nconst handleDownVote = (token, id) => {\r\n  const headers = new Headers();\r\n  headers.append(\"Authorization\", token);\r\n  return fetch(`${url}/notes/downVote/${id}`, { method: \"GET\", headers });\r\n};\r\n\r\n// <CenterStuff style={{ justifyContent: \"flex-start\" }}>\r\n//           <Avatar src={noteDetails.by.profilephoto}></Avatar>\r\n//           <div\r\n//             style={{ fontWeight: \"bold\", fontFamily: \"poppins\", margin: 10 }}\r\n//           >\r\n//             {noteDetails.by.username}\r\n//           </div>\r\n//           <div style={{ fontFamily: \"poppins\", margin: 10, fontSize: 12 }}>\r\n//             Posted This Note...\r\n//           </div>\r\n//           <div\r\n//             style={{\r\n//               fontFamily: \"poppins\",\r\n//               margin: 10,\r\n//               marginLeft: 0,\r\n//               fontSize: 10,\r\n//             }}\r\n//           >\r\n//             {moment(noteDetails.postedOn).fromNow()}\r\n//           </div>\r\n//         </CenterStuff>\r\n","import React from \"react\";\r\nimport Problem from \"../../Home/MyProblems/problemList/Problem\";\r\n\r\nconst RenderList = (props) => {\r\n  return (\r\n    <div>\r\n      {props.Problems\r\n        ? props.Problems.map((problem, i) => {\r\n            const UpVotedByMe = problem.UpVoted_By.find((user) => {\r\n              return user.user === props.id;\r\n            });\r\n            const DownVotedByMe = problem.DownVoted_By.find((user) => {\r\n              return user.user === props.id;\r\n            });\r\n\r\n            return (\r\n              <Problem\r\n                deviceType={props.deviceType}\r\n                socket={props.socket}\r\n                className=\"comingFromLeftP5\"\r\n                style={{ animationDelay: i * 0.1 + \"s\" }}\r\n                key={problem._id}\r\n                UpVotedByMe={!!UpVotedByMe}\r\n                DownVotedByMe={!!DownVotedByMe}\r\n                UserId={problem.Author._id}\r\n                id={problem._id}\r\n                profilePhoto={\r\n                  problem.Anonymous\r\n                    ? \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Anonymous.svg/433px-Anonymous.svg.png\"\r\n                    : problem.Author.profilephoto\r\n                }\r\n                username={\r\n                  problem.Anonymous ? \"Anonymous\" : problem.Author.username\r\n                }\r\n                anonymous={problem.Anonymous}\r\n                header={\"College Problems\"}\r\n                image={!problem.Media ? \"\" : problem.Media.imageUrl}\r\n                description={problem.Description}\r\n                createdAt={problem.createdAt}\r\n                UpVotes={problem.UpVotes}\r\n                DownVotes={problem.DownVotes}\r\n                hasDeleteButton={false}\r\n                history={props.history}\r\n              ></Problem>\r\n            );\r\n          })\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenderList;\r\n// <div\r\n//                 key={problem._id}\r\n//                 style={{ display: \"flex\", justifyContent: \"center\" }}\r\n//               ></div>\r\n","import { combineReducers } from \"redux\";\r\nimport navigationReducer from \"./navigation\";\r\nimport visibility from \"./visibility\";\r\nimport HomeReducer from \"./homeNavigation\";\r\nimport authReducer from \"./authReducer\";\r\nimport { userReducer } from \"./userReducer\";\r\nexport default combineReducers({\r\n  navigationReducer,\r\n  visibility,\r\n  HomeReducer,\r\n  authReducer,\r\n  userReducer\r\n});\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./Wrong.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  IconButton,\r\n  CircularProgress,\r\n  ExpansionPanelActions,\r\n  MenuItem,\r\n  ExpansionPanel,\r\n  Container,\r\n  Button as ButtonM,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  Menu,\r\n  Avatar,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  Button,\r\n  ModalHeader,\r\n  Comment,\r\n  CommentAvatar,\r\n  PlaceholderLine,\r\n} from \"semantic-ui-react\";\r\nimport url from \"../../../../strings/url\";\r\n\r\nimport {\r\n  UpVote,\r\n  RemoveUpVote,\r\n  DownVote,\r\n  RemoveDownVote,\r\n  getComments,\r\n  postComment,\r\n  getVotesBy,\r\n  getCommentsCount,\r\n} from \"../../../../ApiRequests/request\";\r\nimport {\r\n  ArrowUpward,\r\n  ArrowDownward,\r\n  Delete,\r\n  CommentOutlined,\r\n  ExpandMoreOutlined,\r\n  VisibilityOffTwoTone,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  Image,\r\n  Card,\r\n  Divider,\r\n  PlaceholderImage,\r\n  Placeholder,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { blue, red } from \"@material-ui/core/colors\";\r\n\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n\r\nconst fontStyle = {\r\n  fontFamily: \"poppins\",\r\n  fontSize: 12,\r\n};\r\nconst fontStyle1 = {\r\n  fontFamily: \"poppins\",\r\n  fontSize: 15,\r\n};\r\n\r\nconst Problem = (props) => {\r\n  const [upVotes, setUpVotes] = useState(props.UpVotes);\r\n  const [downVotes, setDownVotes] = useState(props.DownVotes);\r\n  const [isUpVoted, setUpVote] = useState(props.UpVotedByMe);\r\n  const [isDownVoted, setDownVote] = useState(props.DownVotedByMe);\r\n  const [commentSection, setCommentSection] = useState(false);\r\n  const [commentDescription, setCommentDescription] = useState(\"\");\r\n  const [commentSectionLoading, setCommentSectionLoading] = useState(false);\r\n  const [commentsFetching, setCommentsFetching] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n  const [isEOpen, setExpansionPanel] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [isVotesLoading, setVotesLoading] = useState(false);\r\n  const [votes, setVotes] = useState([]);\r\n  const [whichVote, setWhichVote] = useState(undefined);\r\n  const [isCommentCountFetch, setIsCommentCount] = useState(false);\r\n  const [commentCount, setCommentCount] = useState(0);\r\n\r\n  if (!isCommentCountFetch) {\r\n    getCommentsCount(props.id)\r\n      .then(async (res) => {\r\n        if (res.ok) {\r\n          setCommentCount((await res.json()).count);\r\n          setIsCommentCount(true);\r\n        } else {\r\n          setIsCommentCount(true);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setIsCommentCount(true);\r\n      });\r\n  }\r\n\r\n  const handleGetVotedBy = async (type) => {\r\n    try {\r\n      const response = await getVotesBy(\r\n        localStorage.getItem(\"AnonymityToken#123\"),\r\n        props.id,\r\n        type\r\n      );\r\n\r\n      if (response.ok) {\r\n        const res = await response.json();\r\n        setVotes(res);\r\n        setVotesLoading(false);\r\n      }\r\n    } catch (e) {\r\n      setVotes([]);\r\n      setVotesLoading(false);\r\n      console.log(e.message);\r\n    }\r\n  };\r\n  const handleGetComments = async () => {\r\n    try {\r\n      setCommentsFetching(true);\r\n\r\n      const res = await getComments(\r\n        props.id,\r\n        localStorage.getItem(\"AnonymityToken#123\")\r\n      );\r\n\r\n      const rer = await res.json();\r\n\r\n      setComments(rer);\r\n      setCommentsFetching(false);\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      setCommentsFetching(false);\r\n    }\r\n  };\r\n  const HandleUpVote = () => {\r\n    if (isDownVoted) {\r\n      setDownVote(false);\r\n      setDownVotes((state) => {\r\n        return state - 1;\r\n      });\r\n      setUpVotes((state) => {\r\n        return state + 1;\r\n      });\r\n      setUpVote((state) => {\r\n        return true;\r\n      });\r\n      UpVote(props.id, localStorage.getItem(\"AnonymityToken#123\")).then(\r\n        (res) => {\r\n          RemoveDownVote(props.id, localStorage.getItem(\"AnonymityToken#123\"));\r\n        }\r\n      );\r\n    } else if (!isUpVoted) {\r\n      setUpVotes((state) => {\r\n        return state + 1;\r\n      });\r\n      setUpVote((state) => {\r\n        return true;\r\n      });\r\n      UpVote(props.id, localStorage.getItem(\"AnonymityToken#123\"));\r\n    } else if (isUpVoted) {\r\n      setUpVotes((state) => {\r\n        return state - 1;\r\n      });\r\n      setUpVote((state) => {\r\n        return false;\r\n      });\r\n      RemoveUpVote(props.id, localStorage.getItem(\"AnonymityToken#123\"));\r\n    }\r\n  };\r\n  const handleDownVote = () => {\r\n    if (isUpVoted) {\r\n      setUpVote(false);\r\n      setUpVotes((state) => {\r\n        return state - 1;\r\n      });\r\n      setDownVotes((state) => {\r\n        return state + 1;\r\n      });\r\n      setDownVote(true);\r\n      DownVote(props.id, localStorage.getItem(\"AnonymityToken#123\")).then(\r\n        (res) => {\r\n          return RemoveUpVote(\r\n            props.id,\r\n            localStorage.getItem(\"AnonymityToken#123\")\r\n          );\r\n        }\r\n      );\r\n    } else if (!isDownVoted) {\r\n      setDownVotes((state) => {\r\n        return state + 1;\r\n      });\r\n      setDownVote(true);\r\n      DownVote(props.id, localStorage.getItem(\"AnonymityToken#123\"));\r\n    } else if (isDownVoted) {\r\n      setDownVotes((state) => {\r\n        return state - 1;\r\n      });\r\n      setDownVote(false);\r\n      RemoveDownVote(props.id, localStorage.getItem(\"AnonymityToken#123\"));\r\n    }\r\n  };\r\n  const deletePost = async () => {\r\n    const headers = new Headers();\r\n    const token = localStorage.getItem(\"AnonymityToken#123\");\r\n    headers.append(\"Authorization\", token);\r\n    headers.append(\"content-type\", \"application/json\");\r\n    const request = new Request(`${url}/user/post/${props.id}`, {\r\n      method: \"DELETE\",\r\n      headers,\r\n    });\r\n    try {\r\n      const response = await fetch(request);\r\n      if (response.status === 200) {\r\n        window.location.reload(true);\r\n      }\r\n      setError(true);\r\n    } catch (e) {\r\n      setError(true);\r\n    }\r\n  };\r\n  const [isImageLoading, setImage] = useState(true);\r\n  const [isError, setError] = useState(false);\r\n  const [showImageModal, setModal] = useState(false);\r\n  const [showDeleteModal, setDeleteModal] = useState(false);\r\n\r\n  const calculateWidth = () => {\r\n    if (props.deviceType === \"comp\") {\r\n      return { width: 600 };\r\n    }\r\n    if (props.deviceType === \"mob\") {\r\n      return { width: 325 };\r\n    }\r\n    if (props.deviceType === \"tab\") {\r\n      return { width: 500 };\r\n    }\r\n    if (!props.deviceType) {\r\n      return { width: \"100%\" };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Divider hidden></Divider>\r\n      <Card\r\n        className={props.className}\r\n        style={{\r\n          ...props.style,\r\n          ...calculateWidth(),\r\n          border: \"none\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          marginBottom: 10,\r\n          boxShadow: \"1px 0px 20px rgba(0,0,0,0.2)\",\r\n          borderRadius: 5,\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header\r\n            style={{ color: \"grey\", fontFamily: \"poppins\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              if (!Boolean(props.anonymous)) {\r\n                props.history.push(`/anonymity/person/${props.UserId}`);\r\n                props.dispatch({ type: \"Person\" });\r\n              }\r\n            }}\r\n          >\r\n            <Avatar sizes=\"large\" src={props.profilePhoto}></Avatar>\r\n            {props.username}\r\n            {props.anonymous && props.isHome ? (\r\n              <Tooltip title=\"this post is anonymous\">\r\n                <Avatar\r\n                  style={{ float: \"right\" }}\r\n                  src={\"https://img.icons8.com/doodle/48/000000/fraud.png\"}\r\n                ></Avatar>\r\n              </Tooltip>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card.Header>\r\n          <Card.Meta style={{ color: \"grey\", fontFamily: \"poppins\" }}>\r\n            {\"Posted \" +\r\n              moment(props.createdAt).fromNow() +\r\n              \" \\n\" +\r\n              \"On \" +\r\n              moment(props.createdAt).format(\"LL\")}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {isImageLoading ? (\r\n          <Placeholder>\r\n            <PlaceholderImage rectangular></PlaceholderImage>\r\n          </Placeholder>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          onClick={() => {\r\n            setModal(true);\r\n          }}\r\n        >\r\n          <Image\r\n            src={props.image}\r\n            style={\r\n              isImageLoading || isError\r\n                ? { width: 0, height: 0 }\r\n                : { width: \"100%\" }\r\n            }\r\n            onLoad={() => {\r\n              setImage(false);\r\n            }}\r\n            onError={() => {\r\n              setImage(false);\r\n              setError(true);\r\n            }}\r\n          ></Image>\r\n        </div>\r\n        <Card.Content>\r\n          <Card.Content>\r\n            <div\r\n              style={{\r\n                fontFamily: \"poppins\",\r\n                fontSize: 12,\r\n                fontWeight: \"bolder\",\r\n                color: \"black\",\r\n              }}\r\n            >\r\n              Complaint Statement\r\n            </div>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Card.Description\r\n              style={{\r\n                fontWeight: \"500\",\r\n                fontFamily: \"poppins\",\r\n                wordWrap: \"break-word\",\r\n                hyphens: \"auto\",\r\n                marginTop: 10,\r\n              }}\r\n            >\r\n              {props.description}\r\n            </Card.Description>\r\n          </Card.Content>\r\n        </Card.Content>\r\n\r\n        <ExpansionPanel\r\n          TransitionProps={{ unmountOnExit: true }}\r\n          expanded={isEOpen}\r\n          onChange={(e, i) => {\r\n            setExpansionPanel(i);\r\n          }}\r\n          elevation={0}\r\n        >\r\n          <ExpansionPanelSummary\r\n            expandIcon={\r\n              <Tooltip title={\"Expand\"}>\r\n                <ExpandMoreOutlined></ExpandMoreOutlined>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <ExpansionPanelActions\r\n              aria-label=\"acknowledge\"\r\n              onClick={(e) => e.stopPropagation()}\r\n              onFocus={(e) => {\r\n                e.stopPropagation();\r\n              }}\r\n            >\r\n              {upVotes}\r\n              <Tooltip title=\"UpVote\">\r\n                <IconButton\r\n                  size=\"medium\"\r\n                  style={{\r\n                    marginLeft: \"0.5%\",\r\n                    marginRight: \"1%\",\r\n                    color: isUpVoted ? blue[700] : \"grey\",\r\n                  }}\r\n                  onClick={() => {\r\n                    HandleUpVote();\r\n                  }}\r\n                >\r\n                  <ArrowUpward\r\n                    className={isUpVoted ? \"fadeUpToBlue\" : \"fadeUp\"}\r\n                  ></ArrowUpward>\r\n                </IconButton>\r\n              </Tooltip>\r\n\r\n              {downVotes}\r\n              <Tooltip title=\"DownVote\">\r\n                <IconButton\r\n                  size=\"medium\"\r\n                  style={{\r\n                    marginLeft: \"1%\",\r\n                    color: isDownVoted ? red[500] : \"grey\",\r\n                  }}\r\n                  onClick={() => {\r\n                    handleDownVote();\r\n                  }}\r\n                >\r\n                  <ArrowDownward\r\n                    className={isDownVoted ? \"fadeUpToRed\" : \"fadeUp\"}\r\n                  ></ArrowDownward>\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title=\"Comments\">\r\n                <IconButton\r\n                  onClick={() => {\r\n                    handleGetComments();\r\n                    setCommentSection(true);\r\n                    props.socket.on(\"comment\", (data) => {\r\n                      setComments((prevState) => {\r\n                        return [...prevState, data.data.comment];\r\n                      });\r\n                      setCommentCount((prev) => {\r\n                        return prev + 1;\r\n                      });\r\n                    });\r\n                  }}\r\n                >\r\n                  <CommentOutlined></CommentOutlined>\r\n                </IconButton>\r\n              </Tooltip>\r\n              {comments.length || commentCount}\r\n            </ExpansionPanelActions>\r\n          </ExpansionPanelSummary>\r\n\r\n          <ExpansionPanelDetails>\r\n            <code>Status...</code>\r\n            <VisibilityOffTwoTone></VisibilityOffTwoTone>\r\n          </ExpansionPanelDetails>\r\n          <ExpansionPanelActions>\r\n            {upVotes > 0 ? (\r\n              <ButtonM\r\n                onClick={(e) => {\r\n                  setAnchorEl(e.currentTarget);\r\n                  setVotesLoading(true);\r\n                  setWhichVote(\"UpVotes\");\r\n                  handleGetVotedBy(\"upVotedBy\");\r\n                }}\r\n              >\r\n                UpVoted By\r\n              </ButtonM>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {downVotes > 0 ? (\r\n              <ButtonM\r\n                onClick={(e) => {\r\n                  setAnchorEl(e.currentTarget);\r\n                  setVotesLoading(true);\r\n                  setWhichVote(\"DownVotes\");\r\n                  handleGetVotedBy(\"downVotedBy\");\r\n                }}\r\n              >\r\n                DownVoted By\r\n              </ButtonM>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {props.hasDeleteButton ? (\r\n              <ButtonM\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setDeleteModal(true);\r\n                }}\r\n              >\r\n                <Delete style={{ color: red[500] }}></Delete> Delete\r\n              </ButtonM>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </ExpansionPanelActions>\r\n        </ExpansionPanel>\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={() => {\r\n            setAnchorEl(null);\r\n            setWhichVote(undefined);\r\n            setVotes([]);\r\n          }}\r\n          style={{ maxHeight: 300 }}\r\n        >\r\n          {isVotesLoading ? (\r\n            <div>\r\n              <MenuItem>\r\n                <Skeleton variant=\"circle\" width={40} height={40}></Skeleton>\r\n                <Skeleton variant=\"text\" width={230} height={40}></Skeleton>\r\n              </MenuItem>\r\n            </div>\r\n          ) : votes.length > 0 ? (\r\n            votes.map(({ user }) => {\r\n              return (\r\n                <MenuItem\r\n                  key={user._id}\r\n                  button\r\n                  onClick={() => {\r\n                    props.dispatch({ type: \"Person\" });\r\n                    props.history.push(`/anonymity/person/${user._id}`);\r\n                    if (props.currentTab === \"Person\") {\r\n                      window.location.reload(false);\r\n                    }\r\n                  }}\r\n                >\r\n                  <Avatar src={user.profilephoto}></Avatar>\r\n                  <div\r\n                    style={{\r\n                      marginLeft: 10,\r\n                      width: 200,\r\n                      fontWeight: \"bold\",\r\n                      fontFamily: \"poppins\",\r\n                    }}\r\n                  >\r\n                    {user.firstName + \" \" + user.LastName}\r\n                  </div>\r\n                </MenuItem>\r\n              );\r\n            })\r\n          ) : (\r\n            <div\r\n              style={{\r\n                margin: 10,\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"poppins\",\r\n                width: 200,\r\n              }}\r\n            >\r\n              {`No ${whichVote}`}\r\n            </div>\r\n          )}\r\n        </Menu>\r\n        <Card.Content>\r\n          {commentSectionLoading ? (\r\n            <CircularProgress\r\n              style={{ width: 20, height: 20, color: \"black\" }}\r\n            ></CircularProgress>\r\n          ) : (\r\n            <input\r\n              placeholder=\"Comment...\"\r\n              value={commentDescription}\r\n              onChange={(e) => {\r\n                setCommentDescription(e.target.value);\r\n              }}\r\n              style={{\r\n                width: \"80%\",\r\n                border: \"none\",\r\n                fontSize: 14,\r\n                fontFamily: \"poppins\",\r\n                padding: 4,\r\n                outline: \"none\",\r\n              }}\r\n            ></input>\r\n          )}\r\n          <Tooltip title=\"Post Comment\">\r\n            <button\r\n              disabled={commentDescription.length > 0 ? false : true}\r\n              onClick={async () => {\r\n                try {\r\n                  const token = localStorage.getItem(\"AnonymityToken#123\");\r\n                  setCommentSectionLoading(true);\r\n                  const res = await postComment(\r\n                    props.id,\r\n                    token,\r\n                    commentDescription\r\n                  );\r\n                  const bdy = await res.json();\r\n                  if (res.status === 200) {\r\n                    setCommentDescription(\"\");\r\n                  }\r\n                  setCommentSectionLoading(false);\r\n                } catch (e) {\r\n                  setCommentSectionLoading(false);\r\n                }\r\n              }}\r\n              style={{\r\n                padding: 4,\r\n                color: commentDescription.length == 0 ? blue[100] : blue[500],\r\n                float: \"right\",\r\n                background: \"transparent\",\r\n                fontSize: 15,\r\n                fontFamily: \"poppins\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                cursor: \"pointer\",\r\n                marginRight: 10,\r\n              }}\r\n            >\r\n              Post\r\n            </button>\r\n          </Tooltip>\r\n        </Card.Content>\r\n      </Card>\r\n      <Divider hidden></Divider>\r\n      <Modal\r\n        open={showImageModal}\r\n        basic\r\n        onClose={() => {\r\n          setModal(false);\r\n        }}\r\n        closeIcon\r\n      >\r\n        <Image onContentMenu=\"return false;\" src={props.image} centered></Image>\r\n      </Modal>\r\n      {props.hasDeleteButton ? (\r\n        <Modal basic open={showDeleteModal}>\r\n          <Modal.Header>Delete Your Problem</Modal.Header>\r\n          <Modal.Content>\r\n            <p>Are you sure you want to delete This Post ??</p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              onClick={() => {\r\n                setDeleteModal(false);\r\n              }}\r\n              color=\"red\"\r\n              inverted\r\n            >\r\n              No\r\n            </Button>\r\n            <Button\r\n              positive\r\n              onClick={() => {\r\n                deletePost();\r\n              }}\r\n              color=\"green\"\r\n              inverted\r\n            >\r\n              Yes\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {commentSection ? (\r\n        <Modal\r\n          open={commentSection}\r\n          size=\"tiny\"\r\n          onClose={() => {\r\n            setCommentSection(false);\r\n            props.socket._callbacks[\"$comment\"] = [];\r\n          }}\r\n        >\r\n          <ModalHeader\r\n            style={{\r\n              fontFamily: \"poppins\",\r\n              backgroundColor: \"rgba(0,0,0,1)\",\r\n              fontSize: 15,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                color: \"rgba(255,255,255,0.5)\",\r\n              }}\r\n            >\r\n              Comments on{\" \"}\r\n              {props.username == \"Anonymous\"\r\n                ? \"Someone's\"\r\n                : props.username + \"'s\"}{\" \"}\r\n              Problem\r\n            </div>\r\n          </ModalHeader>\r\n          <Modal.Content className=\"thinScroll\" scrolling>\r\n            <Comment.Group>\r\n              {comments.length > 0 && !commentsFetching ? (\r\n                comments.map((comment, index) => {\r\n                  return (\r\n                    <Fragment>\r\n                      <Comment key={comment + index} className=\"comingFromUpP5\">\r\n                        <Comment.Avatar src={comment.By.profilephoto} />\r\n                        <Comment.Content>\r\n                          <Comment.Author\r\n                            as=\"a\"\r\n                            onClick={() => {\r\n                              props.dispatch({ type: \"Person\" });\r\n                              props.history.push(\r\n                                `/anonymity/person/${comment.By._id}`\r\n                              );\r\n                            }}\r\n                            style={{\r\n                              fontFamily: \"poppins\",\r\n                            }}\r\n                          >\r\n                            {comment.By.firstName + \" \" + comment.By.LastName}\r\n                          </Comment.Author>\r\n                          <Comment.Metadata>\r\n                            {comment.createdAt\r\n                              ? moment(comment.createdAt).fromNow()\r\n                              : \"\"}\r\n                          </Comment.Metadata>\r\n                          <Comment.Text\r\n                            style={{\r\n                              fontFamily: \"poppins\",\r\n                            }}\r\n                          >\r\n                            {comment.description}\r\n                          </Comment.Text>\r\n                        </Comment.Content>\r\n                      </Comment>\r\n                      <Divider hidden></Divider>\r\n                    </Fragment>\r\n                  );\r\n                })\r\n              ) : commentsFetching ? (\r\n                <Placeholder>\r\n                  <Placeholder.Header image>\r\n                    <Placeholder.Line></Placeholder.Line>\r\n                    <Placeholder.Line></Placeholder.Line>\r\n                  </Placeholder.Header>\r\n                  <Placeholder.Header image>\r\n                    <Placeholder.Line></Placeholder.Line>\r\n                    <Placeholder.Line></Placeholder.Line>\r\n                  </Placeholder.Header>\r\n                  <Placeholder.Header image>\r\n                    <Placeholder.Line></Placeholder.Line>\r\n                    <Placeholder.Line></Placeholder.Line>\r\n                  </Placeholder.Header>\r\n                </Placeholder>\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <svg\r\n                    className=\"svg\"\r\n                    version=\"1.1\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 130.2 130.2\"\r\n                  >\r\n                    <circle\r\n                      class=\"path circle\"\r\n                      fill=\"none\"\r\n                      stroke=\"#F93943\"\r\n                      stroke-width=\"6\"\r\n                      stroke-miterlimit=\"10\"\r\n                      cx=\"65.1\"\r\n                      cy=\"65.1\"\r\n                      r=\"62.1\"\r\n                    />\r\n                    <line\r\n                      class=\"path line\"\r\n                      fill=\"none\"\r\n                      stroke=\"#F93943\"\r\n                      stroke-width=\"6\"\r\n                      stroke-linecap=\"round\"\r\n                      stroke-miterlimit=\"10\"\r\n                      x1=\"34.4\"\r\n                      y1=\"37.9\"\r\n                      x2=\"95.8\"\r\n                      y2=\"92.3\"\r\n                    />\r\n                    <line\r\n                      class=\"path line1\"\r\n                      fill=\"none\"\r\n                      stroke=\"#F93943\"\r\n                      stroke-width=\"6\"\r\n                      stroke-linecap=\"round\"\r\n                      stroke-miterlimit=\"10\"\r\n                      x1=\"95.8\"\r\n                      y1=\"38\"\r\n                      x2=\"34.4\"\r\n                      y2=\"92.2\"\r\n                    />\r\n                  </svg>\r\n                  <p class=\"error\">No Comments..!!</p>\r\n                  <div style={{ fontSize: 17, fontFamily: \"poppins\" }}>\r\n                    Wanna Put Some??\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Comment.Group>\r\n          </Modal.Content>\r\n          <Divider style={{ marginBottom: 0, marginTop: 0 }}></Divider>\r\n          <Modal.Content>\r\n            {commentSectionLoading ? (\r\n              <CircularProgress\r\n                style={{ width: 20, height: 20, color: \"black\" }}\r\n              ></CircularProgress>\r\n            ) : (\r\n              <input\r\n                placeholder=\"Comment...\"\r\n                value={commentDescription}\r\n                onChange={(e) => {\r\n                  setCommentDescription(e.target.value);\r\n                }}\r\n                style={{\r\n                  width: \"80%\",\r\n                  border: \"none\",\r\n                  fontSize: 14,\r\n                  fontFamily: \"poppins\",\r\n                  padding: 4,\r\n                  outline: \"none\",\r\n                }}\r\n              ></input>\r\n            )}\r\n            <button\r\n              disabled={commentDescription.length > 0 ? false : true}\r\n              onClick={async () => {\r\n                try {\r\n                  const token = localStorage.getItem(\"AnonymityToken#123\");\r\n                  setCommentSectionLoading(true);\r\n                  const res = await postComment(\r\n                    props.id,\r\n                    token,\r\n                    commentDescription\r\n                  );\r\n                  const bdy = await res.json();\r\n                  if (res.status === 200) {\r\n                    setCommentDescription(\"\");\r\n                  }\r\n                  setCommentSectionLoading(false);\r\n                } catch (e) {\r\n                  setCommentSectionLoading(false);\r\n                }\r\n              }}\r\n              style={{\r\n                padding: 4,\r\n                color: commentDescription.length == 0 ? blue[100] : blue[500],\r\n                float: \"right\",\r\n                background: \"transparent\",\r\n                fontSize: 15,\r\n                fontFamily: \"poppins\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                cursor: \"pointer\",\r\n                marginRight: 20,\r\n              }}\r\n            >\r\n              Post\r\n            </button>\r\n          </Modal.Content>\r\n        </Modal>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profilePhoto1: state.userReducer.profilePhoto,\r\n    currentTab: state.navigationReducer.currentTab,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Problem);\r\n\r\n// <Card.Content extra>\r\n//   {upVotes}\r\n//   <IconButton\r\n//     size=\"medium\"\r\n//     style={{\r\n//       marginLeft: \"0.5%\",\r\n//       marginRight: \"1%\",\r\n//       color: isUpVoted ? blue[700] : \"grey\",\r\n//     }}\r\n//     onClick={() => {\r\n//       HandleUpVote();\r\n//     }}\r\n//   >\r\n//     <ArrowUpward></ArrowUpward>\r\n//   </IconButton>\r\n//   {downVotes}\r\n//   <IconButton\r\n//     size=\"medium\"\r\n//     style={{\r\n//       marginLeft: \"1%\",\r\n//       color: isDownVoted ? red[500] : \"grey\",\r\n//     }}\r\n//     onClick={() => {\r\n//       handleDownVote();\r\n//     }}\r\n//   >\r\n//     <ArrowDownward></ArrowDownward>\r\n//   </IconButton>\r\n//   <IconButton\r\n//     onClick={() => {\r\n//       handleGetComments();\r\n//       setCommentSection(true);\r\n//     }}\r\n//     size=\"small\"\r\n//   >\r\n//     <CommentOutlined></CommentOutlined>\r\n//   </IconButton>\r\n//   {props.hasDeleteButton ? (\r\n//     <IconButton\r\n//       onClick={() => {\r\n//         setDeleteModal(true);\r\n//       }}\r\n//       style={{ float: \"right\" }}\r\n//     >\r\n//       <Delete style={{ color: \"red\" }}></Delete>\r\n//     </IconButton>\r\n//   ) : (\r\n//     \"\"\r\n//   )}\r\n// </Card.Content>\r\n\r\n// <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n//             <Image\r\n//               src={props.image}\r\n//               // style={{ width: \"100%\" }}\r\n//               // size=\"medium\"\r\n//             ></Image>\r\n//           </div>\r\n// <Divider horizontal>Problem Description</Divider>\r\n// <div\r\n//             style={{\r\n//               fontSize: 15,\r\n//               display: \"flex\",\r\n//               justifyContent: \"center\",\r\n//               fontFamily: \"poppins\",\r\n//               fontWeight: \"bold\",\r\n//             }}\r\n//           >\r\n//             {props.description}\r\n//           </div>\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducers/index\";\r\n\r\nexport default () => createStore(reducer);\r\n","import { Home, About, Ranking, NearBy, Person, Messages } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  currentTab: \"Home\",\r\n};\r\nconst navigationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Home:\r\n      return {\r\n        ...state,\r\n        currentTab: Home,\r\n      };\r\n    case About:\r\n      return {\r\n        currentTab: About,\r\n      };\r\n    case Ranking:\r\n      return {\r\n        currentTab: Ranking,\r\n      };\r\n    case NearBy:\r\n      return {\r\n        currentTab: NearBy,\r\n      };\r\n    case Person:\r\n      return {\r\n        currentTab: Person,\r\n      };\r\n    case Messages:\r\n      return {\r\n        currentTab: Messages,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default navigationReducer;\r\n","import { Width } from \"../actionTypes\";\r\nconst Visibility = (state = { [Width]: 1920 }, action) => {\r\n  switch (action.type) {\r\n    case Width:\r\n      return {\r\n        [Width]: action.width\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Visibility;\r\n","import { Notes, MyProblems, Notices } from \"../actionTypes\";\r\nconst initialState = 0;\r\n\r\nconst HomeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Notes:\r\n      return 2;\r\n    case MyProblems:\r\n      return 0;\r\n    case Notices:\r\n      return 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default HomeReducer;\r\n","export const Home = \"Home\";\r\nexport const NearBy = \"Nearby\";\r\nexport const About = \"About\";\r\nexport const Ranking = \"Ranking\";\r\nexport const Width = \"Width\";\r\nexport const MyProblems = \"MyProblems\";\r\nexport const Notices = \"Notices\";\r\nexport const Notes = \"Notes\";\r\nexport const Person = \"Person\";\r\nexport const Messages = \"Messages\";\r\n","const authReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"auth\":\r\n      return true;\r\n    case \"notAuth\":\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initialState = {\r\n  username: \"Unknown\",\r\n  email: \"unknown\",\r\n  college: \"unknown\",\r\n  profilePhoto:\r\n    \"https://cdn0.iconfinder.com/data/icons/flat-design-business-set-3/24/people-customer-unknown-512.png\",\r\n  backgroundPhoto: \"none\",\r\n  token: null,\r\n  phone: null,\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"setUser\":\r\n      return {\r\n        ...state,\r\n        ...action.user,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport \"../../animation.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Notes } from \"../Notes/Notes\";\r\nimport { About } from \"../About/About\";\r\nimport { T } from \"../Test/T\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nconst AuthHeader = lazy(() => import(\"../authHeader/Header\"));\r\nconst Chat = lazy(() => import(\"../Chat/chat\"));\r\nconst Login = lazy(() => import(\"../Login/Login\"));\r\nconst HomeNav = lazy(() => import(\"../HomeNavigator/homenav\"));\r\nconst NotFound = lazy(() => import(\"../NotFound/Not\"));\r\nconst Auth = lazy(() => import(\"../AuthenticateComponent/Auth\"));\r\nconst NearByProblems = lazy(() => import(\"../NearBy/Problems/problems\"));\r\nconst MyProfile = lazy(() => import(\"../Person/MyProfile/MyProfile\"));\r\nconst Others = lazy(() => import(\"../Person/OthersProfile/OthersProfile\"));\r\nconst Signup = lazy(() => import(\"../SignUp/signup\"));\r\nconst NearByNav = lazy(() => import(\"../NearByNavigator/NearByNav\"));\r\nconst SensitiveProblems = lazy(() => import(\"../NearBy/SensitiveProblem\"));\r\nconst Games = lazy(() => import(\"../Games/index\"));\r\nconst DefaultPage = lazy(() => import(\"../DefaultPage\"));\r\nconst FPEmail = lazy(() => import(\"../ForgotPass/EnterEmail/EnterEmail\"));\r\nconst PR = lazy(() => import(\"../ForgotPass/SettingThePassword/ResetPass\"));\r\nconst MyProblems = lazy(() => import(\"../Home/MyProblems/MyProblems\"));\r\nconst AuthMyProblems = (props) => {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            minHeight: \"100vh\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress></CircularProgress>\r\n        </div>\r\n      }\r\n    >\r\n      <Auth {...props} Component={MyProblems}></Auth>\r\n    </Suspense>\r\n  );\r\n};\r\nconst AuthNearByProblems = (props) => {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            minHeight: \"100vh\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress></CircularProgress>\r\n        </div>\r\n      }\r\n    >\r\n      <Auth {...props} Component={NearByProblems}></Auth>\r\n    </Suspense>\r\n  );\r\n};\r\nconst AuthMyProfile = (props) => {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            minHeight: \"100vh\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress></CircularProgress>\r\n        </div>\r\n      }\r\n    >\r\n      <Auth {...props} Component={MyProfile}></Auth>\r\n    </Suspense>\r\n  );\r\n};\r\nconst AuthOthers = (props) => {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            minHeight: \"100vh\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress></CircularProgress>\r\n        </div>\r\n      }\r\n    >\r\n      <Auth {...props} Component={Others}></Auth>\r\n    </Suspense>\r\n  );\r\n};\r\nconst AuthSensitive = (props) => {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            minHeight: \"100vh\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress></CircularProgress>\r\n        </div>\r\n      }\r\n    >\r\n      {\" \"}\r\n      <Auth {...props} Component={SensitiveProblems}></Auth>\r\n    </Suspense>\r\n  );\r\n};\r\nconst AuthNotes = (props) => {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            minHeight: \"100vh\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress></CircularProgress>\r\n        </div>\r\n      }\r\n    >\r\n      <Auth {...props} Component={Notes}></Auth>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst AuthMessages = (props) => {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            minHeight: \"100vh\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress></CircularProgress>\r\n        </div>\r\n      }\r\n    >\r\n      {\" \"}\r\n      <Auth {...props} Component={Chat}></Auth>\r\n    </Suspense>\r\n  );\r\n};\r\nconst AuthGames = (props) => {\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            minHeight: \"100vh\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress></CircularProgress>\r\n        </div>\r\n      }\r\n    >\r\n      {\" \"}\r\n      <Auth {...props} Component={Games}></Auth>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst Router = () => {\r\n  const AuthenticatedRoutes = (\r\n    <div>\r\n      <Suspense\r\n        fallback={\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              minHeight: \"100vh\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress></CircularProgress>\r\n          </div>\r\n        }\r\n      >\r\n        <Route path=\"/anonymity\" component={AuthHeader}></Route>\r\n        <Route path=\"/anonymity/Home\" component={HomeNav}></Route>\r\n        <Route path=\"/anonymity/nearby\" component={NearByNav}></Route>\r\n        <Switch>\r\n          <Route exact path=\"/test\" component={T}></Route>\r\n          <Route exact path=\"/PassReset/:token\" component={PR}></Route>\r\n          <Route exact path=\"/forgetPass\" component={FPEmail}></Route>\r\n          <Route\r\n            exact\r\n            path=\"/anonymity/nearby/sensitive\"\r\n            component={AuthSensitive}\r\n          ></Route>\r\n          <Route\r\n            exact\r\n            path=\"/anonymity/Nearby\"\r\n            component={AuthNearByProblems}\r\n          ></Route>\r\n\r\n          <Route exact path=\"/signup\" component={Signup}></Route>\r\n\r\n          <Route exact path=\"/login\" component={Login}></Route>\r\n          <Route\r\n            exact\r\n            path=\"/anonymity/Home/MyProblems\"\r\n            component={AuthMyProblems}\r\n          ></Route>\r\n          <Route\r\n            exact\r\n            path=\"/anonymity/person\"\r\n            component={AuthMyProfile}\r\n          ></Route>\r\n          <Route\r\n            exact\r\n            path=\"/anonymity/person/:id\"\r\n            component={AuthOthers}\r\n          ></Route>\r\n          <Route\r\n            exact\r\n            path=\"/anonymity/Home\"\r\n            component={AuthMyProblems}\r\n          ></Route>\r\n          <Route\r\n            exact\r\n            path=\"/anonymity/Home/Notes\"\r\n            component={AuthNotes}\r\n          ></Route>\r\n          <Route exact path=\"/anonymity/About\" component={About}></Route>\r\n\r\n          <Route\r\n            exact\r\n            path=\"/anonymity/messages\"\r\n            component={AuthMessages}\r\n          ></Route>\r\n          <Route path=\"/anonymity/ranking\" component={AuthGames}></Route>\r\n          <Route exact path=\"/\" component={DefaultPage}></Route>\r\n          <Route path=\"\" component={NotFound}></Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n\r\n  return <BrowserRouter>{AuthenticatedRoutes}</BrowserRouter>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.authReducer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Router);\r\n// <Route path=\"/anonymity/Adult\" component={AuthAdult}></Route>\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchNotes from \"./SearchNotes/SearchNotes\";\r\nimport { CenterStuff } from \"../Person/OthersProfile/profile/Profile\";\r\nimport { Divider } from \"semantic-ui-react\";\r\nimport { Fab, Snackbar } from \"@material-ui/core\";\r\nimport AddNotes from \"./AddNote/AddNote\";\r\nimport Subject from \"./Subjects/Subject/Subject\";\r\nimport { ISMISM } from \"./Subjects/insideSubjectModal/ISMISM/ISMISM\";\r\n\r\nconst Notes = (props) => {\r\n  const [addNotes, setAddNotes] = useState(false);\r\n  const [successPosting, setSuccess] = useState(false);\r\n  const [pageState, setPage] = useState(\"unknown\");\r\n  const [subject, setSubject] = useState(null);\r\n  const [topic, setTopic] = useState(null);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Snackbar\r\n        autoHideDuration={2000}\r\n        onClose={() => {\r\n          setSuccess(false);\r\n        }}\r\n        transitionDuration={500}\r\n        open={successPosting}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        message=\"Notes Posted....\"\r\n      ></Snackbar>\r\n\r\n      <CenterStuff style={{ marginBottom: 30 }}>\r\n        <SearchNotes\r\n          handleSubjectChange={(subject) => {\r\n            setPage(\"subject\");\r\n            setSubject(subject);\r\n          }}\r\n          handleTopicChange={(topic) => {\r\n            setPage(\"topic\");\r\n            setTopic(topic);\r\n          }}\r\n        ></SearchNotes>\r\n      </CenterStuff>\r\n      {pageState === \"subject\" ? <Subject subject={subject}></Subject> : \"\"}\r\n      <Fragment>\r\n        {addNotes ? (\r\n          <AddNotes\r\n            open={addNotes}\r\n            onClose={() => {\r\n              setAddNotes(false);\r\n            }}\r\n            onSuccess={() => setSuccess(true)}\r\n          ></AddNotes>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Fragment>\r\n      {pageState === \"unknown\" ? <Divider horizontal>Or</Divider> : \"\"}\r\n\r\n      <CenterStuff style={{ transition: \"1s ease\", ...getStyle(pageState) }}>\r\n        {pageState === \"unknown\" ? (\r\n          <div\r\n            style={{ margin: 15, fontFamily: \"poppins\", fontWeight: \"bold\" }}\r\n          >\r\n            Add Notes...\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Fab\r\n          style={{\r\n            marginLeft: 25,\r\n            background: \"white\",\r\n            boxShadow: \"0px 0px 20px rgba(0,0,0,0.2)\",\r\n          }}\r\n          onClick={() => {\r\n            setAddNotes(true);\r\n          }}\r\n        >\r\n          <img\r\n            style={{ width: 30, height: 30 }}\r\n            src=\"https://img.icons8.com/color/50/000000/plus-math.png\"\r\n          />\r\n        </Fab>\r\n      </CenterStuff>\r\n      {topic ? (\r\n        <ISMISM\r\n          onClose={() => {\r\n            setTopic(null);\r\n            setPage(\"unknown\");\r\n          }}\r\n          noteDetails={topic}\r\n          isUpVoted={topic.upVotedBy.find(\r\n            (user) => user.user.toString() === props.id\r\n          )}\r\n          isDownVoted={topic.downVotedBy.find(\r\n            (user) => user.user.toString() === props.id\r\n          )}\r\n        ></ISMISM>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst getStyle = (pageState) => {\r\n  return pageState === \"unknown\"\r\n    ? {\r\n        left: \"auto\",\r\n        bottom: \"auto\",\r\n      }\r\n    : {\r\n        position: \"fixed\",\r\n        right: \"3%\",\r\n        bottom: \"12%\",\r\n      };\r\n};\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    id: state.userReducer.id,\r\n  };\r\n};\r\nconst Notes1 = connect(mapStateToProps)(Notes);\r\n\r\nexport { Notes1 as Notes };\r\n","import React, { Fragment, useState } from \"react\";\r\nimport \"./index.css\";\r\nimport {\r\n  Popper,\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n  CircularProgress,\r\n  ClickAwayListener,\r\n} from \"@material-ui/core\";\r\n\r\nimport url from \"../../../strings/url\";\r\n\r\nconst SearchNotes = (props) => {\r\n  const [searchQuery, setQuery] = useState(\"\");\r\n  const [elAnchor, setElAnchor] = useState(null);\r\n  const [subjectResult, setSubject] = useState([]);\r\n  const [topicResult, setTopic] = useState([]);\r\n  const [isTopicFetching, setTF] = useState(false);\r\n  const [isSubjectFetching, setSF] = useState(false);\r\n  const [SFE, setSFE] = useState(false);\r\n  const handleGetSubjects = (name) => {\r\n    setSF(true);\r\n    const headers = new Headers();\r\n    headers.append(\"content-type\", \"application/json\");\r\n    headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n    fetch(`${url}/notes/subjects/${name}`, { headers, method: \"GET\" }).then(\r\n      async (res) => {\r\n        try {\r\n          if (res.status === 404) {\r\n            setSF(false);\r\n            return setSubject([]);\r\n          }\r\n          if (res.ok) {\r\n            const subjects1 = await res.json();\r\n\r\n            setSubject(subjects1);\r\n            return setSF(false);\r\n          }\r\n          if (res.status === 500) {\r\n            setSFE(true);\r\n            setSF(false);\r\n          }\r\n        } catch (e) {\r\n          console.log(\"error parsing\");\r\n          setSubject([]);\r\n          setSF(false);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  const onTopicChange = async (topic) => {\r\n    try {\r\n      setTF(true);\r\n      const response = await handleTopicChange(\r\n        localStorage.getItem(\"AnonymityToken#123\"),\r\n        topic\r\n      );\r\n      const resBody = await response.json();\r\n      setTF(false);\r\n      setTopic(resBody);\r\n    } catch (e) {\r\n      setTF(false);\r\n      setTopic([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ClickAwayListener\r\n        onClickAway={() => {\r\n          setElAnchor(null);\r\n        }}\r\n        touchEvent={false}\r\n      >\r\n        <input\r\n          placeholder=\"Search For Notes\"\r\n          autoComplete=\"off\"\r\n          className=\"myNotesSearchInputField\"\r\n          id=\"myNotesSearchInputField\"\r\n          value={searchQuery}\r\n          onFocus={(e) => {\r\n            setElAnchor(e.currentTarget);\r\n          }}\r\n          onChange={(e) => {\r\n            setQuery(e.target.value);\r\n            handleGetSubjects(e.target.value);\r\n            onTopicChange(e.target.value);\r\n          }}\r\n        ></input>\r\n      </ClickAwayListener>\r\n\r\n      <Popper\r\n        open={Boolean(elAnchor)}\r\n        anchorEl={elAnchor}\r\n        style={{\r\n          boxShadow: \"0px 0px 10px rgba(0,0,0,0.1)\",\r\n          marginTop: 10,\r\n          zIndex: 1300,\r\n        }}\r\n      >\r\n        <List\r\n          style={{\r\n            width: 300,\r\n            maxHeight: 200,\r\n            overflowY: \"auto\",\r\n            fontFamily: \"poppins\",\r\n            fontWeight: \"bold\",\r\n            fontSize: 13,\r\n            background: \"white\",\r\n          }}\r\n        >\r\n          <ListSubheader\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 16,\r\n              background: \"rgba(255,255,255,1)\",\r\n            }}\r\n            disableSticky\r\n          >\r\n            Subjects\r\n            {isSubjectFetching ? (\r\n              <CircularProgress\r\n                style={{\r\n                  margin: 10,\r\n                  height: 20,\r\n                  width: 20,\r\n                  color: \"orange\",\r\n                  float: \"right\",\r\n                }}\r\n              ></CircularProgress>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </ListSubheader>\r\n          {subjectResult.length === 0 && !isSubjectFetching ? (\r\n            searchQuery.length !== 0 ? (\r\n              <ListItem className=\"backAndForth\">No Result..</ListItem>\r\n            ) : (\r\n              <ListItem className=\"backAndForth\">\r\n                Why Don't You Try Writing Something??\r\n              </ListItem>\r\n            )\r\n          ) : (\r\n            subjectResult.map((element, i) => {\r\n              return (\r\n                <ListItem\r\n                  className=\"comingFromLeftP5\"\r\n                  key={element.name}\r\n                  style={{ animationDelay: `${(i - 1) * 0.05}s` }}\r\n                  button\r\n                  onClick={() => {\r\n                    setElAnchor(null);\r\n                    setQuery(element.name);\r\n                    props.handleSubjectChange(element);\r\n                    setSubject([element]);\r\n                    setTopic([]);\r\n                  }}\r\n                >\r\n                  {element.name}\r\n                  <div\r\n                    style={{\r\n                      fontSize: 10,\r\n                      fontWeight: 300,\r\n                      marginLeft: 10,\r\n                    }}\r\n                  >\r\n                    {`${element.for.course.toUpperCase()}`}\r\n                  </div>\r\n                </ListItem>\r\n              );\r\n            })\r\n          )}\r\n        </List>\r\n        <List\r\n          style={{\r\n            width: 300,\r\n            maxHeight: 200,\r\n            overflowY: \"auto\",\r\n            fontFamily: \"poppins\",\r\n            fontWeight: \"bold\",\r\n            fontSize: 13,\r\n            background: \"white\",\r\n          }}\r\n        >\r\n          <ListSubheader\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 16,\r\n              background: \"rgba(255,255,255,1)\",\r\n            }}\r\n            disableSticky\r\n          >\r\n            Topic\r\n            {isTopicFetching ? (\r\n              <CircularProgress\r\n                style={{\r\n                  margin: 10,\r\n                  height: 20,\r\n                  width: 20,\r\n                  color: \"orange\",\r\n                  float: \"right\",\r\n                }}\r\n              ></CircularProgress>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </ListSubheader>\r\n          {topicResult.map((element) => {\r\n            return (\r\n              <ListItem\r\n                key={element.topic}\r\n                button\r\n                onClick={() => {\r\n                  setElAnchor(null);\r\n                  setQuery(element.topic);\r\n                  props.handleTopicChange(element);\r\n                  setSubject([]);\r\n                  setTopic([]);\r\n                }}\r\n              >\r\n                {element.topic.toUpperCase()}\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </Popper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst handleTopicChange = (token, topic) => {\r\n  const headers = new Headers();\r\n  headers.append(\"Authorization\", token);\r\n  headers.append(\"content-type\", \"application/json\");\r\n  const body = JSON.stringify({ topic });\r\n  return fetch(`${url}/notes/forTopic`, { method: \"POST\", headers, body });\r\n};\r\n\r\nexport default SearchNotes;\r\n","import React, { useState, PureComponent, Fragment } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport { Modal, ModalActions } from \"semantic-ui-react\";\r\nimport {\r\n  Button,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  CircularProgress,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport { orange } from \"@material-ui/core/colors\";\r\nimport url from \"../../strings/url\";\r\nimport { CenterStuff } from \"../Person/OthersProfile/profile/Profile\";\r\n\r\n// const CropComponent = (props) => {\r\n//   const [crop, setCrop] = useState({\r\n//     unit: \"%\",\r\n//     aspect: 1,\r\n//     width: 100,\r\n//     height: 100,\r\n//   });\r\n//   const [src, setSrc] = useState();\r\n//   const ss =\r\n//     \"https://image.shutterstock.com/z/stock-photo-beautiful-business-mom-is-talking-on-the-mobile-phone-and-taking-notes-while-spending-time-with-her-617915141.jpg\";\r\n//   return (\r\n//     <div>\r\n//       <input\r\n//         type={\"file\"}\r\n//         accept=\"image/*\"\r\n//         onChange={(e) => {\r\n//           const fileReader = new FileReader();\r\n//           fileReader.addEventListener(\"load\", () => {\r\n//             setSrc(fileReader.result);\r\n//             console.log(fileReader.result);\r\n//           });\r\n//           fileReader.readAsDataURL(e.target.files[0]);\r\n//         }}\r\n//       ></input>\r\n//       <Modal open={Boolean(src)} basic>\r\n//         <ReactCrop\r\n//           circularCrop\r\n//           crop={crop}\r\n//           src={src}\r\n//           onChange={(e) => {\r\n//             // const formData = new FormData();\r\n//             // formData.append(\"image\", src);\r\n//             // fetch(`${url}/testing`, {\r\n//             //   method: \"POST\",\r\n//             //   body: formData,\r\n//             // });\r\n//           }}\r\n//         ></ReactCrop>\r\n//         <ModalActions>\r\n//           <Button variant=\"contained\" disableElevation>\r\n//             Save\r\n//           </Button>\r\n//         </ModalActions>\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CropComponent;\r\nexport default class ProfilePhotoUploader extends PureComponent {\r\n  state = {\r\n    src: null,\r\n    crop: {\r\n      unit: \"%\",\r\n      width: 100,\r\n      aspect: this.props.pp ? 1 : 16 / 9,\r\n    },\r\n    loading: false,\r\n    error: false,\r\n  };\r\n  componentDidMount() {\r\n    this.setState({\r\n      crop: {\r\n        unit: \"%\",\r\n        width: 100,\r\n        aspect: this.props.pp ? 1 : 16 / 9,\r\n      },\r\n    });\r\n  }\r\n\r\n  onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.setState({ src: reader.result });\r\n      });\r\n      reader.reÌ¥adAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // If you setState the crop in here you should return false.\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop });\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImage = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        \"newFile.jpeg\"\r\n      );\r\n      this.setState({ croppedImage });\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob((blob) => {\r\n        if (!blob) {\r\n          reject(new Error(\"Canvas is empty\"));\r\n          return;\r\n        }\r\n        blob.name = fileName;\r\n        resolve(blob);\r\n      }, \"image/jpeg\");\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { crop, croppedImage } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Snackbar\r\n          open={this.state.error}\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n          autoHideDuration={6000}\r\n          onClose={() => {\r\n            this.setState({ error: false });\r\n          }}\r\n          message=\"Error Uploading Image\"\r\n        ></Snackbar>\r\n        <Modal\r\n          open={Boolean(this.props.src)}\r\n          basic\r\n          onClose={() => {\r\n            this.props.onClose();\r\n          }}\r\n          closeIcon={true}\r\n        >\r\n          <CenterStuff>\r\n            <ReactCrop\r\n              src={this.props.src}\r\n              crop={{ ...crop, aspect: this.props.pp ? 1 : 16 / 9 }}\r\n              ruleOfThirds\r\n              onImageLoaded={this.onImageLoaded}\r\n              onComplete={this.onCropComplete}\r\n              onChange={this.onCropChange}\r\n            />\r\n          </CenterStuff>\r\n\r\n          <ModalActions>\r\n            <ThemeProvider\r\n              theme={createMuiTheme({ palette: { primary: orange } })}\r\n            >\r\n              {this.state.loading ? (\r\n                <CircularProgress></CircularProgress>\r\n              ) : (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  disableElevation\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    this.setState({ loading: true });\r\n                    const fd = new FormData();\r\n                    const headers = new Headers();\r\n                    headers.append(\r\n                      \"Authorization\",\r\n                      localStorage.getItem(\"AnonymityToken#123\")\r\n                    );\r\n\r\n                    fd.append(\"image\", croppedImage, \"whatever\");\r\n                    fetch(`${url}/user/upload/photo`, {\r\n                      method: \"PUT\",\r\n                      body: fd,\r\n                      headers,\r\n                    })\r\n                      .then(async (res) => {\r\n                        if (res.status === 200) {\r\n                          const resbody = await res.json();\r\n                          console.log(resbody);\r\n                          const body = JSON.stringify({\r\n                            photo: resbody.imageUrl,\r\n                          });\r\n                          headers.append(\"content-type\", \"application/json\");\r\n                          fetch(\r\n                            `${url}/user/update/${\r\n                              this.props.pp ? \"profilePhoto\" : \"backgroundPhoto\"\r\n                            }`,\r\n                            { method: \"PATCH\", body, headers }\r\n                          )\r\n                            .then((pres) => {\r\n                              if (pres.status === 200) {\r\n                                return window.location.reload();\r\n                              }\r\n                              this.setState({ error: true, loading: false });\r\n                            })\r\n                            .catch((e) => {\r\n                              this.setState({ error: true, loading: false });\r\n                            });\r\n                        } else {\r\n                          this.setState({ error: true, loading: false });\r\n                        }\r\n                      })\r\n                      .catch((e) => {\r\n                        this.setState({ error: true, loading: false });\r\n                      });\r\n                  }}\r\n                >\r\n                  Upload\r\n                </Button>\r\n              )}\r\n            </ThemeProvider>\r\n          </ModalActions>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import \"./index.css\";\r\nimport url from \"../../../strings/url\";\r\nimport React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Modal, Dimmer } from \"semantic-ui-react\";\r\nimport { Upload } from \"antd\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Popper,\r\n  List,\r\n  ListItem,\r\n  ClickAwayListener,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  CloudUploadOutlined,\r\n  SearchOutlined,\r\n  ArrowForward,\r\n  AddCircle,\r\n} from \"@material-ui/icons\";\r\n\r\nconst handlePostNotes = (token, body) => {\r\n  const headers = new Headers();\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  return fetch(`${url}/post/notes`, {\r\n    method: \"POST\",\r\n    headers,\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\n\r\nconst AddNotes = (props) => {\r\n  const [isTF, setTF] = useState(false);\r\n  const [modalClass, setModalClass] = useState(\"\");\r\n  const [formData, setFormDate] = useState({\r\n    topic: \"\",\r\n    forSubject: \"\",\r\n    forModule: \"\",\r\n    src: \"\",\r\n  });\r\n  useEffect(() => {\r\n    setModalClass(\"comingFromLeftP5\");\r\n    return () => {\r\n      console.log(\"Component UnMounted\");\r\n    };\r\n  }, []);\r\n\r\n  const [error, setError] = useState(false);\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n  let isFormNotValid =\r\n    formData.forModule === \"\" ||\r\n    formData.forSubject === \"\" ||\r\n    formData.src === \"\" ||\r\n    formData.topic === \"\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <Snackbar\r\n        open={error}\r\n        autoHideDuration={6000}\r\n        onClose={() => {\r\n          setError(false);\r\n        }}\r\n        anchorOrigin={{ horizontal: \"center\", vertical: \"top\" }}\r\n        message=\"Error Posting Note\"\r\n      ></Snackbar>\r\n      <Dimmer active={modalLoading} style={{ zIndex: 1309 }}>\r\n        <CircularProgress\r\n          style={{ width: 100, height: 100, color: \"black\" }}\r\n        ></CircularProgress>\r\n      </Dimmer>\r\n      <Modal\r\n        className={modalClass}\r\n        open={props.open}\r\n        dimmer=\"inverted\"\r\n        onClose={() => {\r\n          setModalClass(\"fadeAway\");\r\n          setTimeout(() => {\r\n            props.onClose();\r\n          }, 300);\r\n        }}\r\n      >\r\n        <Modal.Header>Add Notes..</Modal.Header>\r\n\r\n        <Modal.Content>\r\n          <div style={{ padding: 10, fontFamily: \"poppins\" }}>\r\n            Disclaimer !!! You Can't Add Notes For Course and Branch Other Than\r\n            Yours\r\n          </div>\r\n          <MyAutoComplete\r\n            setSandM={(s, m) => {\r\n              setFormDate({ ...formData, forModule: m, forSubject: s });\r\n            }}\r\n          ></MyAutoComplete>\r\n          <input\r\n            placeholder=\"Enter The Topic Description...\"\r\n            value={formData.topic}\r\n            onFocus={() => {\r\n              setTF(true);\r\n            }}\r\n            onBlur={() => {\r\n              setTF(false);\r\n            }}\r\n            onChange={(e) => {\r\n              setFormDate({ ...formData, topic: e.target.value });\r\n            }}\r\n            style={{\r\n              width: \"90%\",\r\n              padding: 10,\r\n              borderRadius: 10,\r\n              boxShadow: `0px 0px ${isTF ? 10 : 1}px rgba(0, 0, 0, 0.05)`,\r\n              border: \"0.5px solid lightgrey\",\r\n              transition: \"0.2s ease\",\r\n              outline: \"none\",\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              margin: 10,\r\n            }}\r\n          ></input>\r\n        </Modal.Content>\r\n        <Modal.Content>\r\n          <Upload\r\n            accept=\"application/pdf\"\r\n            method=\"PUT\"\r\n            headers={{\r\n              Authorization: localStorage.getItem(\"AnonymityToken#123\"),\r\n              contentType: \"application/json\",\r\n            }}\r\n            name=\"pdf\"\r\n            action={`${url}/upload/notes`}\r\n            onChange={(info) => {\r\n              if (info.file.status === \"done\") {\r\n                setFormDate({ ...formData, src: info.file.response });\r\n              }\r\n            }}\r\n            onRemove={() => {\r\n              removeUploadedPhoto(\r\n                localStorage.getItem(\"AnonymityToken#123\"),\r\n                formData.src.key\r\n              );\r\n              setFormDate({ ...formData, src: \"\" });\r\n            }}\r\n          >\r\n            <Button variant=\"outlined\">\r\n              <CloudUploadOutlined\r\n                style={{ marginRight: 4 }}\r\n              ></CloudUploadOutlined>\r\n              Upload Pdf\r\n            </Button>\r\n          </Upload>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            variant=\"contained\"\r\n            disableElevation\r\n            disabled={isFormNotValid}\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setModalLoading(true);\r\n              handlePostNotes(\r\n                localStorage.getItem(\"AnonymityToken#123\"),\r\n                formData\r\n              )\r\n                .then(async (res) => {\r\n                  if (res.ok) {\r\n                    setModalLoading(false);\r\n                    props.onSuccess();\r\n                    return props.onClose();\r\n                  }\r\n                  setModalLoading(false);\r\n                  setError(true);\r\n                })\r\n                .catch((e) => {\r\n                  setModalLoading(false);\r\n                  setError(true);\r\n                });\r\n            }}\r\n            style={{\r\n              marginRight: 10,\r\n              marginBottom: 10,\r\n              background: isFormNotValid\r\n                ? \"rgba(0,0,0,0.1)\"\r\n                : \"rgba(135,206,255,1)\",\r\n            }}\r\n          >\r\n            Post Notes\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{ marginBottom: 10 }}\r\n            onClick={() => {\r\n              removeUploadedPhoto(\r\n                localStorage.getItem(\"AnonymityToken#123\"),\r\n                formData.src.key\r\n              );\r\n              setFormDate({ ...formData, src: \"\" });\r\n              setModalClass(\"fadeAway\");\r\n              setTimeout(() => {\r\n                props.onClose();\r\n              }, 300);\r\n            }}\r\n          >\r\n            Exit\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst getList = (n) => {\r\n  const a = [];\r\n  for (let i = 0; i < n; i++) {\r\n    a.push(i + 1);\r\n  }\r\n  return a;\r\n};\r\n\r\nconst removeUploadedPhoto = (token, key) => {\r\n  const headers = new Headers();\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  return fetch(`${url}/uploaded/notes`, {\r\n    method: \"DELETE\",\r\n    headers,\r\n    body: JSON.stringify({ key: key + \"\" }),\r\n  });\r\n};\r\n\r\nexport const MyAutoComplete = (props) => {\r\n  const [anchorEl, setAnchorEl1] = useState(null);\r\n  const [anchorEl2, setAnchorEl2] = useState(null);\r\n  const [subject, setSubject] = useState(null);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [module, setModule] = useState(\"\");\r\n\r\n  const handleGetSubjects = (name) => {\r\n    setLoading(true);\r\n    const headers = new Headers();\r\n    headers.append(\"content-type\", \"application/json\");\r\n    headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n    setTimeout(() => {\r\n      fetch(`${url}/postNotes/subjects/${name}`, {\r\n        headers,\r\n        method: \"GET\",\r\n      }).then(async (res) => {\r\n        try {\r\n          if (res.status === 404) {\r\n            setLoading(false);\r\n            return setSubjects([]);\r\n          }\r\n          if (res.ok) {\r\n            const subjects1 = await res.json();\r\n            setSubjects(subjects1);\r\n\r\n            return setLoading(false);\r\n          }\r\n          if (res.status === 500) {\r\n            setLoading(false);\r\n          }\r\n        } catch (e) {\r\n          console.log(\"error parsing\");\r\n          setSubjects([]);\r\n          setLoading(false);\r\n        }\r\n      });\r\n    }, 100);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Fragment>\r\n        <ClickAwayListener\r\n          onClickAway={() => {\r\n            setAnchorEl1(null);\r\n          }}\r\n          touchEvent={false}\r\n        >\r\n          <input\r\n            onFocus={(e) => {\r\n              setAnchorEl1(e.currentTarget);\r\n            }}\r\n            // onBlur={(e) => {\r\n            //   setAnchorEl(null);\r\n            // }}\r\n            value={searchQuery}\r\n            autoComplete=\"off\"\r\n            onChange={(e) => {\r\n              handleGetSubjects(e.target.value);\r\n              setSearchQuery(e.target.value);\r\n              setSubject(null);\r\n              setSubjects([]);\r\n              setModule(\"\");\r\n              props.setSandM(\"\", \"\");\r\n            }}\r\n            placeholder=\"Choose Subject\"\r\n            type=\"select\"\r\n            className=\"MySelectField\"\r\n          ></input>\r\n        </ClickAwayListener>\r\n        <ClickAwayListener\r\n          onClickAway={() => setAnchorEl2(null)}\r\n          touchEvent={false}\r\n        >\r\n          <input\r\n            disabled={!Boolean(subject)}\r\n            autoComplete=\"off\"\r\n            onFocus={(e) => {\r\n              setAnchorEl2(e.currentTarget);\r\n            }}\r\n            value={module}\r\n            placeholder=\"Choose Module\"\r\n            type=\"select\"\r\n            className=\"MySelectField\"\r\n          ></input>\r\n        </ClickAwayListener>\r\n      </Fragment>\r\n      <Popper\r\n        style={{\r\n          zIndex: 1300,\r\n          boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.05)\",\r\n          margin: 10,\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n      >\r\n        <List\r\n          style={{\r\n            background: \"white\",\r\n            width: 300,\r\n            maxHeight: 200,\r\n\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <ListItem>\r\n              <CircularProgress\r\n                style={{\r\n                  color: \"black\",\r\n                  height: 10,\r\n\r\n                  width: 10,\r\n                }}\r\n              ></CircularProgress>\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {subjects.length > 0 ? (\r\n            subjects.map((subject1) => {\r\n              return (\r\n                <ListItem\r\n                  button\r\n                  key={subject1.name}\r\n                  onClick={() => {\r\n                    console.log(\"hello\");\r\n                    setSearchQuery(subject1.name);\r\n                    setSubject(subject1);\r\n                    setAnchorEl1(null);\r\n                  }}\r\n                >\r\n                  <ArrowForward\r\n                    style={{ height: 10, width: 10, marginRight: 10 }}\r\n                  ></ArrowForward>\r\n                  {subject1.name}\r\n                </ListItem>\r\n              );\r\n            })\r\n          ) : searchQuery.length === 0 ? (\r\n            <ListItem style={{ fontWeight: \"bold\" }}>\r\n              <SearchOutlined style={{ marginRight: 20 }}></SearchOutlined>\r\n              Try Writing Subject Name..\r\n            </ListItem>\r\n          ) : loading ? (\r\n            \"\"\r\n          ) : (\r\n            <div style={{ margin: 20 }}>No Results...</div>\r\n          )}\r\n        </List>\r\n      </Popper>\r\n      <Popper\r\n        style={{\r\n          zIndex: 1300,\r\n          boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.05)\",\r\n          margin: 10,\r\n        }}\r\n        anchorEl={anchorEl2}\r\n        open={Boolean(anchorEl2)}\r\n      >\r\n        <List\r\n          style={{\r\n            background: \"white\",\r\n            width: 300,\r\n            maxHeight: 200,\r\n\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          {subject\r\n            ? getList(subject.moduleCount).map((count) => {\r\n                return (\r\n                  <ListItem\r\n                    button\r\n                    key={count}\r\n                    onClick={() => {\r\n                      setModule(count);\r\n                      props.setSandM(subject.name, count);\r\n                    }}\r\n                  >\r\n                    <AddCircle\r\n                      style={{ height: 10, width: 10, marginRight: 10 }}\r\n                    ></AddCircle>\r\n                    {count}\r\n                  </ListItem>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </List>\r\n      </Popper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddNotes;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { CenterStuff } from \"../../../Person/OthersProfile/profile/Profile\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ISM from \"../insideSubjectModal/ISM\";\r\n\r\nconst Subject = (props) => {\r\n  const [subjectAndModule, setSubjectAndModule] = useState(null);\r\n  return (\r\n    <Fragment>\r\n      {Boolean(subjectAndModule) ? (\r\n        <ISM\r\n          subjectAndModule={subjectAndModule}\r\n          onClose={() => {\r\n            setSubjectAndModule(null);\r\n          }}\r\n        ></ISM>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <CenterStuff style={{ margin: 30 }}>\r\n        <h1\r\n          style={{\r\n            fontFamily: \"poppins\",\r\n            fontWeight: \"bold\",\r\n            color: \"grey\",\r\n            fontSize: 16,\r\n          }}\r\n        >\r\n          {props.subject.name}\r\n        </h1>\r\n      </CenterStuff>\r\n      <CenterStuff style={{ margin: 30 }}>\r\n        <div\r\n          style={{ fontWeight: \"bolder\", fontFamily: \"poppins\", fontSize: 14 }}\r\n        >\r\n          {props.subject.for.course.toUpperCase() +\r\n            ` (${props.subject.for.branch.toUpperCase()})`}\r\n        </div>\r\n      </CenterStuff>\r\n      {getList(props.subject.moduleCount).map((i) => {\r\n        return (\r\n          <CenterStuff key={i} style={{ margin: 10 }}>\r\n            <Button\r\n              className=\"fadeUp\"\r\n              variant=\"outlined\"\r\n              style={{\r\n                padding: 10,\r\n                animationDelay: `${(i - 1) * 0.1}s`,\r\n                width: 300,\r\n                fontFamily: \"poppins\",\r\n                fontSize: 13,\r\n              }}\r\n              onClick={() => {\r\n                setSubjectAndModule({ ...props.subject, module: i });\r\n              }}\r\n            >{`Module ${i}`}</Button>\r\n          </CenterStuff>\r\n        );\r\n      })}\r\n      <CenterStuff style={{ margin: 50 }}></CenterStuff>\r\n    </Fragment>\r\n  );\r\n};\r\nconst getList = (count) => {\r\n  let array = [];\r\n  for (let i = 0; i < count; i++) {\r\n    array.push(i + 1);\r\n  }\r\n  return array;\r\n};\r\nexport default Subject;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport url from \"../../../../strings/url\";\r\nimport { Modal, ModalContent, ModalActions, Header } from \"semantic-ui-react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  Collapse,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  CircularProgress,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport { CenterStuff } from \"../../../Person/OthersProfile/profile/Profile\";\r\nimport { ArrowUpward } from \"@material-ui/icons\";\r\nimport { Spin, Result } from \"antd\";\r\nimport { ISMISM } from \"./ISMISM/ISMISM\";\r\n\r\nconst ISM = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState([]);\r\n  const [firstTime, setFirstTime] = useState(true);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [selectedNote, setSelectedNote] = useState(null);\r\n  const [currentPageNo, setPageNo] = useState(1);\r\n  const handleGetNotes = async (skip) => {\r\n    setLoading(true);\r\n    const headers = new Headers();\r\n    headers.append(\"content-type\", \"application/json\");\r\n    headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n    const body = JSON.stringify(props.subjectAndModule);\r\n    const res = await fetch(`${url}/notes/forModule/${skip}`, {\r\n      method: \"POST\",\r\n      body,\r\n      headers,\r\n    });\r\n    if (res.ok) {\r\n      const { result, count } = await res.json();\r\n      console.log(result.length);\r\n      setResult(result);\r\n      setTotalCount(count || totalCount);\r\n      return setLoading(false);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  if (firstTime) {\r\n    handleGetNotes(0);\r\n    setFirstTime(false);\r\n  }\r\n  console.log(selectedNote);\r\n  return (\r\n    <Fragment>\r\n      {selectedNote ? (\r\n        <ISMISM\r\n          isUpVoted={selectedNote.upVotedBy.find(\r\n            (element) => element.user.toString() === props.id\r\n          )}\r\n          isDownVoted={selectedNote.downVotedBy.find(\r\n            (element) => element.user.toString() === props.id\r\n          )}\r\n          noteDetails={selectedNote}\r\n          onClose={() => {\r\n            setSelectedNote(null);\r\n          }}\r\n        ></ISMISM>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Modal\r\n        open={Boolean(props.subjectAndModule)}\r\n        onClose={() => {\r\n          props.onClose();\r\n        }}\r\n        className=\"comingFromRightP5\"\r\n        dimmer=\"inverted\"\r\n      >\r\n        <ModalContent scrolling>\r\n          <List>\r\n            {loading ? (\r\n              <Fragment>\r\n                <CenterStuff>\r\n                  <Spin\r\n                    style={{ width: 100, height: 100, marginTop: 30 }}\r\n                    size=\"large\"\r\n                  ></Spin>\r\n                </CenterStuff>\r\n                <div\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    textAlign: \"center\",\r\n                    marginTop: 40,\r\n                  }}\r\n                >\r\n                  Fetching Notes For You....\r\n                </div>\r\n              </Fragment>\r\n            ) : result.length === 0 ? (\r\n              <Result\r\n                status=\"info\"\r\n                title=\"No Notes For This Module Currently...\"\r\n              ></Result>\r\n            ) : (\r\n              result.map((e, i) => (\r\n                <Fragment key={e._id}>\r\n                  <ListItem\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                    button\r\n                    onClick={() => {\r\n                      setSelectedNote(e);\r\n                    }}\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar src={e.by.profilephoto}></Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText>\r\n                      <div\r\n                        style={{ fontWeight: \"bold\", fontFamily: \"poppins\" }}\r\n                      >\r\n                        Topic : {\" \" + e.topic}\r\n                      </div>\r\n                    </ListItemText>\r\n\r\n                    <ListItemSecondaryAction>\r\n                      <CenterStuff style={{ justifyContent: \"flex-end\" }}>\r\n                        <ArrowUpward style={{ marginRight: 6 }}></ArrowUpward>\r\n                        <div>{e.upVotes}</div>\r\n                      </CenterStuff>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                  <Divider></Divider>\r\n                </Fragment>\r\n              ))\r\n            )}\r\n          </List>\r\n        </ModalContent>\r\n        {totalCount > 10 ? (\r\n          <ModalContent style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Pagination\r\n              size=\"small\"\r\n              page={currentPageNo}\r\n              onChange={(e, page) => {\r\n                setPageNo(page);\r\n                handleGetNotes((page - 1) * 10);\r\n              }}\r\n              count={parseInt(totalCount / 10) + 1}\r\n            ></Pagination>\r\n          </ModalContent>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <ModalActions>\r\n          <Button\r\n            style={{ marginBottom: 10 }}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              props.onClose();\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </ModalActions>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ id: state.userReducer.id });\r\n\r\nexport default connect(mapStateToProps)(ISM);\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Responsive, Divider } from \"semantic-ui-react\";\r\n\r\nconst ForTC = (props) => {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={3}></Grid>\r\n      <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        {props.children}\r\n      </Grid>\r\n      <Grid item xs={3}></Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Description = (props) => {\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          fontFamily: \"poppins\",\r\n          fontWeight: \"bold\",\r\n          lineHeight: 2,\r\n          fontSize: 20,\r\n          padding: 20,\r\n          marginBottom: 100,\r\n          flexGrow: 3,\r\n        }}\r\n      >\r\n        This Website Basically Works As a Complaint Management System For the\r\n        College. you can post your complaints (either Anonymously or vice versa)\r\n        and If your Complaint Manage To get Enough UpVotes Then That Problem\r\n        Will Be Visible To Your Staff And They'll Take Action if they find that\r\n        your complaint is Worth Considering(Remember DownVotes Will Also get\r\n        Counted \"-ve\") . This Website Also Allow Staff To Post Notices. And Also\r\n        There is a Separated Section for Notes Where Teachers Can Post Notes in\r\n        an Organized Manner On The Website So That Any Student Can Access Them.\r\n      </div>\r\n      <div>\r\n        <Divider\r\n          horizontal\r\n          style={{\r\n            fontSize: 13,\r\n            marginTop: \"50%\",\r\n            fontFamily: \"poppins\",\r\n            marginBottom: 100,\r\n            textTransform: \"none\",\r\n          }}\r\n        >\r\n          By @Paras_Kanwar\r\n        </Divider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const About = (props) => {\r\n  return (\r\n    <div>\r\n      <Responsive {...Responsive.onlyComputer}>\r\n        <ForTC>\r\n          <Description></Description>\r\n        </ForTC>\r\n      </Responsive>\r\n      <Responsive {...Responsive.onlyTablet}>\r\n        <ForTC>\r\n          <Description></Description>\r\n        </ForTC>\r\n      </Responsive>\r\n      <Responsive {...Responsive.onlyMobile}>\r\n        <Description></Description>\r\n      </Responsive>\r\n    </div>\r\n  );\r\n};\r\n","import \"./style.css\";\r\nimport React from \"react\";\r\nimport { Image } from \"semantic-ui-react\";\r\n\r\nexport const T = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        background: \"black\",\r\n      }}\r\n    >\r\n      <Image\r\n        src={require(\"../../images/complainify.png\")}\r\n        size=\"tiny\"\r\n        className=\"class1\"\r\n      ></Image>\r\n      <Image\r\n        src={require(\"../../images/password.png\")}\r\n        size=\"tiny\"\r\n        className=\"class2\"\r\n      ></Image>\r\n    </div>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import url from \"../strings/url\";\r\n\r\nexport const isAuthRequest = (token) => {\r\n  const headers = new Headers();\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  const request = new Request(`${url}/user/isAuth`, { method: \"GET\", headers });\r\n  return fetch(request);\r\n};\r\n\r\nexport const getMyProblems = (token, start, offset, sortBy) => {\r\n  const headers = new Headers();\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  const request = new Request(\r\n    `${url}/user/myProblems/${start}/${offset}?sortBy=${\r\n      sortBy !== \"Latest\" ? sortBy : \"\"\r\n    }`,\r\n    {\r\n      method: \"GET\",\r\n      headers,\r\n    }\r\n  );\r\n  console.log(sortBy);\r\n  return fetch(request);\r\n};\r\n\r\nexport const getNearByProblems = (token, skip, options) => {\r\n  const headers = new Headers();\r\n  headers.append(\"sortby\", options.sortBy);\r\n  headers.append(\"filter\", options.filter);\r\n  headers.append(\"Authorization\", token);\r\n  const request = new Request(`${url}/user/getProblems/${skip}`, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\n\r\nexport const postMyPost = (\r\n  token,\r\n  Description,\r\n  type,\r\n  Media,\r\n  Anonymous = false\r\n) => {\r\n  const headers = new Headers();\r\n  const body = JSON.stringify({\r\n    Description,\r\n    Post_Type: type,\r\n    Media,\r\n    Anonymous,\r\n  });\r\n\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  const request = new Request(`${url}/user/post`, {\r\n    method: \"POST\",\r\n    headers,\r\n    body,\r\n  });\r\n\r\n  return fetch(request);\r\n};\r\n\r\nexport const UpVote = (id, token) => {\r\n  const headers = new Headers();\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  const request = new Request(`${url}/user/post/UpVote/${id}`, {\r\n    method: \"POST\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\n\r\nexport const RemoveUpVote = (id, token) => {\r\n  const headers = new Headers();\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  const request = new Request(`${url}/user/post/UpVote/${id}`, {\r\n    method: \"Delete\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\n\r\nexport const DownVote = (id, token) => {\r\n  const headers = new Headers();\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  const request = new Request(`${url}/user/post/DownVote/${id}`, {\r\n    method: \"POST\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\n\r\nexport const RemoveDownVote = (id, token) => {\r\n  const headers = new Headers();\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  const request = new Request(`${url}/user/post/DownVote/${id}`, {\r\n    method: \"Delete\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\n\r\nexport const postComment = (id, token, description) => {\r\n  const headers = new Headers();\r\n  const body = JSON.stringify({ description });\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  const request = new Request(`${url}/comments/${id}`, {\r\n    method: \"Post\",\r\n    headers,\r\n    body,\r\n  });\r\n  return fetch(request);\r\n};\r\n\r\nexport const getComments = (id, token) => {\r\n  const headers = new Headers();\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  const request = new Request(`${url}/user/comments/${id}`, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\n\r\nexport const getVotesBy = (token, id, type) => {\r\n  const headers = new Headers();\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"Authorization\", token);\r\n  const request = new Request(`${url}/problem/${type}/${id}`, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n\r\n  return fetch(request);\r\n};\r\n\r\nexport const getCommentsCount = (id) => {\r\n  const headers = new Headers();\r\n  headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n  headers.append(\"content-type\", \"application/json\");\r\n  const request = new Request(`${url}/commentsCount/${id}`, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\nexport const findPeople = (name) => {\r\n  const headers = new Headers();\r\n  headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n  headers.append(\"content-type\", \"application/json\");\r\n  const request = new Request(`${url}/user/findUser/${name}`, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\n\r\nexport const logout = () => {\r\n  const headers = new Headers();\r\n  headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n  headers.append(\"content-type\", \"application/json\");\r\n  const request = new Request(`${url}/user/logout`, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\nexport const logoutall = () => {\r\n  const headers = new Headers();\r\n  headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n  headers.append(\"content-type\", \"application/json\");\r\n  const request = new Request(`${url}/user/logoutall`, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\nexport const PeopleProfile = (id) => {\r\n  const headers = new Headers();\r\n  headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n  headers.append(\"content-type\", \"application/json\");\r\n  const request = new Request(`${url}/user/profile/${id}`, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\n\r\nexport const getSomeoneProblems = (id, skip) => {\r\n  const headers = new Headers();\r\n  headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n  headers.append(\"content-type\", \"application/json\");\r\n  const request = new Request(`${url}/user/SProblems/${id}/${skip}`, {\r\n    method: \"GET\",\r\n    headers,\r\n  });\r\n  return fetch(request);\r\n};\r\n\r\nexport const getSensitiveContent = (\r\n  skip,\r\n  options = { sortBy: -1, filter: null }\r\n) => {\r\n  const headers = new Headers();\r\n  headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n  headers.append(\"content-type\", \"application/json\");\r\n  headers.append(\"sortBy\", true);\r\n  const body = JSON.stringify(options);\r\n  return fetch(`${url}/user/post/sensitive/${skip}`, {\r\n    method: \"POST\",\r\n    headers,\r\n    body,\r\n  });\r\n};\r\n","import moment from \"moment\";\r\nimport React, { useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ImageCropper from \"../../../imagecropper/IC\";\r\nimport {\r\n  Paper,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  IconButton,\r\n  ListSubheader,\r\n  Modal,\r\n  Typography,\r\n  Divider,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n\r\nimport { Image } from \"semantic-ui-react\";\r\nimport { Responsive } from \"semantic-ui-react\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { getSomeoneProblems } from \"../../../../ApiRequests/request\";\r\nimport { Visibility, Divider as Divider1 } from \"semantic-ui-react\";\r\nimport RenderProblems from \"../../../NearBy/Problems/renderProblems\";\r\nexport const CenterStuff = (props) => {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", ...props.style }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RenderOtherProblems = (props) => {\r\n  let { complaints, isLoading, deviceType, history } = props;\r\n  complaints = complaints.map((complaint) => {\r\n    return {\r\n      ...complaint,\r\n      Author: { username: props.username, profilephoto: props.profilephoto },\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      <CenterStuff>\r\n        <RenderProblems\r\n          socket={props.socket}\r\n          id={props.id}\r\n          history={history}\r\n          Problems={complaints}\r\n          deviceType={deviceType}\r\n        ></RenderProblems>\r\n      </CenterStuff>\r\n      <CenterStuff style={{ marginTop: 30, marginBottom: 30 }}>\r\n        {isLoading ? (\r\n          <CircularProgress></CircularProgress>\r\n        ) : complaints.length === 0 ? (\r\n          <div\r\n            style={{ fontFamily: \"poppins\", fontWeight: \"bold\", fontSize: 16 }}\r\n          >\r\n            Maybe Have Lot of Anonymous Complaints\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{ fontFamily: \"poppins\", fontWeight: \"bold\", fontSize: 16 }}\r\n          >\r\n            End of His Complaints\r\n          </div>\r\n        )}\r\n      </CenterStuff>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const [complaints, setComplaints] = useState([]);\r\n\r\n  const [CL, setCL] = useState(true);\r\n  const [skip, setSkip] = useState(0);\r\n  const handleGP = () => {\r\n    setCL(true);\r\n    getSomeoneProblems(props.userId, skip)\r\n      .then(async (res) => {\r\n        if (res.ok) {\r\n          const a = await res.json();\r\n\r\n          setComplaints([...complaints, ...a]);\r\n          setCL(false);\r\n          setSkip(skip + 10);\r\n          return;\r\n        }\r\n        setCL(false);\r\n      })\r\n      .catch((e) => {\r\n        setCL(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Visibility\r\n      onUpdate={(e, { calculations }) => {\r\n        if (calculations.bottomVisible && complaints.length > skip - 10) {\r\n          handleGP();\r\n        }\r\n      }}\r\n    >\r\n      <div>\r\n        <Responsive {...Responsive.onlyComputer}>\r\n          <ProfileInfo\r\n            editable={props.editable}\r\n            {...props}\r\n            deviceType={\"com\"}\r\n          ></ProfileInfo>\r\n          <RenderOtherProblems\r\n            socket={props.socket}\r\n            id={props.id}\r\n            history={props.history}\r\n            profilephoto={props.profilephoto}\r\n            username={props.username}\r\n            deviceType={\"comp\"}\r\n            complaints={complaints}\r\n            isLoading={CL}\r\n          ></RenderOtherProblems>\r\n        </Responsive>\r\n        <Responsive {...Responsive.onlyTablet}>\r\n          <ProfileInfo\r\n            editable={props.editable}\r\n            {...props}\r\n            deviceType={\"tab\"}\r\n          ></ProfileInfo>\r\n          <RenderOtherProblems\r\n            profilephoto={props.profilephoto}\r\n            id={props.id}\r\n            history={props.history}\r\n            username={props.username}\r\n            deviceType={\"tab\"}\r\n            complaints={complaints}\r\n            isLoading={CL}\r\n          ></RenderOtherProblems>\r\n        </Responsive>\r\n        <Responsive {...Responsive.onlyMobile}>\r\n          <ProfileInfo\r\n            editable={props.editable}\r\n            {...props}\r\n            deviceType={\"mob\"}\r\n          ></ProfileInfo>\r\n          <RenderOtherProblems\r\n            history={props.history}\r\n            profilephoto={props.profilephoto}\r\n            id={props.id}\r\n            username={props.username}\r\n            deviceType={\"mob\"}\r\n            complaints={complaints}\r\n            isLoading={CL}\r\n          ></RenderOtherProblems>\r\n        </Responsive>\r\n      </div>\r\n    </Visibility>\r\n  );\r\n};\r\nconst ListHeaderStyle = {\r\n  fontFamily: \"poppins\",\r\n  fontWeight: \"bold\",\r\n  color: \"grey\",\r\n  fontSize: 16,\r\n};\r\nconst ImageModal = (props) => {\r\n  const { editable, src, open, setModal, deviceType } = props;\r\n  const [ImageSrc, setSrc] = useState(null);\r\n  const modalSize = (deviceType) => {\r\n    switch (deviceType) {\r\n      case \"com\": {\r\n        return {\r\n          maxWidth: 600,\r\n          maxHeight: 600,\r\n        };\r\n      }\r\n      case \"tab\": {\r\n        return {\r\n          maxWidth: 600,\r\n          maxHeight: 600,\r\n        };\r\n      }\r\n      case \"mob\": {\r\n        return {\r\n          maxWidth: 325,\r\n          maxHeight: 325,\r\n        };\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ImageCropper\r\n        src={ImageSrc}\r\n        pp={props.pp}\r\n        onClose={() => {\r\n          setSrc(null);\r\n        }}\r\n      ></ImageCropper>\r\n      <Modal\r\n        open={open}\r\n        onClose={() => {\r\n          setModal(false);\r\n        }}\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Paper style={{ background: grey[900] }}>\r\n          <Image src={src} size=\"huge\" style={modalSize(deviceType)}></Image>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            accept=\"image/*\"\r\n            id=\"photoUploadInput\"\r\n            onChange={(e) => {\r\n              const reader = new FileReader();\r\n              reader.addEventListener(\"load\", () => {\r\n                setSrc(reader.result);\r\n                setModal(false);\r\n              });\r\n              reader.readAsDataURL(e.target.files[0]);\r\n            }}\r\n          ></input>\r\n          {editable ? (\r\n            <List>\r\n              <label htmlFor=\"photoUploadInput\">\r\n                <ListItem button style={ListHeaderStyle}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/color/48/000000/edit-image.png\"\r\n                    style={{ maxWidth: 30, maxHeight: 30 }}\r\n                  />\r\n                </ListItem>\r\n              </label>\r\n            </List>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Paper>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const ProfileInfo = (props) => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [imgSrc, setSrc] = useState(\"pp\");\r\n  const [ppl, setPPl] = useState(false);\r\n  const [bpl, setBPl] = useState(false);\r\n  const calculateWidth = (type) => {\r\n    switch (type) {\r\n      case \"com\":\r\n        return {\r\n          width: 700,\r\n        };\r\n      case \"tab\":\r\n        return {\r\n          width: 500,\r\n        };\r\n      case \"mob\":\r\n        return {\r\n          width: 350,\r\n        };\r\n      default:\r\n        return {\r\n          width: 500,\r\n        };\r\n    }\r\n  };\r\n  const editIconTranslate = \"translateY(-40px)\";\r\n  const dividerBack = grey[800];\r\n  console.log(props.Online);\r\n  return (\r\n    <div>\r\n      <ImageModal\r\n        open={openModal}\r\n        editable={props.editable}\r\n        setModal={setOpenModal}\r\n        deviceType={props.deviceType}\r\n        pp={imgSrc === \"pp\"}\r\n        src={imgSrc === \"pp\" ? props.profilephoto : props.backgroundPhoto}\r\n      ></ImageModal>\r\n      <Paper\r\n        elevation={10}\r\n        style={{\r\n          ...calculateWidth(props.deviceType),\r\n          borderRadius: 10,\r\n          background: grey[900],\r\n        }}\r\n      >\r\n        <Skeleton\r\n          hidden={bpl}\r\n          variant=\"rect\"\r\n          width={\"100%\"}\r\n          style={{\r\n            color: \"white\",\r\n            background: \"grey\",\r\n            borderTopLeftRadius: 10,\r\n            borderTopRightRadius: 10,\r\n          }}\r\n          height={300}\r\n        ></Skeleton>\r\n\r\n        <Image\r\n          hidden={!bpl}\r\n          src={props.backgroundPhoto}\r\n          style={{\r\n            width: \"100%\",\r\n            maxHeight: calculateWidth(props.deviceType),\r\n            borderTopLeftRadius: 10,\r\n            borderTopRightRadius: 10,\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => {\r\n            setOpenModal(true);\r\n            setSrc(\"bp\");\r\n          }}\r\n          onLoad={() => {\r\n            setBPl(true);\r\n          }}\r\n        ></Image>\r\n        <Skeleton\r\n          hidden={ppl}\r\n          variant=\"circle\"\r\n          width={100}\r\n          height={100}\r\n          style={{\r\n            color: \"white\",\r\n            background: \"lightgrey\",\r\n            transform: \"translateY(-50px) translateX(20px)\",\r\n          }}\r\n        ></Skeleton>\r\n\r\n        <Avatar\r\n          hidden={!ppl}\r\n          src={props.profilephoto}\r\n          style={{\r\n            width: 100,\r\n            height: 100,\r\n            transform: \"translateY(-50px) translateX(20px)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => {\r\n            setOpenModal(true);\r\n            setSrc(\"pp\");\r\n          }}\r\n          onLoad={() => {\r\n            setPPl(true);\r\n          }}\r\n        ></Avatar>\r\n\r\n        <List style={{ marginLeft: 10, marginRight: 10 }}>\r\n          <ListSubheader\r\n            disableSticky\r\n            style={{\r\n              fontSize: 20,\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"poppins\",\r\n              transform: \"translateY(-60px)\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {props.username}\r\n          </ListSubheader>\r\n\r\n          <ListSubheader\r\n            disableSticky\r\n            style={{\r\n              fontSize: 20,\r\n              textAlign: \"center\",\r\n              fontWeight: 500,\r\n              color: \"grey\",\r\n              fontFamily: \"poppins\",\r\n            }}\r\n          >\r\n            Name\r\n            <Typography\r\n              style={{\r\n                color: \"white\",\r\n                marginLeft: 10,\r\n                fontFamily: \"poppins\",\r\n              }}\r\n            >\r\n              {props.firstName + \" \" + props.LastName}\r\n            </Typography>\r\n            {props.editable ? (\r\n              <IconButton\r\n                style={{\r\n                  float: \"right\",\r\n                  color: \"white\",\r\n                  transform: editIconTranslate,\r\n                }}\r\n                onClick={() => {\r\n                  props.openEdit();\r\n                  props.setType(\"name\");\r\n                }}\r\n              >\r\n                <img\r\n                  src=\"https://img.icons8.com/color/48/000000/edit.png\"\r\n                  style={{ maxWidth: 30, maxHeight: 30 }}\r\n                />\r\n              </IconButton>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </ListSubheader>\r\n          <Divider\r\n            style={{\r\n              color: \"grey\",\r\n              background: dividerBack,\r\n              marginTop: 10,\r\n            }}\r\n          ></Divider>\r\n          <ListSubheader\r\n            disableSticky\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontSize: 20,\r\n              fontWeight: 500,\r\n              color: \"grey\",\r\n              fontFamily: \"poppins\",\r\n            }}\r\n          >\r\n            <div>Gender</div>\r\n            <Typography\r\n              style={{\r\n                color: \"white\",\r\n                marginLeft: 10,\r\n                fontFamily: \"poppins\",\r\n              }}\r\n            >\r\n              {props.gender}\r\n            </Typography>\r\n          </ListSubheader>\r\n          <Divider\r\n            style={{\r\n              color: \"lightgrey\",\r\n              background: dividerBack,\r\n              marginTop: 10,\r\n            }}\r\n          ></Divider>\r\n          <ListSubheader\r\n            disableSticky\r\n            style={{\r\n              fontSize: 20,\r\n              textAlign: \"center\",\r\n              fontWeight: 500,\r\n              color: \"grey\",\r\n              fontFamily: \"poppins\",\r\n            }}\r\n          >\r\n            Course\r\n            <Typography\r\n              style={{\r\n                color: \"white\",\r\n                marginLeft: 10,\r\n                fontFamily: \"poppins\",\r\n              }}\r\n            >\r\n              {props.course}\r\n            </Typography>\r\n          </ListSubheader>\r\n          <Divider\r\n            style={{\r\n              color: \"lightgrey\",\r\n              background: dividerBack,\r\n              marginTop: 10,\r\n            }}\r\n          ></Divider>\r\n          <ListSubheader\r\n            disableSticky\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontSize: 20,\r\n              fontWeight: 500,\r\n              color: \"grey\",\r\n              fontFamily: \"poppins\",\r\n            }}\r\n          >\r\n            Stream\r\n            <Typography\r\n              style={{\r\n                color: \"white\",\r\n                marginLeft: 10,\r\n                fontFamily: \"poppins\",\r\n              }}\r\n            >\r\n              {props.Branch}\r\n            </Typography>\r\n          </ListSubheader>\r\n\r\n          <Divider\r\n            style={{\r\n              color: \"lightgrey\",\r\n              background: dividerBack,\r\n              marginTop: 10,\r\n            }}\r\n          ></Divider>\r\n          <ListSubheader\r\n            disableSticky\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontSize: 20,\r\n              fontWeight: 500,\r\n              color: \"grey\",\r\n              fontFamily: \"poppins\",\r\n            }}\r\n          >\r\n            Roll_No\r\n            <Typography\r\n              style={{\r\n                color: \"white\",\r\n                marginLeft: 10,\r\n                fontFamily: \"poppins\",\r\n              }}\r\n            >\r\n              {props.rollno}\r\n            </Typography>\r\n          </ListSubheader>\r\n          <Divider\r\n            style={{\r\n              color: \"lightgrey\",\r\n              background: dividerBack,\r\n              marginTop: 10,\r\n            }}\r\n          ></Divider>\r\n          <ListSubheader\r\n            disableSticky\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontSize: 20,\r\n              fontWeight: 500,\r\n              color: \"grey\",\r\n              fontFamily: \"poppins\",\r\n            }}\r\n          >\r\n            Last Online\r\n            <Typography\r\n              style={{\r\n                color: \"white\",\r\n                marginLeft: 10,\r\n                fontFamily: \"poppins\",\r\n              }}\r\n            >\r\n              {props.Online.status !== \"Online\"\r\n                ? moment(props.Online.lastSeen).fromNow()\r\n                : \"Online\"}\r\n            </Typography>\r\n          </ListSubheader>\r\n          <Divider\r\n            style={{\r\n              color: \"lightgrey\",\r\n              background: dividerBack,\r\n              marginTop: 10,\r\n            }}\r\n          ></Divider>\r\n          <ListSubheader\r\n            disableSticky\r\n            style={{\r\n              fontSize: 20,\r\n              textAlign: \"center\",\r\n              fontWeight: 500,\r\n              color: \"grey\",\r\n              fontFamily: \"poppins\",\r\n            }}\r\n          >\r\n            College\r\n            <Typography\r\n              style={{\r\n                color: \"white\",\r\n                marginLeft: 10,\r\n                marginBottom: 10,\r\n                fontFamily: \"poppins\",\r\n              }}\r\n            >\r\n              {props.college}\r\n            </Typography>\r\n          </ListSubheader>\r\n          <Divider\r\n            style={{\r\n              color: \"lightgrey\",\r\n              background: dividerBack,\r\n              marginTop: 10,\r\n            }}\r\n          ></Divider>\r\n          <ListSubheader\r\n            disableSticky\r\n            style={{\r\n              fontSize: 20,\r\n              textAlign: \"center\",\r\n              fontWeight: 500,\r\n              color: \"grey\",\r\n              fontFamily: \"poppins\",\r\n            }}\r\n          >\r\n            Year Of Joining College\r\n            <Typography\r\n              style={{\r\n                color: \"white\",\r\n                marginLeft: 10,\r\n                marginBottom: 10,\r\n                fontFamily: \"poppins\",\r\n              }}\r\n            >\r\n              {props.yearofjoining}\r\n            </Typography>\r\n          </ListSubheader>\r\n\r\n          {props.children}\r\n        </List>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    id: state.userReducer.id,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","module.exports = __webpack_public_path__ + \"static/media/complainify.bc7f0fe6.png\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport AppRouter from \"./components/AppRouter/appRouter\";\nimport * as serviceWorker from \"./serviceWorker\";\nconst rstore = store();\nReactDOM.render(\n  <Provider store={rstore}>\n    <AppRouter />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/password.51c719df.png\";"],"sourceRoot":""}