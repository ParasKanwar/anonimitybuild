{"version":3,"sources":["../node_modules/@material-ui/icons/esm/ReplayOutlined.js","../node_modules/@material-ui/icons/esm/AddOutlined.js","components/Chat/chat.jsx","components/Search/Search.jsx","components/Search/renderPeople.jsx","components/Chat/ChatWindow.jsx","components/Chat/ChatSessions.jsx","../node_modules/@material-ui/icons/esm/CloseOutlined.js","components/Chat/AddCoversation.jsx","../node_modules/@material-ui/core/esm/colors/blueGrey.js","../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","../node_modules/@material-ui/icons/esm/Search.js","../node_modules/@material-ui/icons/esm/ArrowBack.js"],"names":["createSvgIcon","React","createElement","d","Conversations","onAddConversation","style","fontWeight","fontSize","padding","fontFamily","display","justifyContent","flexGrow","textAlign","IconButton","onClick","AddOutlined","connect","state","token","userReducer","MyId","id","props","useState","loading","setLoading","error","setError","sessions","setSessions","session","setSession","Socket","url","socket","alreadyConnectedUsers","setACU","OpenAddConversationModal","setOACM","newConversation","setNewConversation","handleMakeZero","sessionId","prev","index","findIndex","ans","UnReadMessageCount","map","object","forParticipant","count","handleFetchSessions","headers","Headers","append","fetch","method","then","res","a","ok","json","sort","b","moment","lastMessage","diff","i","personNextSide","length","console","log","message","catch","e","useEffect","emit","on","data","Online","status","lastSeen","Date","disconnect","Fragment","Snackbar","open","autoHideDuration","onClose","ContentProps","anchorOrigin","horizontal","vertical","action","ReplayOutlined","color","onSessionCreated","Responsive","onlyComputer","Grid","container","item","sm","alignItems","height","CircularProgress","marginTop","ChatSessions","ChatWindow","onBack","history","find","onlyMobile","onlyTablet","Search","anchor","setAnchor","Boolean","anchorEl","transformOrigin","val","forConversation","personSelected","person","currentTarget","theme","createMuiTheme","palette","primary","blueGrey","secondary","orange","currentTab","navigationReducer","toFind","setFind","searchResult","setSearchResult","Loading","backgroundColor","grey","width","elevation","value","onChange","findPeople","target","result","className","placeholder","marginBottom","key","LastName","button","disabled","_id","push","window","location","reload","dispatch","type","marginRight","src","profilephoto","firstName","onSendHandler","chatText","setState","clicked","messages","seen","myId","PersonNextSide","chatsLoading","comingAnimation","this","pre","concat","setTimeout","participant","el","scrollIntoView","TopDetails","onBackAnimation","ChatInput","onSend","title","ChatRenderer","setRef","ref","PureComponent","onSubmit","preventDefault","paddingTop","m","ChatMessage","hasSeen","from","date","PersonNextSideProfilePhoto","by","borderRadius","flexDirection","border","format","blue","marginLeft","position","top","background","borderBottom","zIndex","cursor","bottom","transition","transform","RenderChatSession","onSelect","SingleSession","TimeDelay","active","online","visible","setVisible","left","green","ChatSession","maxHeight","overflow","overflowX","AddConversation","selectedPerson","handleSendMessage","bind","body","JSON","stringify","messageTo","Modal","dimmer","Header","Content","SelectedPerson","cancelSelected","margin","boxShadow","Actions","Button","variant","Component","Avatar","CloseOutlined","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","LinearProgress","classes","_props$color","valueBuffer","_props$variant","other","_objectWithoutProperties","useTheme","rootProps","inlineStyles","bar1","bar2","undefined","Math","round","direction","process","_transform","_extends","clsx","root","capitalize","determinate","indeterminate","buffer","query","role","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer","withStyles","getColor","lighten","darken","backgroundPrimary","main","backgroundSecondary","colorPrimary","colorSecondary","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","barColorPrimary","barColorSecondary","right","opacity","name"],"mappings":"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","file":"static/js/12.fbc48207.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z\"\n}), 'ReplayOutlined');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddOutlined');","import url from \"../../strings/url\";\r\nimport React from \"react\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  IconButton,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport ChatSessions from \"./ChatSessions\";\r\nimport { Responsive } from \"semantic-ui-react\";\r\nimport { Backspace, AddOutlined, ReplayOutlined } from \"@material-ui/icons\";\r\nimport Socket from \"socket.io-client\";\r\nimport AddConversation from \"./AddCoversation\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nconst Chat = (props) => {\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [error, setError] = React.useState(false);\r\n  const [sessions, setSessions] = React.useState([]);\r\n  const [session, setSession] = React.useState();\r\n  const [socket, setSocket] = React.useState(Socket.connect(`${url}/chat`));\r\n  const [token, setToken] = React.useState(props.token);\r\n  const [alreadyConnectedUsers, setACU] = React.useState({});\r\n  const [OpenAddConversationModal, setOACM] = React.useState(false);\r\n  const [newConversation, setNewConversation] = React.useState(false);\r\n  const handleOnSomeoneOnline = (id) => {\r\n    setSessions((prev) => {\r\n      return prev.map((session) => {\r\n        if (session.personNextSide.id === id) {\r\n          return {\r\n            ...session,\r\n            personNextSide: {\r\n              ...session.personNextSide,\r\n              Online: { status: \"Online\", lastSeen: null },\r\n            },\r\n          };\r\n        }\r\n        return session;\r\n      });\r\n    });\r\n  };\r\n  const handleOnSomeoneOffline = (id) => {\r\n    setSessions((prev) => {\r\n      return prev.map((session) => {\r\n        if (session.personNextSide.id === id) {\r\n          return {\r\n            ...session,\r\n            personNextSide: {\r\n              ...session.personNextSide,\r\n              Online: { status: \"Offline\", lastSeen: new Date() },\r\n            },\r\n          };\r\n        }\r\n        return session;\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleOnUnReadMessage = (sessionId) => {\r\n    setSessions((prev) => {\r\n      try {\r\n        const index = prev.findIndex(({ session }) => {\r\n          return session === sessionId;\r\n        });\r\n\r\n        if (index === -1) {\r\n          setNewConversation(true);\r\n          return prev;\r\n        }\r\n\r\n        const ans = [...prev];\r\n        ans[index] = {\r\n          ...prev[index],\r\n          UnReadMessageCount: prev[index].UnReadMessageCount.map((object) => {\r\n            if (object.forParticipant === props.MyId) {\r\n              return {\r\n                count: object.count + 1,\r\n                forParticipant: object.forParticipant,\r\n              };\r\n            }\r\n            return object;\r\n          }),\r\n        };\r\n        return ans;\r\n      } catch (e) {\r\n        console.log(e.message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleMakeZero = (sessionId) => {\r\n    setSessions((prev) => {\r\n      const index = prev.findIndex(({ session }) => {\r\n        return session === sessionId;\r\n      });\r\n      const ans = [...prev];\r\n      ans[index] = {\r\n        ...prev[index],\r\n        UnReadMessageCount: prev[index].UnReadMessageCount.map((object) => {\r\n          if (object.forParticipant === props.MyId) {\r\n            return {\r\n              count: 0,\r\n              forParticipant: object.forParticipant,\r\n            };\r\n          }\r\n          return object;\r\n        }),\r\n      };\r\n      return ans;\r\n    });\r\n  };\r\n\r\n  const handleFetchSessions = () => {\r\n    const headers = new Headers();\r\n    setLoading(true);\r\n    setSessions([]);\r\n    headers.append(\"Authorization\", token);\r\n    headers.append(\"content-type\", \"application/json\");\r\n    fetch(`${url}/getMySessions`, { method: \"GET\", headers })\r\n      .then(async (res) => {\r\n        try {\r\n          if (res.ok) {\r\n            const sessions = await res.json();\r\n\r\n            sessions.sort((a, b) => {\r\n              return -1 * moment(a.lastMessage).diff(b.lastMessage, \"seconds\");\r\n            });\r\n\r\n            setLoading(false);\r\n            setSessions(sessions);\r\n\r\n            for (let i = 0; i < sessions.length; i++) {\r\n              const { id } = sessions[i].personNextSide;\r\n              setACU((prev) => ({ ...prev, [id]: true }));\r\n            }\r\n            return;\r\n          }\r\n          setLoading(false);\r\n          setError(true);\r\n        } catch (e) {\r\n          console.log(e.message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    handleFetchSessions();\r\n    socket.emit(\"Save_Id\", {\r\n      token: token,\r\n      session: null,\r\n    });\r\n    socket.on(\"unreadMessage\", (data) => {\r\n      handleOnUnReadMessage(data.session);\r\n    });\r\n\r\n    socket.on(\"someOneGetsOnline\", (data) => {\r\n      handleOnSomeoneOnline(data.id);\r\n    });\r\n    socket.on(\"someOneGetsOffline\", (data) => {\r\n      handleOnSomeoneOffline(data.id);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Snackbar\r\n        open={newConversation}\r\n        autoHideDuration={6000}\r\n        onClose={() => {\r\n          setNewConversation(false);\r\n        }}\r\n        ContentProps={{ style: { fontFamily: \"poppins\" } }}\r\n        anchorOrigin={{ horizontal: \"center\", vertical: \"top\" }}\r\n        message={\"There Might Be New Conversations\"}\r\n        action={\r\n          <IconButton\r\n            onClick={() => {\r\n              setNewConversation(false);\r\n              handleFetchSessions();\r\n            }}\r\n          >\r\n            <ReplayOutlined style={{ color: \"white\" }}></ReplayOutlined>\r\n          </IconButton>\r\n        }\r\n      ></Snackbar>\r\n      {OpenAddConversationModal ? (\r\n        <AddConversation\r\n          alreadyConnectedUsers={alreadyConnectedUsers}\r\n          onClose={() => setOACM(false)}\r\n          onSessionCreated={() => {\r\n            handleFetchSessions();\r\n          }}\r\n        ></AddConversation>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Responsive {...Responsive.onlyComputer}>\r\n        <Grid container>\r\n          <Grid item sm={5}>\r\n            <Conversations\r\n              onAddConversation={() => {\r\n                setOACM(true);\r\n              }}\r\n            ></Conversations>\r\n            {loading ? (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"50vh\",\r\n                }}\r\n              >\r\n                <CircularProgress style={{ color: \"black\" }}></CircularProgress>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {error ? (\r\n              <div\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  marginTop: \"10%\",\r\n                  fontFamily: \"poppins\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Error Fetching Conversations!!\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <ChatSessions\r\n              setSession={(id) => {\r\n                setSession(id);\r\n                handleMakeZero(id);\r\n              }}\r\n              sessions={sessions}\r\n              session={session}\r\n              MyId={props.MyId}\r\n            ></ChatSessions>\r\n          </Grid>\r\n          <Grid item sm={6}>\r\n            {session ? (\r\n              <ChatWindow\r\n                socket={socket}\r\n                session={session}\r\n                onBack={() => {\r\n                  setSession(null);\r\n                }}\r\n                history={props.history}\r\n                personNextSide={\r\n                  sessions.find((res) => {\r\n                    return res.session === session;\r\n                  }).personNextSide\r\n                }\r\n              ></ChatWindow>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n          <Grid item sm={1}></Grid>\r\n        </Grid>\r\n      </Responsive>\r\n      <Responsive {...Responsive.onlyMobile}>\r\n        {!session ? (\r\n          <Conversations\r\n            onAddConversation={() => {\r\n              setOACM(true);\r\n            }}\r\n          ></Conversations>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {loading ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              height: \"50vh\",\r\n            }}\r\n          >\r\n            <CircularProgress style={{ color: \"black\" }}></CircularProgress>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {session ? (\r\n          <ChatWindow\r\n            socket={socket}\r\n            session={session}\r\n            onBack={() => {\r\n              setSession(null);\r\n            }}\r\n            history={props.history}\r\n            personNextSide={\r\n              sessions.find((res) => {\r\n                return res.session === session;\r\n              }).personNextSide\r\n            }\r\n          ></ChatWindow>\r\n        ) : (\r\n          <ChatSessions\r\n            setSession={(id) => {\r\n              setSession(id);\r\n              handleMakeZero(id);\r\n            }}\r\n            sessions={sessions}\r\n            session={session}\r\n            MyId={props.MyId}\r\n          ></ChatSessions>\r\n        )}\r\n      </Responsive>\r\n      <Responsive {...Responsive.onlyTablet}>\r\n        <Grid container>\r\n          <Grid item sm={5}>\r\n            <Conversations\r\n              onAddConversation={() => {\r\n                setOACM(true);\r\n              }}\r\n            ></Conversations>\r\n            {loading ? (\r\n              <div\r\n                style={{\r\n                  height: \"50vh\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <CircularProgress style={{ color: \"black\" }}></CircularProgress>\r\n              </div>\r\n            ) : (\r\n              <ChatSessions\r\n                setSession={(id) => {\r\n                  setSession(id);\r\n                  handleMakeZero(id);\r\n                }}\r\n                sessions={sessions}\r\n                session={session}\r\n                MyId={props.MyId}\r\n              ></ChatSessions>\r\n            )}\r\n          </Grid>\r\n          <Grid item sm={7}>\r\n            {session ? (\r\n              <ChatWindow\r\n                socket={socket}\r\n                session={session}\r\n                onBack={() => {\r\n                  setSession(null);\r\n                }}\r\n                history={props.history}\r\n                personNextSide={\r\n                  sessions.find((res) => {\r\n                    return res.session === session;\r\n                  }).personNextSide\r\n                }\r\n              ></ChatWindow>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Responsive>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst Conversations = ({ onAddConversation }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        fontWeight: \"bold\",\r\n        fontSize: 30,\r\n        padding: 20,\r\n        fontFamily: \"poppins\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div style={{ flexGrow: 1, textAlign: \"center\" }}>Conversations</div>\r\n      <IconButton\r\n        onClick={() => {\r\n          onAddConversation();\r\n        }}\r\n      >\r\n        <AddOutlined></AddOutlined>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.userReducer.token,\r\n    MyId: state.userReducer.id,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Chat);\r\n","import React, { useState } from \"react\";\r\nimport RenderPeople from \"./renderPeople\";\r\nimport { Popover, IconButton, Backdrop } from \"@material-ui/core\";\r\nimport { Search as Search1 } from \"@material-ui/icons\";\r\n\r\nconst Search = (props) => {\r\n  const [anchor, setAnchor] = useState(null);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Popover\r\n        open={Boolean(anchor)}\r\n        onClose={() => {\r\n          setAnchor(null);\r\n        }}\r\n        anchorEl={anchor}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      >\r\n        <RenderPeople\r\n          history={props.history}\r\n          alreadyConnectedUsers={props.alreadyConnectedUsers}\r\n          setAnchor={(val) => {\r\n            setAnchor(val);\r\n          }}\r\n          forConversation={props.forConversation}\r\n          personSelected={(person) => {\r\n            props.personSelected(person);\r\n          }}\r\n        ></RenderPeople>\r\n      </Popover>\r\n      <IconButton\r\n        onClick={(e) => {\r\n          setAnchor(e.currentTarget);\r\n        }}\r\n      >\r\n        <Search1></Search1>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Paper,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  ListSubheader,\r\n  Avatar,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport \"./Search.css\";\r\nimport { blueGrey, orange, grey } from \"@material-ui/core/colors\";\r\n\r\nimport { findPeople } from \"../../ApiRequests/request\";\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blueGrey,\r\n    secondary: orange,\r\n  },\r\n});\r\nconst Search = (props) => {\r\n  const [toFind, setFind] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [Loading, setLoading] = useState(false);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setLoading(true);\r\n    findPeople(e.target.value)\r\n      .then(async (res) => {\r\n        const result = await res.json();\r\n\r\n        setSearchResult(result);\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        setSearchResult([]);\r\n        setLoading(false);\r\n      });\r\n\r\n    setFind(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Paper\r\n        color=\"primary\"\r\n        style={{\r\n          // backgroundColor: blueGrey[900],\r\n          backgroundColor: grey[900],\r\n          width: 300,\r\n          fontFamily: \"poppins\",\r\n          color: \"lightgrey\",\r\n        }}\r\n        elevation={10}\r\n      >\r\n        <List>\r\n          <div style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n            <input\r\n              value={toFind}\r\n              onChange={handleSearchChange}\r\n              style={{ marginTop: 10 }}\r\n              className=\"mySearch\"\r\n              placeholder=\"Search People\"\r\n            ></input>\r\n          </div>\r\n          <Divider style={{ marginTop: 10, marginBottom: 10 }}></Divider>\r\n          {Loading ? (\r\n            <ListItem>\r\n              <LinearProgress\r\n                style={{ width: \"100%\" }}\r\n                color=\"primary\"\r\n              ></LinearProgress>\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {searchResult.length > 0 && !Loading ? (\r\n            searchResult.map((result) => {\r\n              return (\r\n                <ListItem\r\n                  key={result.LastName}\r\n                  button\r\n                  style={{ fontWeight: \"lighter\" }}\r\n                  disabled={\r\n                    props.alreadyConnectedUsers\r\n                      ? props.alreadyConnectedUsers[result._id]\r\n                      : false\r\n                  }\r\n                  onClick={() => {\r\n                    if (!props.forConversation) {\r\n                      props.history.push(`/anonymity/person/${result._id}`);\r\n\r\n                      if (props.currentTab === \"Person\") {\r\n                        window.location.reload(false);\r\n                      }\r\n                      props.dispatch({ type: \"Person\" });\r\n                    }\r\n\r\n                    props.setAnchor(null);\r\n                    if (props.forConversation) props.personSelected(result);\r\n                  }}\r\n                >\r\n                  <Avatar\r\n                    style={{ marginRight: 10 }}\r\n                    src={result.profilephoto}\r\n                  ></Avatar>\r\n                  {result.firstName + \" \" + result.LastName}\r\n                </ListItem>\r\n              );\r\n            })\r\n          ) : !Loading && toFind.length > 0 ? (\r\n            <ListSubheader\r\n              style={{ color: \"grey\", fontSize: 16, fontFamily: \"poppins\" }}\r\n            >\r\n              No Results\r\n            </ListSubheader>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </List>\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\nconst mstp = (state) => {\r\n  return {\r\n    currentTab: state.navigationReducer.currentTab,\r\n  };\r\n};\r\nexport default connect(mstp)(Search);\r\n","import React from \"react\";\r\nimport \"./chat.css\";\r\nimport url from \"../../strings/url\";\r\nimport moment from \"moment\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { Result } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nclass ChatWindow extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clicked: true,\r\n      id: 1,\r\n      messages: [],\r\n      chatText: \"\",\r\n      seen: false,\r\n      myId: null,\r\n      PersonNextSide: null,\r\n      chatsLoading: true,\r\n      error: false,\r\n      session: props.session,\r\n      comingAnimation: \"comingFromRightP5\",\r\n    };\r\n    this.session = null;\r\n    this.token = props.token;\r\n    this.socket = props.socket.emit(\"Save_Id\", {\r\n      token: this.token,\r\n      session: props.session,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    ///setting on message handler\r\n    this.socket.on(\"Seen\", (data) => {\r\n      console.log(data);\r\n      this.setState(({ messages }) => {\r\n        return {\r\n          messages: messages.map((message) => ({ ...message, seen: true })),\r\n        };\r\n      });\r\n    });\r\n    this.socket.on(\"message\", (data) => {\r\n      this.setState((pre) => {\r\n        return { messages: pre.messages.concat([data]) };\r\n      });\r\n    });\r\n\r\n    /// getting already chats for this session\r\n    const headers = new Headers();\r\n    headers.append(\"Authorization\", this.props.token);\r\n    headers.append(\"content-type\", \"application/json\");\r\n    this.session = this.props.session;\r\n    fetch(`${url}/getSessionChats/${this.props.session}`, {\r\n      method: \"GET\",\r\n      headers,\r\n    })\r\n      .then(async (res) => {\r\n        if (res.ok) {\r\n          const ans = await res.json();\r\n\r\n          setTimeout(() => {\r\n            this.setState((prev) => ({\r\n              messages: [...ans.messages, ...prev.messages],\r\n              PersonNextSide: ans.PersonNextSide.participant,\r\n              myId: ans.myId,\r\n              chatsLoading: false,\r\n              error: false,\r\n            }));\r\n          }, 200);\r\n          return;\r\n        }\r\n        this.setState({ chatsLoading: false, error: true });\r\n      })\r\n      .catch((e) => {\r\n        this.setState({ chatsLoading: false, error: true });\r\n      });\r\n  }\r\n  componentWillUnmount() {\r\n    this.socket.emit(\"updateSession\", {\r\n      token: this.token,\r\n      session: null,\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    if (!this.state.chatsLoading && !this.state.error) this.el.scrollIntoView();\r\n    if (this.session !== this.props.session) {\r\n      this.setState({ messages: [] });\r\n      this.socket.emit(\"updateSession\", {\r\n        token: this.token,\r\n        session: this.props.session,\r\n      });\r\n      this.setState({ chatsLoading: true });\r\n      const headers = new Headers();\r\n      headers.append(\"Authorization\", this.props.token);\r\n      headers.append(\"content-type\", \"application/json\");\r\n      this.session = this.props.session;\r\n      fetch(`${url}/getSessionChats/${this.props.session}`, {\r\n        method: \"GET\",\r\n        headers,\r\n      })\r\n        .then(async (res) => {\r\n          if (res.ok) {\r\n            const ans = await res.json();\r\n\r\n            return this.setState((prev) => ({\r\n              messages: [...ans.messages, ...prev.messages],\r\n              PersonNextSide: ans.PersonNextSide.participant,\r\n              myId: ans.myId,\r\n              chatsLoading: false,\r\n              error: false,\r\n            }));\r\n          }\r\n          this.setState({ chatsLoading: false, error: true, messages: [] });\r\n        })\r\n        .catch((e) => {\r\n          this.setState({ chatsLoading: false, error: true, messages: [] });\r\n        });\r\n      this.session = this.props.session;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { chatText, messages, seen } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={`parentChatContainer ${this.state.comingAnimation}`}>\r\n          <TopDetails\r\n            history={this.props.history}\r\n            dispatch={this.props.dispatch}\r\n            onBack={() => {\r\n              this.props.onBack();\r\n            }}\r\n            onBackAnimation={() => {\r\n              this.setState({ comingAnimation: \"goBack\" });\r\n            }}\r\n            history={this.props.history}\r\n            {...this.props.personNextSide}\r\n          ></TopDetails>\r\n          <div className=\"chatFormContainer\">\r\n            <ChatInput\r\n              chatText={chatText}\r\n              onChange={(val) => {\r\n                this.setState({ chatText: val });\r\n              }}\r\n              onSend={this.onSendHandler}\r\n            ></ChatInput>\r\n          </div>\r\n          {this.state.error && !this.state.chatsLoading ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"70vh\",\r\n              }}\r\n            >\r\n              <Result status=\"success\" title=\"No Chats\"></Result>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {this.state.chatsLoading ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"70vh\",\r\n              }}\r\n            >\r\n              <CircularProgress style={{ color: \"black\" }}></CircularProgress>\r\n            </div>\r\n          ) : (\r\n            <ChatRenderer\r\n              setRef={(ref) => {\r\n                this.el = ref;\r\n              }}\r\n              PersonNextSide={this.state.PersonNextSide}\r\n              messages={messages}\r\n              myId={this.state.myId}\r\n              socket={this.socket}\r\n            ></ChatRenderer>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  onSendHandler = () => {\r\n    this.socket.emit(\"Chat_Message\", {\r\n      message: this.state.chatText,\r\n      token: this.token,\r\n      sessionId: this.session,\r\n    });\r\n    this.setState((prev) => {\r\n      return { chatText: \"\" };\r\n    });\r\n  };\r\n}\r\n\r\nconst ChatInput = ({ chatText, onChange, onSend }) => {\r\n  return (\r\n    <form\r\n      className=\"ChattingForm\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <input\r\n        value={chatText}\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          onChange(e.target.value);\r\n        }}\r\n        className=\"chatInputField\"\r\n        placeholder=\"Type Something...\"\r\n      ></input>\r\n      <button\r\n        className=\"sendButton\"\r\n        disabled={chatText.length === 0}\r\n        onClick={() => {\r\n          onSend();\r\n        }}\r\n      >\r\n        <i className=\"far fa-paper-plane\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ChatRenderer = ({ messages, setRef, myId, PersonNextSide }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div style={{ width: \"100%\" }}>\r\n        <div\r\n          id=\"chatCont\"\r\n          className=\"chatContainer\"\r\n          style={{ paddingTop: \"100px\" }}\r\n        >\r\n          {messages.map((m, index) => {\r\n            return (\r\n              <ChatMessage\r\n                key={index}\r\n                message={m.message}\r\n                hasSeen={myId === m.from ? true : false}\r\n                on={m.date}\r\n                seen={m.seen}\r\n                PersonNextSideProfilePhoto={PersonNextSide.profilephoto}\r\n                by={\r\n                  myId === m.from\r\n                    ? \"me\"\r\n                    : PersonNextSide.firstName + \" \" + PersonNextSide.LastName\r\n                }\r\n              ></ChatMessage>\r\n            );\r\n          })}\r\n          <div\r\n            ref={(ref) => {\r\n              setRef(ref);\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChatMessage = ({\r\n  message,\r\n  on,\r\n  seen,\r\n  hasSeen,\r\n  by,\r\n  PersonNextSideProfilePhoto,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        by !== \"me\"\r\n          ? \"chatLeftItem comingFromLeftP5\"\r\n          : \"chatRightItem comingFromUpP5\"\r\n      }\r\n    >\r\n      <div\r\n        style={{\r\n          // boxShadow: \"0px 0px 10px rgba(0,0,0,0.2)\",\r\n          display: \"flex\",\r\n          marginBottom: 10,\r\n          marginTop: 10,\r\n          backgroundColor: by !== \"me\" ? \"rgba(0,0,0,0.01)\" : \"\",\r\n          borderRadius: 10,\r\n          padding: 10,\r\n          flexDirection: \"column\",\r\n          alignItems: \"flex-start\",\r\n          border: \"0.5px solid rgba(0,0,0,0.1)\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontSize: 12,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {by !== \"me\" ? (\r\n            <Avatar\r\n              style={{ marginRight: 6, width: 20, height: 20 }}\r\n              src={PersonNextSideProfilePhoto}\r\n            ></Avatar>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {by === \"me\" ? \"You\" : by}\r\n        </div>\r\n        <div>{message}</div>\r\n        <div\r\n          style={{ display: \"flex\", justifyContent: \"center\", marginTop: 7 }}\r\n        >\r\n          <div style={{ fontWeight: \"lighter\", fontSize: 12 }}>\r\n            {moment(on).format(\"MMMM Do YYYY h mm ss a\")}\r\n          </div>\r\n          {hasSeen ? (\r\n            <i\r\n              className={`far fa-eye ${seen ? \"seen\" : \"\"}`}\r\n              style={{ color: seen ? blue[600] : \"grey\", marginLeft: 10 }}\r\n            ></i>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TopDetails = ({\r\n  firstName,\r\n  LastName,\r\n  history,\r\n  profilephoto,\r\n  onBack,\r\n  id,\r\n  Online,\r\n  onBackAnimation,\r\n  dispatch,\r\n}) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        height: \"60px\",\r\n        width: \"100%\",\r\n        background: \"white\",\r\n        borderBottom: \"0.5px solid rgba(0,0,0,0.2)\",\r\n\r\n        zIndex: 1000,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          onClick={() => {\r\n            setTimeout(() => {\r\n              onBack();\r\n            }, 500);\r\n            onBackAnimation();\r\n          }}\r\n        >\r\n          <ArrowBack></ArrowBack>\r\n        </IconButton>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          cursor: \"pointer\",\r\n          fontFamily: \"poppins\",\r\n          fontWeight: \"bold\",\r\n          width: \"100%\",\r\n          marginLeft: \"2%\",\r\n        }}\r\n        className=\"topDetails\"\r\n        onClick={() => {\r\n          history.push(`/anonymity/person/${id}`);\r\n          dispatch({ type: \"Person\" });\r\n        }}\r\n      >\r\n        <div style={{ position: \"relative\" }}>\r\n          <Avatar style={{ width: 40, height: 40 }} src={profilephoto}></Avatar>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              height: \"1.5vh\",\r\n              width: \"1.5vh\",\r\n              borderRadius: \"50%\",\r\n              background: Online.status === \"Online\" ? \"green\" : \"transparent\",\r\n              transition: \"1s ease\",\r\n              transform:\r\n                Online.status !== \"Online\"\r\n                  ? \"translateX(30px) translateY(-34px)\"\r\n                  : \"translateX(0px) translateY(0px)\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <div style={{ fontSize: 15, marginLeft: \"2%\" }}>\r\n          {firstName + \" \" + LastName}\r\n          <div style={{ fontSize: 11 }}>\r\n            {Online.status === \"Online\"\r\n              ? \"Online\"\r\n              : Online.lastSeen\r\n              ? \"Last Seen..\" +\r\n                moment(Online.lastSeen).format(\"MMMM Do YYYY, h:mm a\")\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect((state) => ({ token: state.userReducer.token }))(\r\n  ChatWindow\r\n);\r\n","import React from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { green, blue } from \"@material-ui/core/colors\";\r\nimport moment from \"moment\";\r\nimport \"./chat.css\";\r\nconst ChatSession = ({ setSession, sessions, session, MyId }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{ maxHeight: \"70vh\", overflow: \"auto\", overflowX: \"hidden\" }}\r\n        className=\"thinscrollbar comingFromLeftP5\"\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            marginRight: 10,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            overflow: \"auto\",\r\n          }}\r\n        >\r\n          <RenderChatSession\r\n            MyId={MyId}\r\n            sessions={sessions}\r\n            sessionId={session}\r\n            onSelect={(sessionId) => {\r\n              setSession(sessionId);\r\n            }}\r\n          ></RenderChatSession>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst RenderChatSession = ({ sessions, onSelect, sessionId, MyId }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {sessions.map((session, index) => {\r\n        return (\r\n          <React.Fragment>\r\n            <SingleSession\r\n              onClick={(id) => {\r\n                onSelect(id);\r\n              }}\r\n              TimeDelay={index * 50}\r\n              key={index}\r\n              firstName={session.personNextSide.firstName}\r\n              active={session.session === sessionId}\r\n              id={session.session}\r\n              profilephoto={session ? session.personNextSide.profilephoto : \"\"}\r\n              LastName={session.personNextSide.LastName}\r\n              online={session.personNextSide.Online.status === \"Online\"}\r\n              lastSeen={session.personNextSide.Online.lastSeen}\r\n              UnReadMessageCount={session.UnReadMessageCount}\r\n              MyId={MyId}\r\n            ></SingleSession>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst SingleSession = ({\r\n  id,\r\n  profilephoto,\r\n  firstName,\r\n  LastName,\r\n  onClick,\r\n  active,\r\n  online,\r\n  UnReadMessageCount,\r\n  lastSeen,\r\n  MyId,\r\n  TimeDelay,\r\n}) => {\r\n  const [visible, setVisible] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (!TimeDelay) {\r\n      return setVisible(true);\r\n    }\r\n    setTimeout(() => {\r\n      setVisible(true);\r\n    }, TimeDelay);\r\n  }, [TimeDelay]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {visible ? (\r\n        <React.Fragment>\r\n          <div\r\n            className=\"animationOnEven1\"\r\n            style={{\r\n              width: \"100%\",\r\n              color: \"black\",\r\n              cursor: \"pointer\",\r\n              padding: 10,\r\n              height: \"100px\",\r\n              background: active ? \"rgba(0,0,0,0.05)\" : \"rgba(0,0,0,0.0)\",\r\n              display: \"flex\",\r\n              transition: \"0.5s ease\",\r\n              alignItems: \"center\",\r\n            }}\r\n            onClick={() => onClick(id)}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"relative\",\r\n                marginLeft: \"10%\",\r\n                marginRight: 10,\r\n              }}\r\n            >\r\n              <Avatar src={profilephoto}></Avatar>\r\n\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  bottom: 0,\r\n                  left: 0,\r\n                  height: 10,\r\n                  width: 10,\r\n                  borderRadius: \"50%\",\r\n                  backgroundColor: online ? green[700] : \"transparent\",\r\n                  transform: online\r\n                    ? \"translateY(-40px) translateX(25px)\"\r\n                    : \"translateY(0px) translateX(0px)\",\r\n                  transition: \"0.5s ease\",\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontFamily: \"poppins\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              <div>{firstName + \" \" + LastName}</div>\r\n              {lastSeen ? <div style={{ fontSize: 10 }}>Last Seen</div> : \"\"}\r\n              <div style={{ fontWeight: \"lighter\", fontSize: 12 }}>\r\n                {lastSeen\r\n                  ? moment(lastSeen).format(\"MMMM Do YYYY, h:mm:ss a\")\r\n                  : online\r\n                  ? \"Online\"\r\n                  : \"\"}\r\n              </div>\r\n            </div>\r\n            {UnReadMessageCount.length &&\r\n            UnReadMessageCount.find(({ forParticipant }) => {\r\n              return forParticipant === MyId;\r\n            }).count !== 0 ? (\r\n              <div\r\n                className={\r\n                  UnReadMessageCount.find(({ forParticipant }) => {\r\n                    return forParticipant === MyId;\r\n                  }).count %\r\n                    2 ===\r\n                  0\r\n                    ? \"animationOnEven\"\r\n                    : \"animationOnOdd\"\r\n                }\r\n                style={{\r\n                  height: 30,\r\n                  width: 30,\r\n                  background: blue[700],\r\n                  borderRadius: \"50%\",\r\n                  color: \"white\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  marginLeft: \"auto\",\r\n                  zIndex: 100,\r\n                }}\r\n              >\r\n                <div style={{ fontSize: 14 }}>\r\n                  {\r\n                    UnReadMessageCount.find(({ forParticipant }) => {\r\n                      return forParticipant === MyId;\r\n                    }).count\r\n                  }\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div\r\n            style={{\r\n              height: 0.4,\r\n              width: \"100%\",\r\n              background: \"rgba(0,0,0,0.1)\",\r\n            }}\r\n          ></div>\r\n        </React.Fragment>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChatSession;\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseOutlined');","import React, { Fragment } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Search from \"../Search/Search\";\r\nimport url from \"../../strings/url\";\r\nimport { CloseOutlined } from \"@material-ui/icons\";\r\nimport \"./chat.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Result } from \"antd\";\r\nclass AddConversation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedPerson: null,\r\n      message: \"\",\r\n      error: false,\r\n      loading: false,\r\n    };\r\n    this.handleSendMessage = this.handleSendMessage.bind(this);\r\n  }\r\n\r\n  handleSendMessage() {\r\n    const headers = new Headers();\r\n    headers.append(\"Authorization\", this.props.token);\r\n    this.setState({ loading: true });\r\n    headers.append(\"content-type\", \"application/json\");\r\n    const body = JSON.stringify({\r\n      message: this.state.message,\r\n      messageTo: this.state.selectedPerson._id,\r\n    });\r\n    fetch(`${url}/startConversation`, { method: \"POST\", headers, body })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          this.props.onSessionCreated();\r\n          this.props.onClose();\r\n          return;\r\n        }\r\n        this.setState({ loading: false, error: true });\r\n      })\r\n      .catch((e) => {\r\n        this.setState({ loading: false, error: true });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        className=\"comingFromLeftP5\"\r\n        open={true}\r\n        onClose={this.props.onClose}\r\n        dimmer=\"inverted\"\r\n      >\r\n        <Modal.Header style={{ fontFamily: \"poppins\" }}>\r\n          Start New Conversations\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {this.state.selectedPerson ? (\r\n              <SelectedPerson\r\n                firstName={this.state.selectedPerson.firstName}\r\n                LastName={this.state.selectedPerson.LastName}\r\n                profilephoto={this.state.selectedPerson.profilephoto}\r\n                cancelSelected={() => {\r\n                  this.setState({ selectedPerson: null, error: false });\r\n                }}\r\n              ></SelectedPerson>\r\n            ) : (\r\n              <React.Fragment>\r\n                <Search\r\n                  forConversation={true}\r\n                  alreadyConnectedUsers={this.props.alreadyConnectedUsers}\r\n                  personSelected={(person) => {\r\n                    this.setState({ selectedPerson: person });\r\n                  }}\r\n                ></Search>\r\n                <div style={{ fontWeight: \"bold\", fontFamily: \"poppins\" }}>\r\n                  Search For People....\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n          {this.state.selectedPerson ? (\r\n            <div\r\n              className=\"comingFromLeftP5\"\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                width: \"100%\",\r\n                margin: 20,\r\n              }}\r\n            >\r\n              <input\r\n                value={this.state.message}\r\n                style={{\r\n                  boxShadow: \"none\",\r\n                  border: \"1px solid black\",\r\n                  borderRadius: 3,\r\n                }}\r\n                onChange={(e) => {\r\n                  this.setState({ message: e.target.value, error: false });\r\n                }}\r\n                className=\"chatInputField\"\r\n                placeholder={`Say hi To ${this.state.selectedPerson.firstName} 👋`}\r\n              ></input>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {this.state.loading ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"10vh\",\r\n              }}\r\n            >\r\n              <CircularProgress style={{ color: \"black\" }}></CircularProgress>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {this.state.error ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"20vh\",\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"poppins\",\r\n                fontSize: 20,\r\n              }}\r\n            >\r\n              Error Sending Message\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Modal.Content>\r\n        {this.state.selectedPerson ? (\r\n          <Modal.Actions>\r\n            <Button\r\n              style={{ marginBottom: 10 }}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              disabled={this.state.message.length === 0}\r\n              onClick={this.handleSendMessage}\r\n            >\r\n              Send\r\n            </Button>\r\n            <Button\r\n              style={{ marginBottom: 10 }}\r\n              onClick={() => this.props.onClose()}\r\n            >\r\n              close\r\n            </Button>\r\n          </Modal.Actions>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction SelectedPerson({ profilephoto, firstName, LastName, cancelSelected }) {\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"comingFromRightP5\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Avatar src={profilephoto} style={{ marginRight: 10 }}></Avatar>\r\n        <div style={{ fontFamily: \"poppins\", fontWeight: \"bold\" }}>\r\n          {firstName + \" \" + LastName}\r\n        </div>\r\n        <IconButton\r\n          onClick={() => {\r\n            cancelSelected();\r\n          }}\r\n        >\r\n          <CloseOutlined></CloseOutlined>\r\n        </IconButton>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({ token: state.userReducer.token }))(\r\n  AddConversation\r\n);\r\n","var blueGrey = {\n  50: '#eceff1',\n  100: '#cfd8dc',\n  200: '#b0bec5',\n  300: '#90a4ae',\n  400: '#78909c',\n  500: '#607d8b',\n  600: '#546e7a',\n  700: '#455a64',\n  800: '#37474f',\n  900: '#263238',\n  A100: '#cfd8dc',\n  A200: '#b0bec5',\n  A400: '#78909c',\n  A700: '#455a64'\n};\nexport default blueGrey;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0px -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0px -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: you need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: you need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'buffer', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');"],"sourceRoot":""}