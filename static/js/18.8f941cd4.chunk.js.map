{"version":3,"sources":["components/NearBy/Problems/problems.jsx","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","components/NearBy/Problems/forComp/forComp.jsx","components/NearBy/Problems/forTablet/forTab.jsx","components/NearBy/Problems/forMobile/forMob.jsx"],"names":["theme","createMuiTheme","palette","primary","orange","secondary","main","filterMenu","type","name","sortMenu","connect","state","token","userReducer","id","props","useState","isError","setError","isLoading","setLoading","pageNo","setPageNo","Problems","setProblems","requestMade","setRequestMade","totalProblems","setTotal","whichState","setState","newComp","setNewComp","getProblems","options","a","getNearByProblems","response","ok","json","problems","count","elAnchor","setElAnchor","isSpeedDialOpen","setSpeedDial","scrollDirection","setScrollDirection","current","prev","filter","setFilter","sortBy","setSortBy","useEffect","socket","_callbacks","$complaint","on","data","action","open","autoHideDuration","onClose","ContentProps","style","fontFamily","fontSize","transitionDuration","message","anchorOrigin","vertical","horizontal","color","onClick","red","onUpdate","e","visibility","calculations","direction","anchorEl","Boolean","map","item","key","width","checked","fontWeight","position","right","bottom","zIndex","ariaLabel","icon","hidden","onOpen","tooltipTitle","tooltipOpen","currentTarget","Responsive","onlyComputer","deviceType","problemsCount","onlyTablet","onlyMobile","FormControlContext","React","useFormControl","ForComp","container","sm","length","status","title","marginTop","display","justifyContent","marginBottom","Math","floor","page","onChange","window","scrollTo","height","pointing","siblingRange","onPageChange","event","activePage","totalPages","boundaryRange","size","firstItem","lastItem","margin","textAlign"],"mappings":"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","file":"static/js/18.8f941cd4.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Responsive, Visibility } from \"semantic-ui-react\";\r\nimport ForComp from \"./forComp/forComp\";\r\nimport ForTab from \"./forTablet/forTab\";\r\nimport ForMob from \"./forMobile/forMob\";\r\nimport { getNearByProblems } from \"../../../ApiRequests/request\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { SpeedDial, SpeedDialAction } from \"@material-ui/lab\";\r\nimport {\r\n  ThemeProvider,\r\n  Menu,\r\n  MenuItem,\r\n  createMuiTheme,\r\n  Button,\r\n  Checkbox,\r\n  Zoom,\r\n  Snackbar,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { orange, blue, red } from \"@material-ui/core/colors\";\r\nimport {\r\n  Filter,\r\n  Sort,\r\n  ListAlt,\r\n  Close,\r\n  RotateRightOutlined,\r\n} from \"@material-ui/icons\";\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: orange,\r\n    secondary: {\r\n      main: \"rgba(255,255,255,0.5)\",\r\n    },\r\n  },\r\n});\r\n\r\nconst filterMenu = [\r\n  { type: \"none\", name: \"Show All\" },\r\n  // { type: \"upperAuth\", name: \"Visible To Faculty ?\" },\r\n  // { type: \"nonUpperAuth\", name: \"Not Visible To Faculty\" },\r\n  { type: \"public\", name: \"Public\" },\r\n  { type: \"anonymous\", name: \"Anonymous\" },\r\n];\r\nconst sortMenu = [\r\n  { type: \"latest\", name: \"Latest\" },\r\n  { type: \"oldest\", name: \"Oldest\" },\r\n  // { type: \"upVotes\", name: \"By UpVotes\" },\r\n  // { type: \"downVotes\", name: \"By DownVotes\" },\r\n];\r\n\r\nconst Problems = (props) => {\r\n  const [isError, setError] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [Problems, setProblems] = useState([]);\r\n  const [requestMade, setRequestMade] = useState(0);\r\n  const [totalProblems, setTotal] = useState(0);\r\n  const [whichState, setState] = useState(null);\r\n  const [newComp, setNewComp] = useState(false);\r\n  const getProblems = async (pageNo, options) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await getNearByProblems(\r\n        props.token,\r\n        (pageNo - 1) * 10,\r\n        options\r\n      );\r\n      if (response.ok) {\r\n        const { problems, count } = await response.json();\r\n        if (problems) {\r\n          setProblems(problems);\r\n          setTotal(count);\r\n          setLoading(false);\r\n        }\r\n        return;\r\n      }\r\n      setLoading(false);\r\n      setError(true);\r\n    } catch (e) {\r\n      setLoading(false);\r\n      setError(true);\r\n    }\r\n  };\r\n  const [elAnchor, setElAnchor] = useState(null);\r\n  const [isSpeedDialOpen, setSpeedDial] = useState(false);\r\n  const [scrollDirection, setScrollDirection] = useState(\"up\");\r\n  const [filter, setFilter] = useState({ current: \"none\", prev: \"none\" });\r\n  const [sortBy, setSortBy] = useState({ current: \"latest\", prev: \"latest\" });\r\n\r\n  useEffect(() => {\r\n    if (props.socket && !props.socket._callbacks.$complaint) {\r\n      props.socket.on(\"complaint\", (data) => {\r\n        if (data.action === \"added\") {\r\n          setNewComp(true);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (requestMade === 0) {\r\n      getProblems(pageNo, { sortBy: sortBy.current, filter: filter.current });\r\n      setRequestMade(1);\r\n    }\r\n\r\n    if (filter.current !== filter.prev || sortBy.current !== sortBy.prev) {\r\n      getProblems(1, { sortBy: sortBy.current, filter: filter.current });\r\n      setPageNo(1);\r\n      setFilter({ ...filter, prev: filter.current });\r\n      setSortBy({ ...sortBy, prev: sortBy.current });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        open={newComp}\r\n        autoHideDuration={6000}\r\n        onClose={() => {\r\n          setNewComp(false);\r\n        }}\r\n        ContentProps={{\r\n          style: { fontFamily: \"poppins\", fontSize: 16 },\r\n        }}\r\n        transitionDuration={300}\r\n        message=\"There maybe new complaints\"\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        action={\r\n          <Fragment>\r\n            <IconButton\r\n              style={{ color: \"white\" }}\r\n              onClick={() => {\r\n                getProblems(1, { sortBy: \"latest\", filter: \"none\" });\r\n                setFilter({ ...filter, prev: filter.current });\r\n                setSortBy({ ...sortBy, prev: sortBy.current });\r\n                setNewComp(false);\r\n              }}\r\n            >\r\n              <RotateRightOutlined></RotateRightOutlined>\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => {\r\n                setNewComp(false);\r\n              }}\r\n              style={{ color: red[600] }}\r\n            >\r\n              <Close></Close>\r\n            </IconButton>\r\n          </Fragment>\r\n        }\r\n      ></Snackbar>\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <Visibility\r\n          onUpdate={(e, visibility) => {\r\n            setScrollDirection(visibility.calculations.direction);\r\n          }}\r\n        >\r\n          <Menu\r\n            anchorEl={elAnchor}\r\n            open={Boolean(elAnchor)}\r\n            onClose={() => {\r\n              setElAnchor(null);\r\n              setState(null);\r\n            }}\r\n          >\r\n            {whichState === \"filter\"\r\n              ? filterMenu.map((item) => {\r\n                  return (\r\n                    <MenuItem\r\n                      key={item.name}\r\n                      style={{ width: 200 }}\r\n                      onClick={() => {\r\n                        setFilter({ ...filter, current: item.type });\r\n                        setElAnchor(null);\r\n                        setSpeedDial(false);\r\n                      }}\r\n                    >\r\n                      <Checkbox\r\n                        checked={filter.current === item.type}\r\n                        color=\"primary\"\r\n                      ></Checkbox>\r\n                      <div\r\n                        style={{\r\n                          fontFamily: \"poppins\",\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 13,\r\n                        }}\r\n                      >\r\n                        {item.name}\r\n                      </div>\r\n                    </MenuItem>\r\n                  );\r\n                })\r\n              : sortMenu.map((item) => {\r\n                  return (\r\n                    <MenuItem\r\n                      style={{ width: 200 }}\r\n                      key={item.name}\r\n                      onClick={() => {\r\n                        setSortBy({ ...sortBy, current: item.type });\r\n                        setElAnchor(null);\r\n                        setSpeedDial(false);\r\n                      }}\r\n                    >\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name={item.type}\r\n                        checked={sortBy.current === item.type}\r\n                      ></Checkbox>\r\n                      <div\r\n                        style={{\r\n                          fontFamily: \"poppins\",\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 13,\r\n                        }}\r\n                      >\r\n                        {item.name}\r\n                      </div>\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n          </Menu>\r\n\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              right: \"2%\",\r\n              bottom: \"10%\",\r\n              zIndex: 100,\r\n            }}\r\n          >\r\n            <SpeedDial\r\n              ariaLabel=\"filter and sorter\"\r\n              icon={<ListAlt style={{ color: \"white\" }}></ListAlt>}\r\n              open={isSpeedDialOpen}\r\n              color=\"secondary\"\r\n              direction={\"up\"}\r\n              hidden={scrollDirection !== \"up\" && !isSpeedDialOpen}\r\n              onClose={() => {\r\n                setSpeedDial(false);\r\n              }}\r\n              onOpen={() => {\r\n                setSpeedDial(true);\r\n              }}\r\n            >\r\n              <SpeedDialAction\r\n                icon={<Filter></Filter>}\r\n                tooltipTitle=\"Filters\"\r\n                tooltipOpen\r\n                onClick={(e) => {\r\n                  setState(\"filter\");\r\n                  setElAnchor(e.currentTarget);\r\n                }}\r\n              ></SpeedDialAction>\r\n              <SpeedDialAction\r\n                onClick={(e) => {\r\n                  setState(\"sort\");\r\n                  setElAnchor(e.currentTarget);\r\n                }}\r\n                tooltipOpen\r\n                tooltipTitle=\"SortBy\"\r\n                icon={<Sort></Sort>}\r\n              ></SpeedDialAction>\r\n            </SpeedDial>\r\n          </div>\r\n          <Responsive {...Responsive.onlyComputer}>\r\n            <ForComp\r\n              deviceType={\"comp\"}\r\n              Problems={Problems}\r\n              id={props.id}\r\n              pageNo={pageNo}\r\n              setPageNo={(pageNo) => {\r\n                getProblems(pageNo, {\r\n                  sortBy: sortBy.current,\r\n                  filter: filter.current,\r\n                });\r\n                setPageNo(pageNo);\r\n              }}\r\n              problemsCount={totalProblems}\r\n              isError={isError}\r\n              isLoading={isLoading}\r\n              {...props}\r\n            ></ForComp>\r\n          </Responsive>\r\n          <Responsive {...Responsive.onlyTablet}>\r\n            <ForTab\r\n              {...props}\r\n              deviceType={\"tab\"}\r\n              Problems={Problems}\r\n              id={props.id}\r\n              pageNo={pageNo}\r\n              setPageNo={(pageNo) => {\r\n                getProblems(pageNo, {\r\n                  sortBy: sortBy.current,\r\n                  filter: filter.current,\r\n                });\r\n                setPageNo(pageNo);\r\n              }}\r\n              problemsCount={totalProblems}\r\n              isError={isError}\r\n              isLoading={isLoading}\r\n            ></ForTab>\r\n          </Responsive>\r\n          <Responsive {...Responsive.onlyMobile}>\r\n            <ForMob\r\n              {...props}\r\n              deviceType={\"mob\"}\r\n              Problems={Problems}\r\n              id={props.id}\r\n              pageNo={pageNo}\r\n              setPageNo={(pageNo) => {\r\n                getProblems(pageNo, {\r\n                  sortBy: sortBy.current,\r\n                  filter: filter.current,\r\n                });\r\n                setPageNo(pageNo);\r\n              }}\r\n              problemsCount={totalProblems}\r\n              isError={isError}\r\n              isLoading={isLoading}\r\n            ></ForMob>\r\n          </Responsive>\r\n        </Visibility>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.userReducer.token,\r\n    id: state.userReducer.id,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Problems);\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import React from \"react\";\r\nimport { Grid, CircularProgress } from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport RenderProblems from \"../renderProblems\";\r\n// import { Pagination } from \"semantic-ui-react\";\r\nimport { Result } from \"antd\";\r\nimport { CenterStuff } from \"../../../Person/OthersProfile/profile/Profile\";\r\n\r\nconst ForComp = (props) => {\r\n  const { problemsCount } = props;\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item sm={3}></Grid>\r\n\r\n      <Grid item sm={6}>\r\n        {props.Problems.length !== 0 && !props.isLoading ? (\r\n          <div\r\n            style={{ marginTop: 10, display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <RenderProblems {...props}></RenderProblems>\r\n          </div>\r\n        ) : !props.isError && !props.isLoading ? (\r\n          <Result\r\n            status=\"info\"\r\n            title=\"No Problems Here! Check Again Later...\"\r\n          ></Result>\r\n        ) : props.isLoading ? (\r\n          \"\"\r\n        ) : (\r\n          <Result\r\n            status=\"error\"\r\n            title=\"There's Some Error Fetching Data From The Server\"\r\n          ></Result>\r\n        )}\r\n\r\n        {problemsCount > 10 && !props.isLoading ? (\r\n          <CenterStuff style={{ marginTop: 100, marginBottom: 300 }}>\r\n            <Pagination\r\n              count={Math.floor(problemsCount / 10) + 1}\r\n              page={props.pageNo}\r\n              onChange={(e, page) => {\r\n                window.scrollTo(0, 0);\r\n                props.setPageNo(page);\r\n              }}\r\n            ></Pagination>\r\n          </CenterStuff>\r\n        ) : (\r\n          <div style={{ marginBottom: 100, marginTop: 100 }}></div>\r\n        )}\r\n        {props.isLoading ? (\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <CircularProgress\r\n              style={{\r\n                width: 100,\r\n                height: 100,\r\n                marginTop: 200,\r\n                color: \"black\",\r\n              }}\r\n            ></CircularProgress>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item sm={3}></Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ForComp;\r\n\r\n// <div\r\n//   style={{\r\n//     display: \"flex\",\r\n//     justifyContent: \"center\",\r\n//     marginTop: 10,\r\n//     marginBottom: 100,\r\n//   }}\r\n// >\r\n//   <Pagination\r\n//     pointing\r\n//     secondary\r\n//     siblingRange={2}\r\n//     onPageChange={(event, { activePage }) => {\r\n//       props.setPageNo(activePage);\r\n//     }}\r\n//     activePage={props.pageNo}\r\n//     totalPages={Math.floor(problemsCount / 10) + 1}\r\n//     boundaryRange={1}\r\n//   ></Pagination>\r\n// </div>\r\n","import React, { useState } from \"react\";\r\nimport { Grid, CircularProgress, Divider } from \"@material-ui/core\";\r\nimport RenderProblems from \"../renderProblems\";\r\nimport { Pagination } from \"semantic-ui-react\";\r\nimport { Result } from \"antd\";\r\nimport { CenterStuff } from \"../../../Person/OthersProfile/profile/Profile\";\r\n\r\nconst ForComp = (props) => {\r\n  const { problemsCount } = props;\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item sm={1}></Grid>\r\n      <Grid item sm={10}>\r\n        {props.Problems.length !== 0 && !props.isLoading ? (\r\n          <RenderProblems {...props}></RenderProblems>\r\n        ) : !props.isError && !props.isLoading ? (\r\n          <Result\r\n            status=\"info\"\r\n            title=\"No Problems Here! Check Again Later...\"\r\n          ></Result>\r\n        ) : props.isLoading ? (\r\n          \"\"\r\n        ) : (\r\n          <Result\r\n            status=\"error\"\r\n            title=\"There's Some Error Fetching Data From The Server\"\r\n          ></Result>\r\n        )}\r\n\r\n        {problemsCount > 10 && !props.isLoading ? (\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Pagination\r\n              pointing\r\n              secondary\r\n              siblingRange={0}\r\n              onPageChange={(event, { activePage }) => {\r\n                window.scrollTo(0, 0);\r\n                props.setPageNo(activePage);\r\n              }}\r\n              activePage={props.pageNo}\r\n              totalPages={Math.floor(problemsCount / 10) + 1}\r\n              boundaryRange={1}\r\n            ></Pagination>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {props.isLoading ? (\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            {\" \"}\r\n            <CircularProgress\r\n              style={{\r\n                width: 100,\r\n                height: 100,\r\n                marginTop: 200,\r\n                color: \"black\",\r\n              }}\r\n            ></CircularProgress>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ForComp;\r\n","import React from \"react\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport RenderProblems from \"../renderProblems\";\r\nimport { Pagination, Divider } from \"semantic-ui-react\";\r\nimport { Result } from \"antd\";\r\n\r\nconst ForComp = (props) => {\r\n  const { problemsCount } = props;\r\n\r\n  return (\r\n    <div>\r\n      {props.Problems.length !== 0 && !props.isLoading ? (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <RenderProblems {...props}></RenderProblems>\r\n        </div>\r\n      ) : !props.isError && !props.isLoading ? (\r\n        <Result\r\n          status=\"info\"\r\n          title=\"No Problems Here! Check Again Later...\"\r\n        ></Result>\r\n      ) : props.isLoading ? (\r\n        \"\"\r\n      ) : (\r\n        <Result\r\n          status=\"error\"\r\n          title=\"There's Some Error Fetching Data From The Server\"\r\n        ></Result>\r\n      )}\r\n\r\n      {problemsCount > 10 && !props.isLoading ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: 10,\r\n            marginBottom: 100,\r\n          }}\r\n        >\r\n          <Pagination\r\n            size=\"tiny\"\r\n            firstItem={null}\r\n            lastItem={null}\r\n            secondary\r\n            siblingRange={0}\r\n            onPageChange={(event, { activePage }) => {\r\n              window.scrollTo(0, 0);\r\n              props.setPageNo(activePage);\r\n            }}\r\n            activePage={props.pageNo}\r\n            totalPages={Math.floor(problemsCount / 10) + 1}\r\n            boundaryRange={1}\r\n          ></Pagination>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {props.isLoading ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            margin: \"20%\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress\r\n            style={{\r\n              width: 100,\r\n              height: 100,\r\n              textAlign: \"center\",\r\n              color: \"black\",\r\n            }}\r\n          ></CircularProgress>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForComp;\r\n"],"sourceRoot":""}