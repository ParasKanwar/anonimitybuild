{"version":3,"sources":["components/Person/MyProfile/MyProfile.jsx","components/Edit/Edit.jsx"],"names":["MyProfile","state","userInfo","loading","edit","editType","childProps","username","headers","Headers","append","localStorage","getItem","fetch","url","method","then","res","a","json","setState","this","editField","open","onClose","style","marginTop","fontSize","fontFamily","fontWeight","color","Responsive","onlyComputer","marginBottom","setType","type","openEdit","editable","deviceType","onlyTablet","onlyMobile","React","PureComponent","connect","theme","createMuiTheme","palette","primary","orange","Edit","props","useState","inputText","setText","setLoading","setError","basic","hidden","variant","InputProps","label","InputLabelProps","fullWidth","value","onChange","e","target","onClick","body","JSON","stringify","status","window","location","reload","catch","handleUpdate","disabled","Boolean","length"],"mappings":"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","file":"static/js/23.c0b96666.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Responsive } from \"semantic-ui-react\";\r\nimport { ProfileInfo, CenterStuff } from \"../OthersProfile/profile/Profile\";\r\nimport { CircularProgress, Typography } from \"@material-ui/core\";\r\nimport url from \"../../../strings/url\";\r\nimport { Edit } from \"../../Edit/Edit\";\r\nclass MyProfile extends React.PureComponent {\r\n  state = {\r\n    userInfo: {},\r\n    loading: true,\r\n    edit: false,\r\n    editType: null,\r\n  };\r\n\r\n  childProps = {\r\n    username: \"paraskanwar\",\r\n  };\r\n  componentDidMount() {\r\n    const headers = new Headers();\r\n    headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n    fetch(`${url}/getMyProfile`, { method: \"GET\", headers }).then(\r\n      async (res) => {\r\n        this.setState({ loading: false, userInfo: await res.json() });\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    const { editType, loading, userInfo, edit } = this.state;\r\n    return (\r\n      <div>\r\n        {edit ? (\r\n          <Edit\r\n            editField={editType}\r\n            open={edit}\r\n            onClose={() => {\r\n              this.setState({ edit: false });\r\n            }}\r\n          ></Edit>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <CenterStuff style={{ marginTop: 10 }}>\r\n          <Typography\r\n            style={{ fontSize: 30, fontFamily: \"poppins\", fontWeight: \"bold\" }}\r\n          >\r\n            My Profile\r\n          </Typography>\r\n        </CenterStuff>\r\n        {loading ? (\r\n          <CenterStuff style={{ marginTop: \"20%\" }}>\r\n            <CircularProgress style={{ color: \"black\" }}></CircularProgress>\r\n          </CenterStuff>\r\n        ) : (\r\n          <div>\r\n            <Responsive {...Responsive.onlyComputer}>\r\n              <CenterStuff style={{ marginTop: 10, marginBottom: 10 }}>\r\n                <ProfileInfo\r\n                  setType={(type) => {\r\n                    this.setState({ editType: type });\r\n                  }}\r\n                  {...userInfo}\r\n                  openEdit={() => {\r\n                    this.setState({ edit: true });\r\n                  }}\r\n                  editable={true}\r\n                  deviceType=\"com\"\r\n                ></ProfileInfo>\r\n              </CenterStuff>\r\n            </Responsive>\r\n            <Responsive {...Responsive.onlyTablet}>\r\n              <CenterStuff style={{ marginTop: 10, marginBottom: 10 }}>\r\n                <ProfileInfo\r\n                  setType={(type) => {\r\n                    this.setState({ editType: type });\r\n                  }}\r\n                  {...userInfo}\r\n                  openEdit={() => {\r\n                    this.setState({ edit: true });\r\n                  }}\r\n                  editable={true}\r\n                  deviceType=\"tab\"\r\n                ></ProfileInfo>\r\n              </CenterStuff>\r\n            </Responsive>\r\n            <Responsive {...Responsive.onlyMobile}>\r\n              <CenterStuff style={{ marginTop: \"5%\", marginBottom: \"20%\" }}>\r\n                <ProfileInfo\r\n                  setType={(type) => {\r\n                    this.setState({ editType: type });\r\n                  }}\r\n                  {...userInfo}\r\n                  openEdit={() => {\r\n                    this.setState({ edit: true });\r\n                  }}\r\n                  editable={true}\r\n                  deviceType=\"mob\"\r\n                ></ProfileInfo>\r\n              </CenterStuff>\r\n            </Responsive>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(MyProfile);\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button, ModalActions } from \"semantic-ui-react\";\r\nimport {\r\n  TextField,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { orange } from \"@material-ui/core/colors\";\r\nimport url from \"../../strings/url\";\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: orange,\r\n  },\r\n});\r\nexport const Edit = (props) => {\r\n  const [inputText, setText] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const handleUpdate = () => {\r\n    setLoading(true);\r\n    const body = JSON.stringify({ [props.editField]: inputText });\r\n    const headers = new Headers();\r\n    headers.append(\"Authorization\", localStorage.getItem(\"AnonymityToken#123\"));\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    fetch(`${url}/update/user`, { method: \"PATCH\", headers, body })\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          return window.location.reload();\r\n        }\r\n        setError(true);\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Modal basic open={props.open} onClose={() => props.onClose()}>\r\n        {loading ? (\r\n          <CircularProgress style={{ color: \"white\" }}></CircularProgress>\r\n        ) : (\r\n          <TextField\r\n            hidden={loading}\r\n            variant=\"standard\"\r\n            InputProps={{ style: { color: \"white\" } }}\r\n            label={`Enter New ${props.editField}`}\r\n            InputLabelProps={{ style: { color: \"white\" } }}\r\n            fullWidth\r\n            value={inputText}\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n            }}\r\n          ></TextField>\r\n        )}\r\n        <ModalActions>\r\n          <Button\r\n            color=\"black\"\r\n            onClick={() => {\r\n              props.onClose();\r\n              setLoading(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              handleUpdate();\r\n            }}\r\n            color=\"orange\"\r\n            disabled={Boolean(inputText.length === 0)}\r\n          >\r\n            Update\r\n          </Button>\r\n        </ModalActions>\r\n      </Modal>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n"],"sourceRoot":""}